[
    {
        "question": "1. Explain Rails Migration.",
        "answer": "A Rails migration is a tool for altering the database schema of an application. Instead of handling SQL scripts, you use a domain-specific language to define database modifications (DSL). Because the code is database-agnostic, you can quickly port your project to a different platform. Migrations can be rolled back and managed alongside your application source code.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "2. Explain the naming convention in Rails.",
        "answer": "Variables: All letters are lowercase, and words are separated by underscores.\nClass and Modules: Mixed case, no underscore, each word starts with an uppercase.\nDatabase Table: The database table name should have lowercase letters and underscore between words; all table names should be in the plural form.\nModel: Mixed-case, always has singular with the table name.\nController: Represented in plural form like OrdersController. Variables: All letters are lowercase, and words are separated by underscores. Variables: Class and Modules: Mixed case, no underscore, each word starts with an uppercase. Class and Modules: Database Table: The database table name should have lowercase letters and underscore between words; all table names should be in the plural form. Database Table: Model: Mixed-case, always has singular with the table name. Model: Controller: Represented in plural form like OrdersController. Controller:",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "3. What is ORM(Object-Relationship-Model).",
        "answer": "In Rails, the ORM or Object Relationship Model indicates that your classes are mapped to the database table, and objects are directly mapped to the table rows. The attributes and relationships of objects in an application may be easily stored and retrieved from a database using ORM, which requires less overall database access code and does not require writing SQL queries directly.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "4. What is the difference between false and nil in Ruby?",
        "answer": "True and false are boolean values in Ruby that signify yes and no, respectively. True is a TrueClass object, and False is a FalseClass object.\nNil is a special value in Ruby that represents the lack of any value. Nil is a NilClass object. Nothing or void is referred to as nil in Ruby. True and false are boolean values in Ruby that signify yes and no, respectively. True is a TrueClass object, and False is a FalseClass object. Nil is a special value in Ruby that represents the lack of any value. Nil is a NilClass object. Nothing or void is referred to as nil in Ruby.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "5. What is the difference between String and Symbol?",
        "answer": "Strings are any text typed between quote marks (\"this is a string,\" \"so is this,\" \"this too!\") and symbols are text that starts with a colon (: symbol). Strings and symbols, on the other hand, have diverse functions that make them valuable for different programming tasks. \"Scalar value objects used as identifiers, mapping immutable strings to fixed internal values,\" according to the Ruby definition. This essentially indicates that symbols are immutable strings.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "6. What command can you use to create a controller for the subject?",
        "answer": "Use the following command to build a controller for the subject: C:\\ruby\\library> ruby script/generate controller subject. C:\\ruby\\library> ruby script/generate controller subject.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "7. What do subdirectory app/controllers and app/helpers do?",
        "answer": "apps/controller: The controller classes are found in the app/controllers subfolder, which Rails searches for. A user's web request is handled by a controller.\napp/helpers: Any helper classes needed to assist the model, view, and controller classes are stored in the app/helpers subdirectory. This keeps the model, view, and controller code clean, simple, and focused. apps/controller: The controller classes are found in the app/controllers subfolder, which Rails searches for. A user's web request is handled by a controller. apps/controller: app/helpers: Any helper classes needed to assist the model, view, and controller classes are stored in the app/helpers subdirectory. This keeps the model, view, and controller code clean, simple, and focused. app/helpers:",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "8. What is a Rails Controller?",
        "answer": "  Your application's logical heart is the Rails controller. It orchestrates the user's interaction with the views and the model. A number of key ancillary functions are also housed in the controller, including: It is in charge of directing external requests to internal processes.\nIt controls caching, which can improve application performance by orders of magnitude.\nIt handles helper modules, which add functionality to view templates without adding code to them.\nIt keeps track of sessions, creating the impression that users are still interacting with our apps. It is in charge of directing external requests to internal processes. It controls caching, which can improve application performance by orders of magnitude. It handles helper modules, which add functionality to view templates without adding code to them. It keeps track of sessions, creating the impression that users are still interacting with our apps.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "9. What is Rails Active Record in Ruby on Rails?",
        "answer": "The Object/Relational Mapping (ORM) layer included with Rails is called Active Record. It roughly resembles the conventional ORM model, which goes like this: Tables correspond to classes.\nRows correspond to objects, and\nThe columns correspond to the attributes of the objects. Tables correspond to classes. Rows correspond to objects, and The columns correspond to the attributes of the objects. Active Records in Rails provide a connection and interface between relational database tables and Ruby computer code that manipulates database records.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "10. What is Ruby on Rails?",
        "answer": "Ruby is a high-level, interpreted programming language that supports a variety of programming paradigms.\nRails, on the other hand, is a framework that can be used to build web applications. Ruby is a high-level, interpreted programming language that supports a variety of programming paradigms. Rails, on the other hand, is a framework that can be used to build web applications.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "11. Explain how rail implements Ajax?",
        "answer": "The way Rails supports Ajax operations is simple and consistent. Different user actions force the browser to display a new web page (like any regular web application) or initiate an Ajax activity after the original web page has been produced and displayed. Some trigger is fired- This could be a user clicking on a button or link, a user changing data on a form or in a field, or just a recurring trigger (based on a timer).\nThe server is contacted by the web client- The XMLHttpRequest JavaScript function transmits data associated with the trigger to a server action handler. The data could be the checkbox ID, the text in an entry field, or the entire form.\nThe server performs the processing- The server-side action handler (Rails controller action) manipulates the data and sends an HTML fragment to the web client.\nThe HTML fragment is received by the client-side JavaScript- The client-side JavaScript which Rails generate automatically is used to alter a specific area of the current page's HTML, usually the content of an <div> element. Some trigger is fired- This could be a user clicking on a button or link, a user changing data on a form or in a field, or just a recurring trigger (based on a timer). Some trigger is fired- The server is contacted by the web client- The XMLHttpRequest JavaScript function transmits data associated with the trigger to a server action handler. The data could be the checkbox ID, the text in an entry field, or the entire form. The server is contacted by the web client- The server performs the processing- The server-side action handler (Rails controller action) manipulates the data and sends an HTML fragment to the web client. The server performs the processing- The HTML fragment is received by the client-side JavaScript- The client-side JavaScript which Rails generate automatically is used to alter a specific area of the current page's HTML, usually the content of an <div> element. The HTML fragment is received by the client-side JavaScript",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "12. What command is used to create a migration?",
        "answer": "To create migration command includes: C:\\ruby\\application>ruby script/generate migration table_name C:\\ruby\\application>ruby script/generate migration table_name",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "13. What does garbage collection do in Ruby on Rails?",
        "answer": "Garbage collection is a technique for controlling the amount of memory used by computer programs. Garbage collection and other memory management techniques, like reference counting, work by having the language keep track of which objects are in use by a program rather than the developer. This allows the programmer to concentrate on the business logic or other challenge at hand rather than the intricacies of memory allocation and release. This also aids program stability and security, as improper memory management can cause crashes, and memory management bugs account for a major fraction of security bugs.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "14. Explain Cross-Site Request Forgery (CSRF). How is Rails protected against it?",
        "answer": "Cross-Site Request Forgery (CSRF) is a typical online application attack that compromises a victim's authenticated session. This attack entails duping a target into executing unwanted actions on a website to which they have been authenticated. You must add \"protect from forgery\" to your ApplicationController to protect against CSRF attacks. Rails will now require a CSRF token in order to complete the request. Every form built using Rails forms builders includes a hidden field called CSRF token.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "15. How to define Instance Variable, Global Variable, and Class Variable in Ruby?",
        "answer": "Instance Variable in Ruby begins with– @\nClass variable in Ruby begins with– @@\nThe global variable in Ruby begins with– $ Instance Variable in Ruby begins with– @ @ Class variable in Ruby begins with– @@ @@ The global variable in Ruby begins with– $ $",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "16. What is the role of load and require in Ruby?",
        "answer": "load( )- We use load to execute code.\nrequire( )- We use require to import libraries. load( )- We use load to execute code. load( )- require( )- We use require to import libraries. require( )-",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "17. What are access modifiers in Ruby?",
        "answer": "Public: In this, all members are available to everyone to modify.\nPrivate: In this, only functions inside the class can access members.\nProtected: In this, the members can only be accessed by functions inside the subclass. Public: In this, all members are available to everyone to modify. Public: Private: In this, only functions inside the class can access members. Private: Protected: In this, the members can only be accessed by functions inside the subclass. Protected:",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "18. What is MVC and how does it work?",
        "answer": "The Model-View-Controller (MVC) architectural pattern divides an application into three logical components: model, view, and controller. Each of these components is designed to handle specific parts of application development. Model-View-Controller   The request initially goes to the controller, who then chooses a suitable view and interacts with the model, who then interacts with your database and sends the response to the controller, who then gives the output parameter to the view based on the response.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "1. What is the purpose of the rakefile available in the demo directory in Ruby?",
        "answer": "This brief questionnaire is designed to ensure that a developer is familiar with test-driven development. This file may be unfamiliar to a newbie. The rakefile, which is analogous to the makefile in Unix, is used to package and test Rail’s code. The rake utility, which comes with the Ruby installation, makes use of it.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "2. Explain the difference between ActiveSupport’s \"HashWithIndifferentAccess\" and Ruby’s \"Hash\"?",
        "answer": "The \"HashWithIndifferentAccess\" class treats symbol and string keys as equivalent, whereas Ruby's \"Hash\" class uses a tighter = = comparison on keys: thus a comparable string key will not get the value for a given symbol key.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "3. What is the difference between string and text in Rails?",
        "answer": "Both string and text save information of the \"string-type\" that you can freely write in. The number of characters you can enter in these fields differs between the two. The character limit for a string field is 255 characters, while the character limit for a text field is 30,000 characters.\nIf you wish to store data like addresses, names, or basic custom data, a string field is an excellent option. When you want to store information from a comment box on a form, or if you're importing a huge block of text, a text area field is an excellent solution. Both string and text save information of the \"string-type\" that you can freely write in. The number of characters you can enter in these fields differs between the two. The character limit for a string field is 255 characters, while the character limit for a text field is 30,000 characters. If you wish to store data like addresses, names, or basic custom data, a string field is an excellent option. When you want to store information from a comment box on a form, or if you're importing a huge block of text, a text area field is an excellent solution.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "4. Explain the difference between dynamic and static scaffolding.",
        "answer": "Dynamic Scaffolding                 Static Scaffolding\nAt runtime, it generates all of the content and user interface. To produce the data with their fields, it takes explicit entry in the command.\nIt allows you to create new, delete, and modify methods for usage in your application. In static scaffolding, It is not necessary for such generation to occur.\nIt does not require synchronization with a database. It necessitates the migration of the database. Dynamic Scaffolding                 Static Scaffolding\nAt runtime, it generates all of the content and user interface. To produce the data with their fields, it takes explicit entry in the command.\nIt allows you to create new, delete, and modify methods for usage in your application. In static scaffolding, It is not necessary for such generation to occur.\nIt does not require synchronization with a database. It necessitates the migration of the database. Dynamic Scaffolding                 Static Scaffolding Dynamic Scaffolding                 Static Scaffolding Dynamic Scaffolding Static Scaffolding At runtime, it generates all of the content and user interface. To produce the data with their fields, it takes explicit entry in the command.\nIt allows you to create new, delete, and modify methods for usage in your application. In static scaffolding, It is not necessary for such generation to occur.\nIt does not require synchronization with a database. It necessitates the migration of the database. At runtime, it generates all of the content and user interface. To produce the data with their fields, it takes explicit entry in the command. At runtime, it generates all of the content and user interface. To produce the data with their fields, it takes explicit entry in the command. It allows you to create new, delete, and modify methods for usage in your application. In static scaffolding, It is not necessary for such generation to occur. It allows you to create new, delete, and modify methods for usage in your application. In static scaffolding, It is not necessary for such generation to occur. It does not require synchronization with a database. It necessitates the migration of the database. It does not require synchronization with a database. It necessitates the migration of the database.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "5. What are strong parameters? Explain in brief.",
        "answer": "Many Rails apps employ Strong Parameters, also known as Strong Params, to strengthen the security of data supplied through forms. Strong parameters allow developers to determine which parameters are accepted and used in the controller. Any superfluous or potentially hazardous params will be ignored and successfully filtered out by allowing only the expected params. This is especially crucial when using Active Model bulk assignments, as numerous params might be provided at the same time.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "6. Does Ruby Support Single Inheritance/Multiple Inheritance Or Both?",
        "answer": "Ruby only supports single inheritance. It does not support multiple inheritance directly, but it supports something similar- mixins.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "7. What are the limits of Ruby on Rails?",
        "answer": "Ruby on Rails is a framework for building MVC-based CRUD web applications. Other programmers may find Rails unusable as a result of this. The following are some of the functionalities that Rails does not support. Databases with foreign keys.\nLinking to many databases at the same time.\nWeb services for soap.\nMultiple database servers are connected at the same time. Databases with foreign keys. Linking to many databases at the same time. Web services for soap. Multiple database servers are connected at the same time.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "8. What is the difference between observers and callbacks in Ruby on rails?",
        "answer": "Callback methods in Rails can only be called at specific moments in an object's life cycle, such as validation, creation, updating, deletion, and so on. The rails callback, unlike the rails observers, is only active for a brief time.\nRails observers are similar to callbacks, but they're used when a method isn't directly related to the object's life cycle. It can be attached or detached at any time and lives for a longer period of time. Callback methods in Rails can only be called at specific moments in an object's life cycle, such as validation, creation, updating, deletion, and so on. The rails callback, unlike the rails observers, is only active for a brief time. Rails observers are similar to callbacks, but they're used when a method isn't directly related to the object's life cycle. It can be attached or detached at any time and lives for a longer period of time.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "1. What is the problem with the following controller code? How would you fix it?",
        "answer": "class MyController < ApplicationController\n      def options\n        options = {}\n        available_option_keys = [:first_option, :second_option, :third_option]\n        all_keys = params.keys.map(&:to_sym)\n        set_option_keys = all_keys & available_option_keys\n        set_option_keys.each do |key|\n          options[key] = params[key]\n        end\n        options\n      end\n    end class MyController < ApplicationController\n      def options\n        options = {}\n        available_option_keys = [:first_option, :second_option, :third_option]\n        all_keys = params.keys.map(&:to_sym)\n        set_option_keys = all_keys & available_option_keys\n        set_option_keys.each do |key|\n          options[key] = params[key]\n        end\n        options\n      end\n    end class MyController < ApplicationController class MyController def options def options :first_option :second_option :third_option :to_sym do |key| end end end Converting user-supplied arguments to symbols is risky since symbols in Ruby are not garbage collected. An attacker may submit a series of requests containing random keys that would be converted to symbols, quickly draining your server's memory and bringing your site down. There are two possible solutions to this problem. The first is to use a slice to filter out non-option-key values from the params hash. This would seem as follows: params.slice(*available option keys) params.slice(*available option keys) Using String keys for your selections is an alternate, and some would argue a better solution. Unless you have a very high number of viable choice keys, using Symbol keys instead will not save you any memory.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "2. Write a function in Ruby to check if the string is a palindrome.",
        "answer": "def palindrome?(str)\n  str == str.reverse\nend def palindrome?(str)\n  str == str.reverse\nend def palindrome?(str) def palindrome? (str) end",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "3. What will be the output of the given code snippet?",
        "answer": "x, y, z = 12, 36, 72\n    puts \"The value of x is #{ x }.\"\n    puts \"The sum of x and y is #{ x + y }.\"\n    puts \"The average was #{ (x + y + z)/3 }.\" x, y, z = 12, 36, 72\n    puts \"The value of x is #{ x }.\"\n    puts \"The sum of x and y is #{ x + y }.\"\n    puts \"The average was #{ (x + y + z)/3 }.\" Output: Output: The value of x is 12.\nThe sum of x and y is 48.\nThe average was 40. The value of x is 12.\nThe sum of x and y is 48.\nThe average was 40. 12 and 48 40",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "4. What paths (HTTP verb and URL) will be defined by the following snippet in config/routes.rb?",
        "answer": "resources :posts do\n  member do\n    get 'comments'\n  end\n  collection do\n    post 'bulk_upload'\n  end\nend resources :posts do\n  member do\n    get 'comments'\n  end\n  collection do\n    post 'bulk_upload'\n  end\nend :posts do do 'comments' end do 'bulk_upload' end end Using the resource method to define routes will automatically generate routes for the standard seven restful actions: GET /posts\nPOST /posts\nGET /posts/new\nGET /posts/:id/edit\nGET /posts/:id\nPATCH/PUT /posts/:id\nDELETE /posts/:id GET /posts POST /posts GET /posts/new GET /posts/:id/edit GET /posts/:id PATCH/PUT /posts/:id DELETE /posts/:id",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "5. Given this input:",
        "answer": "x = [{\"a\" => 10},{\"b\" => 20},{\"c\" => 30}] x = [{\"a\" => 10},{\"b\" => 20},{\"c\" => 30}] \"a\" 10 \"b\" 20 \"c\" 30 How will you obtain the following: One array containing all keys\nAnother containing all values One array containing all keys One array containing all keys Another containing all values Another containing all values The code will look something like this: y = x[0].merge(x[1]).merge(x[2])\n\ny.keys                   # will return all keys\ny.values                 # will return all values y = x[0].merge(x[1]).merge(x[2])\n\ny.keys                   # will return all keys\ny.values                 # will return all values 0 1 2 # will return all keys # will return all values Conclusion The above Ruby on Rails Interview Questions can help you a lot in learning and passing your interviews. The article is for you if you are a fresher looking for a job in Ruby on Rails or an experienced person who wants to better your skills in Ruby on rails. I hope the article serves you well. Backend Developer Skills\nTop Backend Technologies\nTop Skills To Become a Full Stack Developer\nTechnical Interview Questions Backend Developer Skills Backend Developer Skills Top Backend Technologies Top Backend Technologies Top Skills To Become a Full Stack Developer Top Skills To Become a Full Stack Developer Technical Interview Questions Technical Interview Questions",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "1. What does a Ruby on Rails developer do?",
        "answer": "A Ruby on Rails developer is in charge of building Ruby-based server-side web application logic for the Rails framework. Roles and responsibilities of a Ruby on rails developer include New web application design and development.\nExisting web apps' maintenance and troubleshooting.\nWriting and maintaining dependable Ruby code\nBringing data storage options together.\nBack-end component development.\nFinding and eliminating constraints and bugs.\nAdditional web servers are connected to apps.\nAPI management. New web application design and development. Existing web apps' maintenance and troubleshooting. Writing and maintaining dependable Ruby code Bringing data storage options together. Back-end component development. Finding and eliminating constraints and bugs. Additional web servers are connected to apps. API management.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "2. Is Ruby on Rails in demand?",
        "answer": "Ruby on Rails has been around for a long time and has proven reliable. Although its popularity has waned over time, hundreds of developers continue to trust and enjoy working with it.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "3. How much does a Ruby on Rails developer make?",
        "answer": "According to the ambition box, the average yearly income for a Ruby on Rails Developer in India is 6.5 lakhs, with salaries ranging from 1.9 lakhs to 15.0 lakhs.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "4. Is Ruby on rails good for freelancing?",
        "answer": "With all the frameworks and libraries available (such as Rails, Merb and Sintara), Ruby is definitely great for freelancing. Its focus on clean code and object-oriented syntax, and a strong community will also help you a lot in your freelancing career.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "5. What is something you like about working with Rails?",
        "answer": "Ruby on Rails is fantastic because it simplifies basic web development processes, allowing developers to concentrate on their app's functionality. To do simple procedures, you no longer need to create endless database queries.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "6. Is Ruby front end or backend?",
        "answer": "Ruby On Rails is a front-end and back-end framework. Because Ruby on Rails covers both the frontend and the backend, you may consider yourself a true full-stack developer.",
        "reference": "interviewbit.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "1) What is Ruby on Rails?",
        "answer": "Ruby on Rails is a server-side web application development framework written in Ruby language. It allows you to write less code than other languages and frameworks. It includes everything needed to create database-backed web applications according to MVC pattern.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "2) Explain DRY in Rails?",
        "answer": "DRY stands for Don't Repeat Yourself. It is a principle of software development which states that \"Every piece of knowledge must have an authoritative, unambiguous, single representation within a system. If the same part of the code will not repeat again and again, the code will be more maintainable, extensible and less buggy.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "3) What is the current version of Ruby on rails?",
        "answer": "Rails 5.0.1 was released on December 21, 2016. It introduced Action cable, Turbolinks 5 and API mode.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "4) Explain CoC in Rails",
        "answer": "DRY stands for Convention over Configuration. It provides different opinions on the best way to do many things in a web application.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "5) Who developed Rails?",
        "answer": "Ruby on Rails was created by David Heinemeier Hansson (DHH).\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "6) What are the three methods to install Ruby on Rails?",
        "answer": "There are three methods to install Ruby on Rails:\nADVERTISEMENT\nUsing rbenv (recommended)\nUsing rvm\nFrom source\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Ruby on Rails can be used with either a simple text editor or with an IDE.\nSome of the Rails IDEs are listed below:\nTextMate\nE\nIntellij IDEA\nNetBeans\nEclipse\nHeroku\nAptana Studio\nRubyMine\nKuso IDE\nKomodo\nRedcar\nArcadia\nIce Coder\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "8) What is Rails script? Name some of them?",
        "answer": "Rails provide some excellent tools that are used to develop a Rails application. These tools are packaged as scripts from command line.\nFollowing are the most useful Rails scripts used in Rails application:\nRails Console\nWEBrick Web Server\nGenerators\nMigrations\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Some of the features that are not supported by Ruby on rails are:\nLinking to multiple databases.\nInclusion of foreign keys in database.\nEstablishing connection to various databases at a time.\nWeb services related to Soap.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "10) What is the use of the super function in Ruby on Rails?",
        "answer": "The super function in Ruby is used to invoke the original method. It calls the superclass implementation of the current method.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "11) What is Active Record in Rails?",
        "answer": "A perfect ORM hides the details of a database's relational data behind the object hierarchy. In Rails, ORM is implemented by Active Record which is one of the most critical components of the Rails library.\nWhile using Active Record, you have to no longer deal with database constructs like tables, rows or columns. Your application only deals with classes, attributes, and objects.\n\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "12) Who designed Active Record in Rails?",
        "answer": "Active Record is based on a design pattern created by Martin Fowler. From this design pattern only, the Active Record got its name. Its code works very well even with less number of lines. It is quite easy to use. Active Record Rails application does not need any configuration at all if proper naming schemes are followed in your database and classes.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "13) Explain model in Rails?",
        "answer": "The models are classes in Rails. This subsystem is implemented in ActiveRecord library. This library provides an interface between database tables and Ruby program code that manipulates database records.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "14) Which command is used to create a migration?",
        "answer": "C:\\ruby\\application>ruby script/generate migration table_name  \n</div>  \n<hr/>  \n<h3 class=\"h3\">15) Explain the role of 'defined' operator. </h3>  \n<p>The 'defined' operator is used to check whether the expression passed has been defined or not.</p>  \n<hr/>  \n<h3 class=\"h3\">16) What is the purpose of the super call? </h3>  \n<p>When we make a call to super, the parent method which has the same arguments as child one is invoked.</p>  \n<hr/>  \n<h3 class=\"h3\">17) Write the syntax of each iterator.</h3>  \n<p>The syntax of each iterator is</p>  \n<div class=\"codeblock\"><textarea name=\"code\" class=\"ruby\">  \ncollection.each do|vairable|  \ncode  \nend",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "18) What are the hashes?",
        "answer": "A hash is a collection of key-value pairs.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "19) How are blocks created?",
        "answer": "The syntax for creation of block is:\nblock_name  \n{  \n    ??.  \n    ??  \n}",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "20) What is the naming convention for variables?",
        "answer": "The name of the variable is given in the lower case, and an underscore separates the different words within the name.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "21) What is the main difference between procs and blocks?",
        "answer": "Procs are objects whereas Blocks are a part of the code.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "What is the difference between the two?",
        "answer": "The single quote string representation is not allowed to perform string interpolation and process the ASCII escape codes.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "With the help of rails migration, Ruby can make changes to the database schema.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "24) How would you create a controller for the subject?",
        "answer": "You have to use the following command to create a controller for subject:\nC:\\ruby\\library> ruby script/generate controller subject",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "25) Explain view in Rails?",
        "answer": "View represent data in a particular format in an application for the users. This subsystem is implemented in ActionView library. This library is an Embedded Ruby (Erb) based system which define presentation templates for data presentation.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "26) Explain the controller in Rails?",
        "answer": "The Controller directs traffic to views and models. This subsystem is implemented in ActionController library. This library is a data broker sitting between ActiveRecord and ActionView.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "27) Explain RVM in Rails?",
        "answer": "RVM stands for Ruby Version Manager. It is a command line tool which allows you to install, manage and work with different Ruby environments efficiently. With RVM, you can easily install different versions of Ruby and quickly switch between them.\nSyntax:\nThe basic syntax of RVM is,\nrvm command_options command ruby_to_act_on   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "28) What are Gemsets in Rails?",
        "answer": "Gems in Ruby are used to extend capabilities of core Ruby distribution. They add specific functionalities in programs. Some gems are also installed with Ruby installation to provide specific environments are called gemsets. You can have different versions of the same gem installed in a system.\nTo know all the gems available in Ruby, use the following command:\nrvm gemset list   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "To upgrade RVM, use the following command:\nrvm et head   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Rails bundler provides a constant environment for applications by tracking suitable gems that are needed.\nTo use bundler, use the following command:\ngem install bundler   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "31) Why we use migration in Rails?",
        "answer": "Migration alters the database schema for an application in a consistent and organized manner by using DSL.\nSyntax to create a migration file:\napplication_dir> rails generate migration table_name   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "rake db:migrate   \nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "33) How does router work in Rails?",
        "answer": "The Rails router recognizes URLs and dispatches them to a controller's action. It also generates paths and URLs. Rails router deals with URLs differently from other language routers. It determines controller, parameters, and action for the request.\nMain purpose of Rails routers is:\nConnecting URLs to code\nGenerating paths and URLs from code\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "REST is very beneficial to understand routes in Rails. It stands for Representational State Transfer. Several HTTP methods are used with REST to represent the types of actions performed by the user or application.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "The Nested scaffold is the command that generates a set of correctly working nested resource for Rails 4.2 and 5.\nFeatures\nGenerates a nested child resource with a single command\nGenerates a beautifully working bunch of code\nAutomatically generates appropriate model associations for ActiveRecord\nHaml ready\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "There are three ways to create an HTTP response from the controller's point of view:\nCall render to create a full response to send back to the browser\nCall redirect_to to send an HTTP redirect status code to the browser\nCall head to create a response to end back to the browser\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "The yield statement in Rails decides where to render the content for the action in the layout. If there is no yield statement in the layout, the layout file itself will be rendered, but additional content into the action templates will not be correctly placed within the layout.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Rails filters are methods that run before or after a controller's action method is executed. Rails support three types of filter methods:\nBefore filters\nAfter filters\nAround filters\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "39) How can you protect filter methods in Rails?",
        "answer": "All the Ruby methods have at least one of these protection level.\nPublic: These methods are accessible from any external class or method that uses the same class in which they are defined.\nProtected: These methods are accessible only within the class in which they are defined and in the classes that inherit from the class in which they are defined.\nPrivate: These methods are only accessible within the class in which they are defined.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Rails also use a separate database for testing. Rails use Ruby Test::A unit testing library. Rails application test is usually run using Rake utility.\nRails support three types of tests:\n\nfunctional\nintegration\nunit tests\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "Rails caching is available at three levels of granularity:\nPage\nAction\nFragment\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "42) What are Rails validation used for?",
        "answer": "Rails validation defines valid states for each of your Active Record model classes. They are used to ensure that only valid details are entered into your database.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "43) Explain valid and invalid in Rails?",
        "answer": "The valid? triggers your validations and returns true if no errors are found otherwise, false.\nThe invalid? is simply the reverse of valid?. It triggers your validations and returns true if invalid otherwise, false.\nFor more information: Click here",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "\"Unobtrusive JavaScript\" technique is considered as the best technique within the frontend community.\nFor more information: Click here\n45) What is the Symbol Garbage Collector?\nPassing symbols opens the possibility of several attacks in your system. The symbol garbage collector collects the symbols which prevent your system from several attacks.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "45) What is the Symbol Garbage Collector?",
        "answer": "Passing symbols opens the possibility of several attacks in your system. The symbol garbage collector collects the symbols which prevent your system from several attacks.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "46) What is Action Cable?",
        "answer": "It is a framework which is used to extend Rails via WebSockets to add some functionality. It integrates WebSockets with the rest of the Rails application very smoothly. It allows you to add some real-time features to your app quickly.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "",
        "answer": "TextMate:The TextMate is mainly used for the Mac operating system. It allows you to write extensions to the base environment. The extensions plug into TextMate to add new features to the base editor. These extensions are called Bundles.\nE:The E-text editor is built just like TextMate editor to work on Windows. It replicates many features of the TextMate and even allows to use the TextMate bundles.\nIntelliJ IDEA:The IntelliJ IDEA is a commercial IDE made of JetBrains. Earlier, it was also used for Java development. JetBrains version 7.0 has added Rails support to the IntelliJ IDEA.\nNetBeans:The NetBeans is an IDE from Sun. Earlier, it was used for Java development. Sun version 7.0 has added Rails support to the NetBeans.\nEclipse:The Eclipse IDE is the most commonly used IDE today. Using a plug-in RadRails, you can add Rails support entirely to the Eclipse environment.\nHeroku:The Heroku IDE provides a new and unique way of writing Rails application. It is used entirely online to develop applications. You do not need to install any software on your system to use Heroku. It does not support Internet Explorer.\nAptana Studio:A product from Aptana is a stand-alone desktop IDE based on Eclipse project. It is quite similar to Eclipse. The Rails features are packaged as a plug-in to the Aptana Studio environment.\nRubyMine:The RubyMine IDE is a preferable choice for Rubyists. It provides many extra features than other IDEs. One feature it includes clicks and follows. When you click on a function, it will take you to the function being called. This feature comes in handy when multiple functions share the same name and reside in different files and folder. The other features are Git annotate and Git compare.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "48) What is the rail console?",
        "answer": "The Rails console is a command line utility which runs Rails application from the command line. The Rails console is an extension of Ruby IRB. It provides all the features of IRB along with the ability to auto-load Rails application environment, including all its classes and components. It helps you to walk through your application step-by-step.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "49) What are generators in ruby on rails?",
        "answer": "The rails include code generator scripts, which are used to generate model and controller classes for an application automatically. Code generation increases your productivity when developing web applications. By running generator command, skeleton files for all your model and controller classes will be generated. It also generates database migration files for each model it generates.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    },
    {
        "question": "50) What is a webrick web server?",
        "answer": "Rails are configured to use WEBrick server automatically. This server is written in pure Ruby and supports almost all platforms like Windows, Mac or Unix. Alternatively, if you have Mongrel or Lighttpd server installed in your system, Rails uses either of those servers.\nAll the three Rails servers feature automatic reloading of code. It means, when you change your source code, you do not need to restart the server.",
        "reference": "javatpoint.com",
        "role": "ruby-on-rails"
    }
]