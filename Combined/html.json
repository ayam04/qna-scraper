[
    {
        "question": "1. Define the list types in HTML.",
        "answer": "Following are the list types in HTML:\nOrdered list – The ordered list displays elements in a numbered format with the help of the <ol> tag.\nUnordered list – The unordered list displays elements in a bulleted format with the help of the <ul> tag.\nDefinition list – The definition list uses <dl>, <dt>, and <dd> tags for displaying elements in definition form.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "2. Compare HTML & XML",
        "answer": "Criteria HTML XML\nDeployed for Rendering things on screen Describing what things are\nFunctioning area Human to computer interaction Computer to computer interaction\nCan explain what data means No Yes",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "3. What are void elements in HTML?",
        "answer": "HTML elements that do not have closing tags or do not need to be closed are known as void elements. For example\n,\n\n, , etc.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "4. What is the advantage of collapsing white space?",
        "answer": "In HTML, a blank sequence of whitespace characters is treated as a single space character. The browser collapses the multiple spaces into a single space character thus aiding a developer to indent lines of text without the need to worry about multiple spaces. In this way, the readability and understandability of HTML codes are maintained.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "5. What is “Semantic HTML?”",
        "answer": "Semantic HTML is a coding style where the tags embody what the text is meant to convey. Also known as semantic markup, this HTML introduces meaning to the web page rather than just presentation. For example, a <p> tag indicates that the enclosed text is a paragraph.\nTags for bold and italic are not examples of semantic HTML as they just represent formatting and provide no indication of meaning or structure.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "6. What are HTML entities?",
        "answer": "In HTML some characters like ‘<’, ‘>’, ‘/’, etc. are reserved. To use them in web pages, character entities or HTML entities need to be used. Below are a few mapping between the reserved character and its respective entity character to be used.\nCharacter Entity Name Entity Number\n< &lt; &#60;\n> &gt; &#62;\n& &amp; &#38;\n(non-breaking space) Eg. 10 PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160;",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "7. What is the ‘class’ attribute in HTML?",
        "answer": "The ‘class’ attribute specifies the class name for an HTML element. Multiple HTML elements can have the same class value. It is primarily used to associate the styles on the stylesheet with the HTML elements.\nTo acquire the skills necessary to become a Web Developer, you must enroll in one of the best Web Development Courses from Intellipaat.\nGet 100% Hike!\nMaster Most in Demand Skills Now !\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "8. What is the difference between the ‘id’ attribute and the ‘class’ attribute of HTML elements?",
        "answer": "Multiple elements in HTML can have the same class value. The same is not true for an id attribute of an element.\nCheck out our PHP Interview Questions to ace your next interview!",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "9. Describe the HTML layout structure.",
        "answer": "For the purpose of displaying the intended content and specific UI, each web page has to include different components. However, few things in the HTML layout structure come templated and are universally accepted practices. For example:\n<header>: It is used to include the starting information about the web page\n<footer>: A footer represents the final section of a web page\n<nav>: It involves the navigation menu of the HTML page\n<article>: It is a set of information\n<section>: This defines the basic structure of a page and is used inside the article block\n<aside>: It is used for the sidebar content of a web page",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "10. What is $() in jQuery library?",
        "answer": "The $() function is an alias of the jQuery() function, at first it looks weird and makes jQuery code cryptic, but once you get used to it, you will love its brevity. $() function is used to wrap any object into a jQuery object, which then allows you to call various method-defined jQuery objects. You can even pass a selector string to the $()function, and it will return a jQuery object containing an array of all matched DOM elements. I have seen this jQuery asked several times, despite it being quite basic. It is used to differentiate between developers who know jQuery and those who do not.\nLearn all about JQuery through this online HTML & JQuery training course.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "11. What are the advantages of using jQuery?",
        "answer": "Easy to use and learn\nEasily expandable\nCross-browser support (IE 6.0+, FF 1.5+, Safari 2.0+, Opera 9.0+)\nEasy to use for DOM manipulation and traversal\nLarge pool of built-in methods\nAJAX capabilities\nMethods for changing or applying CSS, creating animations\nEvent detection and handling\nTons of plug-ins for all kinds of needs\nCheck out the Web Developer Technical Interview Questions.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "12. Explain the difference between the ID selector and a class selector in jQuery.",
        "answer": "If you have used CSS, then you might know the difference between ID and class selector. It’s the same with jQuery. ID selector uses ID e.g. #element1 to select elements, while class selector uses CSS class to select elements. When you just need to select only one element, use the ID selector, while if you want to select a group of elements, having the same CSS class then use a class selector. There is a good chance that the interviewer will ask you to write a code using ID and class selector. From a syntax perspective, as you can see, another difference between ID and class selector is that the former uses “#” and later uses the “.” character.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "13. What is the difference between $(this) and this keyword in jQuery?",
        "answer": "This could be a tricky question for many jQuery beginners, but it’s in fact the simplest one. $(this) returns a jQuery object, on which you can call several jQuery methods e.g. text() to retrieve text, val() to retrieve value, etc. While this represents the current element, it’s one of the JavaScript keywords to denote the current DOM element in a context. You can not call the jQuery method on this until it’s wrapped using the $() function i.e. $(this).",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "14. What is the main advantage of loading the jQuery library using CDN?",
        "answer": "This is a slightly advanced jQuery question, and don’t expect that jQuery beginners can answer that. Well, apart from many advantages including reducing server bandwidth and faster download, one of the most important advantages is that if the browser has already downloaded  the same jQuery version from the same CDN, then it won’t download it again. Nowadays, almost any public website uses jQuery for user interaction and animation, so there is a very good chance that browsers already have the jQuery library downloaded.\n\n\nIntermediate HTML Interview Questions and Answers",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "15. What is HTML?",
        "answer": "HTML stands for HyperText Markup Language and it is the language of the internet. This standard text formatting language is used to create and display pages on the Internet. HTML documents include elements and tags that format it for proper display on pages.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "16. What are HTML tags?",
        "answer": "HTML tags are used for placing elements in the proper and appropriate format. The tags, < and >, set them apart from the HTML content. It is not always necessary to close these HTML tags. For example, in the case of images, the closing tags are not required as tag.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "17. What are HTML attributes?",
        "answer": "Attributes are properties that are added to an HTML tag. They change the way the tag behaves or is displayed. Attributes are added right after the name of the HTML tag, inside the brackets. Attributes can be added to opening or self-closing tags, but never in closing tags.\nFor example, the tag has an src attribute, which can add the source from which the image should be displayed.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "18. What is a marquee in HTML?",
        "answer": "Marquee in HTML is used to scroll text or images on a web page. It can scroll up, down, left, or right automatically. Marquee can be applied by using tags.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "19. How do you separate a section of text in HTML?",
        "answer": "A section of text in HTML can be separated with the help of the following tags:\n<br> – It is used to separate the line of text by breaking the current line and moving the flow of the text to a new line.\n<p> – It is used to write a paragraph of text.\n<blockquote> – It is used to define large quoted sections.\nCheck out this video on HTML Interview Questions and Answers",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "20. What is a class? What is an ID?",
        "answer": "A class is a style (i.e., a group of CSS attributes) that can be applied to one or more HTML elements. This means it can apply to instances of the same element or instances of different elements to which the same style can be attached. Classes are defined in CSS using a period followed by the class name. It is applied to an HTML element via the class attribute and the class name.\nThe following snippet shows a class defined and its application to an HTML DIV element.\n.test {\nfont-family: Helvetica;\nfont-size: 20;\nbackground: black;\n}\ntest\nAlso, you could define a style for all elements with a defined class. This is demonstrated with the following code that selects all P elements with specified column class.\np.column {\nfont-color: black;\n}\nAn ID selector is a name assigned to a specific style. It can be associated with one HTML element with the assigned ID. Within CSS, ID selectors are defined with the # character followed by the selector name.\nThe following snippet shows the CSS example1 defined followed by the use of an HTML element’s ID attribute, which pairs it with the CSS selector.\n#example1 {\nbackground: blue;\n}",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "21. What is Grouping?",
        "answer": "When more than one selector shares the same declaration, they may be grouped together via a comma-separated list; this allows you to reduce the size of the CSS (every bit and byte is important) and makes it more readable. The following snippet applies the same background to the first three heading elements.h1, h2, h3 {background: red;}",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "22. Why do we use alternative texts in images?",
        "answer": "Image mapping can get confusing if it is hard to understand which hotspots correspond to a particular link. Alternative texts include a description at each link making it easier to understand the hotspot links.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "23. How to create a new HTML element?",
        "answer": "New HTML elements can be created in the following way:\n<script>\ndocument.createElement﴾\"myElement\"﴿\n</script>\nor\n<myElement>hello Intellipaat!</myElement>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "24. What are the uses of a span tag? Explain with an example.",
        "answer": "The span tag is used for styling purposes like:\nAdding color to text\nHighlighting any color text\nAdding background on text\nExample:\n<span style=\"color:#ffffff;\">\nIn this page we use span.\n</span>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "25. Explain the key differences between localStorage and sessionStorage objects.",
        "answer": "The key differences between localStorage and sessionStorage objects are:\nThe localStorage object stores data indefinitely, while sessionStorage object stores them for only one session.\nIn the case of a localStorage object, when the browser window is closed, the data will not be erased. However, in the case of sessionStorage objects, the data will get erased after the browser window is closed.\nThe data that is stored in the sessionStorage is accessible only in the current browser window. The data that is stored in the localStorage can be accessed by multiple browser windows.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "26. What is the hierarchy when it comes to style sheets?",
        "answer": "If there are three different style definitions in a single selector, precedence is given to the definition that is closest to the actual tag. Inline style sheets take priority over embedded style sheets. Between embedded style sheets an external style sheets, embedded style takes precedence.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "27. How do active links differ from normal links?",
        "answer": "Normal and active links have blue as their default color. Certain browsers are capable of detecting an active link when the mouse cursor hovers over that link. The other browsers detect the active link when the link has the focus. An active link is in the action of opening the resource that is being pointed to.\nNormal link contains a pointer to another resource. Those links don’t have a mouse cursor over it. A normal link becomes an active link when the user clicks on it.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "28. What is the role of the 'head' and 'body' tags in an HTML document?",
        "answer": "<head> contains the information about the document. It is always enclosed in the <html> tag. <head> contains the webpage metadata and tags like <style>, <link>, <meta>, <script>, etc. that are not displayed on the web page. In an HTML document. there can be only one <head> tag and it is one used before the <body> tag.\n<body> defines the body of an HTML document and is always enclosed within the <html> tag. Any content that needs to be displayed on the web page, such as text, audio, images, video, contents, can be done using tags like <p>, <img>, <audio>, <heading>, <video>, <div>, etc. These tags have to be enclosed within the <body> tag. There can be only one <body> element in an HTML document and it is used after the <head> tag.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "29. How can a table be displayed on an HTML webpage?",
        "answer": "Data can be displayed in a tabular format with the help of the <table> tag. It can also be used to manage the layout of the web page. For example, the header section, the navigation bar, the content of the body, and the footer section.\nThe following HTML tags are used for when building a table on an HTML webpage:\nTag Description\n<table> This tag defines the table.\n<tr> The <tr> tag is used to define a row in the table.\n<th> It is used for defining the header cell in a table.\n<td> The <td> tag defines a cell in a table.\n<caption> It defines the table caption.\n<colgroup> It specifies a group of one or multiple columns for the purpose of formatting.\n<col> This tag is used with <colgroup> for specifying column properties for each column.\n<tbody> <tbody> groups the content of the body in a table.\n<thead> It groups the header content in a table.\n<tfoot> <tfoot> groups the footer content in a table.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "30. How do you create links to different sections within the same HTML web page?",
        "answer": "Links to different sections can be created within the same web page by using the <a> tag, along with the # symbol for referencing.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "31. How can you create nested web pages in HTML?",
        "answer": "When there are web pages within a webpage, these are called nested web pages. These nested web pages in HTML can be developed with the help of the built-in <iframe> tag. It defines an inline frame. For example:\n<!DOCTYPE html>\n<html>\n  <body>\n    <h2>HTML Iframes example</h2>\n    <p>\n      specify the size of the iframe using the height and width attributes:\n    </p>\n    <iframe src=\"https://intellipaat.com/\" height=\"500\" width=\"700\"></iframe>\n  </body>\n</html>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "32. How can you add buttons in HTML?",
        "answer": "Buttons can be added to an HTML web page by using the built-in Button tag.\n<!DOCTYPE html>\n<html>\n<body>\n<h2>Example of HTML Button Tag</h2>\n<button name=\"button\" type=\"button\">CLICK HERE</button>\n</body>\n</html>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "33. What are the different types of headings in HTML?",
        "answer": "There are six different types of headings in HTML. These are defined using the <h1> to <h6> tags. Each heading type has a different text size–<h1> being the largest and <h6> being the smallest. For example:\n<!DOCTYPE html>\n<html>\n<body>\n<h1>Place Heading 1 here</h1>\n<h2>Place Heading 2 here</h2>\n<h3>Place Heading 3 here</h3>\n<h4>Place Heading 4 here</h4>\n<h5>Place Heading 5 here</h5>\n<h6>Place Heading 6 here</h6>\n</body>\n</html>\n\n\nAdvanced HTML Interview Questions for Experienced",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "34. How do CSS precedence/cascading rules work? How does the !important directive affect the rules?",
        "answer": "CSS style rules “cascade” in the sense that they follow an order of precedence. Global style rules apply first to HTML elements, and local style rules override them. For example, a style defined in a style element in a webpage overrides a style defined in an external style sheet. Similarly, an inline style that is defined in an HTML element in the page overrides any styles that are defined for that same element elsewhere. The !important rule is a way to make your CSS cascade but also have the rules you feel are most crucial always be applied. A rule that has the !important property will always be applied no matter where that rule appears in the CSS document. So if you wanted to make sure that a property always applied, you would add the !important property to the tag. So, to make the paragraph text always red, in the above example, you would write:p { color: #ff0000 !important; }p { color: #000000; }\nAlso, check our blog on A Guide to HTML Link (Hyperlinks)!",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "35. What is microdata in HTML5?",
        "answer": "Microdata are a group of name-value pairs that extract data for search engines and site crawlers. Each name-value pair is called a property and a group of them is called an item. Most search engines follow schema.org vocabulary for the extraction of microdata.\nitemid – A unique, global identifier of an item\nitemprop – Adds properties to an item\nitemref – Provides a list of element IDs with additional properties\nitemtype – Specifies the vocabulary’s URL that will be used to define itemprop\nitemscope – Defines the itemtype’s scope that is associated with it",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "36. Explain HTML5 Graphics.",
        "answer": "There are two kinds of graphics that are supported by HTML5:\n1. Canvas – It is like drawing on a blank webpage. Different graphic designs can be added on web pages. There are various available methods for drawing different geometrical shapes. Following is an example of how it is used.\n<!DOCTYPE HTML>\n<html>\n<head>\n</head>\n<body>\n<canvas width=\"300\" height=\"300\" style=\"border:2px solid;\"></canvas>\n</body>\n</html>\n2. SVG – SVG or Scalable Vector Graphics follows the XML format and these are used for diagrams or icons. Following is an example of how it is used.\n<!DOCTYPE html>\n<html>\n<body>\n<svg width=\"400\" height=\"110\">\n<rect width=\"300\" height=\"100\" style=\"fill:#FFF;stroke-width:2;stroke:#000\" />\n</svg>\n</body>\n</html>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "37. What are the server-sent events in HTML5?",
        "answer": "Server-sent events are those events that are pushed from the web server to the browsers. These events can be used to continuously update DOM elements.\nIn the case of polling, since every time an HTTP connection is established and torn down, there is a lot of overhead. In server-sent events, there the HTTP connection is long-lived, which is a big advantage over polling.\nTo use a server-sent event, <eventsource> is used. This element’s SRC attribute specifies the URL from which it sends a data stream that contains the events.\n<eventsource src = \"/cgi-bin/myfile.cgi\" />",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "38. What are Web Workers?",
        "answer": "Web workers are added to bring parallelism and async capabilities. They run in the background and perform computationally expensive tasks without yielding to make the page responsive. A separate thread has to be started for such tasks. Web workers don’t perform UI operations.\nThere are three types of web workers:\nDedicated Workers – Used by a single script\nShared Workers – Used by multiple scripts running in different windows, IFrames in HTML, etc.\nService Workers – Mostly used for push notifications and sync APIs and act as proxy servers between the web applications, the browser, and the network",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "39. What is the use of a novalidate attribute for the form tag in HTML5?",
        "answer": "The value of a novalidate attribute is a boolean type. It shows whether the data being submitted by the form will be validated in advance or not. The forms can be submitted without validation by making the value false. This helps users to resume it later as well.\n<form action = \"\" method = \"get\" novalidate>\nName:<br><input type=\"name\" name=\"sname\"><br>\nDoubt:<br><input type=\"number\" name=\"doubt\"><br>\n<input type=\"submit\" value=\"Submit\">\n</form>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "40. What are the different ways of making an image responsive?",
        "answer": "Art Direction – The landscape image fully shown in desktop layout can be zoomed in with the main subject in focus for a portrait layout by using <picture>.\nFor example:\n<picture>\n<source media=\"(min-width: 650px)\" srcset=\"img_flower.jpg\">\n <img src=\"img_marsh.jpg\" style=\"width:auto;\">\n</picture>\n For any other screen:\nResolution Switching – Instead of zooming and cropping, the images can be scaled accordingly with the help of vector graphics. It can be set to serve different pixel-density screens as well.\nFor example SVG:\n<svg width=\"100\" height=\"100\">\n <circle cx=\"50\" cy=\"50\" r=\"40\"\n stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" />\n</svg>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "41. What is a manifest file in HTML5?",
        "answer": "The manifest file lists the resources that can be cached. This information is used by browsers making the web pages load faster than the first time. The manifest file contains three sections:\nCACHE Manifest – Files that are needed to be cached\nNetwork – Files that are never to be cached but always need a network connection\nFallback – Fallback files if a page is inaccessible\nCACHE MANIFEST\n# 2012-06-16 v1.0.0\n/style.css\n/logo.gif\n/main.js\nNETWORK:\nlogin.php\nFALLBACK:\n/html/ /offline.html\n<!DOCTYPE HTML>\n<html manifest=\"tutorial.appcache\">\n...\n...\n</html>",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "42. What is the geolocation API in HTML5?",
        "answer": "The geolocation API in HTML5 shares a client’s physical location with websites. It provides a unique experience to users and locale-based content based on their location. The geolocation API works with a new property of the global navigator object. Most of the modern browsers support this.\nvar geolocation = navigator.geolocation;",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "43. What happens if there is no text between the tags? Is there any effect on the display of the HTML file?",
        "answer": "If there is no text between tags, there is nothing to format so no formatting will be there. Some tags, like tags that don’t have a closing tag (for example,  the <img> tag), do not need to have text between them.\nAlso, check out our blog on Top 10+ HTML Projects for Beginners in 2024!",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "44. How can JavaScript be added to an HTML webpage?",
        "answer": "JavaScript makes HTML web pages user-friendly and more interactive. Based on the user input, it allows one to interact with particular page elements. There are three ways one can add JavaScript:\ni) Inline: JavaScript can be added to HTML elements directly whenever a certain event occurs. The code can be added using the attributes of the HTML tags that support it.\nii) Script block: A script block can be defined anywhere on the HTML code. When the browser reaches that specific part of the document, the script block will get executed. This is the reason why they are typically added at the bottom of HTML documents.\niii) External JavaScript file: JavaScript code can be imported from a separate file. This maintains a clutter-free HTML code. It is especially useful when there is a large amount of scripting added to an HTML webpage.",
        "reference": "intellipaat.com",
        "role": "html"
    },
    {
        "question": "1. Can we display a web page inside a web page or Is nesting of webpages possible?",
        "answer": "Yes, we can display a web page inside another HTML web page. HTML provides a tag <iframe> using which we can achieve this functionality. <iframe src=”url of the web page to embed” /> <iframe src=”url of the web page to embed” /> <iframe src=”url of the web page to embed” /> iframe src ”url of the web page to embed",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "2. What are tags and attributes in HTML?",
        "answer": "Tags are the primary component of the HTML that defines how the content will be structured/ formatted, whereas Attributes are used along with the HTML tags to define the characteristics of the element. For example, <p align=” center”>Interview questions</p>, in this the ‘align’ is the attribute using which we will align the paragraph to show in the center of the view.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "3. What are void elements in HTML?",
        "answer": "HTML elements which do not have closing tags or do not need to be closed are Void elements. For Example <br />, <img />, <hr />, etc.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "4. What is the advantage of collapsing white space?",
        "answer": "In HTML, a blank sequence of whitespace characters is treated as a single space character, Because the browser collapses multiple spaces into a single space character and this helps a developer to indent lines of text without worrying about multiple spaces and maintain readability and understandability of HTML codes.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "5. What are HTML Entities?",
        "answer": "In HTML some characters are reserved like ‘<’, ‘>’, ‘/’, etc. To use these characters in our webpage we need to use the character entities called HTML Entities. Below are a few mapping between the reserved character and its respective entity character to be used. Character Entity Name Entity Number\n< &lt; &#60;\n> &gt; &#62;\n& &amp; &#38;\n(non-breaking space) Eg. 10  PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160; Character Entity Name Entity Number\n< &lt; &#60;\n> &gt; &#62;\n& &amp; &#38;\n(non-breaking space) Eg. 10  PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160; Character Entity Name Entity Number Character Entity Name Entity Number Character Entity Name Entity Number < &lt; &#60;\n> &gt; &#62;\n& &amp; &#38;\n(non-breaking space) Eg. 10  PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160; < &lt; &#60; < &lt; &#60; > &gt; &#62; > &gt; &#62; & &amp; &#38; & &amp; &#38; (non-breaking space) Eg. 10  PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160; (non-breaking space) Eg. 10  PM &nbsp; Eg. <p>10&nbsp&nbspPM</p> &#160;",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "6. What are different types of lists in HTML?",
        "answer": " ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "7. What is the ‘class’ attribute in HTML?",
        "answer": "The class attribute is used to specify the class name for an HTML element. Multiple elements in HTML can have the same class value. Also, it is mainly used to associate the styles written in the stylesheet with the HTML elements.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "8. What is the difference between the ‘id’ attribute and the ‘class’ attribute of HTML elements?",
        "answer": "Multiple elements in HTML can have the same class value, whereas a value of id attribute of one element cannot be associated with another HTML element.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "9. Define multipart form data?",
        "answer": "Multipart form data is one of the values of the enctype attribute. It is used to send the file data to the server-side for processing. The other valid values of the enctype attribute are text/plain and application/x-www-form-urlencoded.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "10. Describe HTML layout structure.",
        "answer": "Every web page has different components to display the intended content and a specific UI. But still, there are few things which are templated and are globally accepted way to structure the web page, such as: <header>: Stores the starting information about the web page.\n<footer>: Represents the last section of the page.\n<nav>: The navigation menu of the HTML page.\n<article>: It is a set of information.\n<section>: It is used inside the article block to define the basic structure of a page.\n<aside>: Sidebar content of the page. <header>: Stores the starting information about the web page. <header> <footer>: Represents the last section of the page. <footer> <nav>: The navigation menu of the HTML page. <nav> <article>: It is a set of information. <article> <section>: It is used inside the article block to define the basic structure of a page. <section> <aside>: Sidebar content of the page. <aside>",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "11. How to optimize website assets loading?",
        "answer": "To optimize website load time we need to optimize its asset loading and for that: CDN hosting - A CDN or content delivery network is geographically distributed servers to help reduce latency.\nFile compression - This is a method that helps to reduce the size of an asset to reduce the data transfer\nFile concatenation - This reduces the number of HTTP calls\nMinify scripts - This reduces the overall file size of js and CSS files\nParallel downloads - Hosting assets in multiple subdomains can help to bypass the download limit of 6 assets per domain of all modern browsers. This can be configured but most general users never modify these settings.\nLazy Loading - Instead of loading all the assets at once, the non-critical assets can be loaded on a need basis. CDN hosting - A CDN or content delivery network is geographically distributed servers to help reduce latency. CDN hosting File compression - This is a method that helps to reduce the size of an asset to reduce the data transfer File compression File concatenation - This reduces the number of HTTP calls File concatenation Minify scripts - This reduces the overall file size of js and CSS files Minify scripts Parallel downloads - Hosting assets in multiple subdomains can help to bypass the download limit of 6 assets per domain of all modern browsers. This can be configured but most general users never modify these settings. Parallel downloads Lazy Loading - Instead of loading all the assets at once, the non-critical assets can be loaded on a need basis. Lazy Loading",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "12. What are the various formatting tags in HTML?",
        "answer": "HTML has various formatting tags: <b> - makes text bold\n<i> - makes text italic\n<em> - makes text italic but with added semantics importance\n<big> - increases the font size of the text by one unit\n<small> - decreases the font size of the text by one unit\n<sub> - makes the text a subscript\n<sup> - makes the text a superscript\n<del> - displays as strike out text\n<strong> - marks the text as important\n<mark> - highlights the text\n<ins> - displays as added text <b> - makes text bold <b> <i> - makes text italic <i> <em> - makes text italic but with added semantics importance <em> <big> - increases the font size of the text by one unit <big> <small> - decreases the font size of the text by one unit <small> <sub> - makes the text a subscript <sub> <sup> - makes the text a superscript <sup> <del> - displays as strike out text <del> <strong> - marks the text as important <strong> <mark> - highlights the text <mark> <ins> - displays as added text <ins>",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "13. What are the different kinds of Doctypes available?",
        "answer": "The three kinds of Doctypes which are available: Strict Doctype \nTransitional Doctype\nFrameset Doctype Strict Doctype Transitional Doctype Frameset Doctype",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "14. Please explain how to indicate the character set being used by a document in HTML?",
        "answer": "The character set is defined in <meta> tag inside <head> element. <!DOCTYPE html>\n<html>\n <head>\n   <meta charset=\"UTF-8\">\n   ...\n   ...\n </head>\n ...\n</html> <!DOCTYPE html>\n<html>\n <head>\n   <meta charset=\"UTF-8\">\n   ...\n   ...\n </head>\n ...\n</html> <!DOCTYPE html> html <html> html <head> head <meta charset=\"UTF-8\"> meta charset \"UTF-8\" </head> head </html> html",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "15. What is the difference between <strong>, <b> tags and <em>, <i> tags?",
        "answer": "The effect on a normal webpage of the tags <strong>, <b>  and <em>, <i> is the same. <b> and <i> tags stands for bold and italic. These two tags only apply font styling and bold tag <b>, just adds more ink to the text, these tags don't say anything about the text. Whereas, <strong> and <em> tags represent that the span of text is of strong importance or more importance and emphatic stress respectively than the rest of the text. These tags have semantic meaning.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "16. What is the significance of <head> and <body> tag in HTML?",
        "answer": "<head> tag provides the information about the document. It should always be enclosed in the <html> tag. This tag contains the metadata about the webpage and the tags which are enclosed by head tag like <link>, <meta>, <style>, <script>, etc. are not displayed on the web page. Also, there can be only 1 <head> tag in the entire Html document and will always be before the <body> tag. <body> tag defines the body of the HTML document. It should always be enclosed in the <html> tag. All the contents which needs to be displayed on the web page like images, text, audio, video, contents, using elements like <p>, <img>, <audio>, <heading>, <video>, <div>, etc. will always be enclosed by the <body> tag. Also, there can be only 1 body element in an HTML document and will always be after the <head> tag.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "17. Are the HTML tags and elements the same thing?",
        "answer": "No. HTML elements are defined by a starting tag, may contain some content and a closing tag.For example, <h1>Heading 1</h1> is a HTML element but just <h1> is a starting tag and </h1> is a closing tag.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "18. How is Cell Padding different from Cell Spacing?",
        "answer": "Cell Spacing is the space or gap between two consecutive cells. Whereas, Cell Padding is the space or gap between the text/ content of the cell and the edge/ border of the cell. Please refer to the above figure example to find the difference.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "19. How can we club two or more rows or columns into a single row or column in an HTML table?",
        "answer": "HTML provides two table attributes “rowspan” and “colspan” to make a cell span to multiple rows and columns respectively.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "20. Is it possible to change an inline element into a block level element?",
        "answer": "Yes, it is possible using the “display” property with its value as “block”, to change the inline element into a block-level element.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "21. In how many ways can we position an HTML element? Or what are the permissible values of the position attribute?",
        "answer": "There are mainly 7 values of position attribute that can be used to position an HTML element: static: Default value. Here the element is positioned according to the normal flow of the document.\nabsolute: Here the element is positioned relative to its parent element. The final position is determined by the values of left, right, top, bottom.\nfixed: This is similar to absolute except here the elements are positioned relative to the <html> element.\nrelative: Here the element is positioned according to the normal flow of the document and positioned relative to its original/ normal position.\ninitial: This resets the property to its default value.\ninherit: Here the element inherits or takes the property of its parent. static: Default value. Here the element is positioned according to the normal flow of the document. static absolute: Here the element is positioned relative to its parent element. The final position is determined by the values of left, right, top, bottom. absolute fixed: This is similar to absolute except here the elements are positioned relative to the <html> element. fixed relative: Here the element is positioned according to the normal flow of the document and positioned relative to its original/ normal position. relative initial: This resets the property to its default value. initial inherit: Here the element inherits or takes the property of its parent. inherit",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "22. In how many ways you can display HTML elements?",
        "answer": "inline: Using this we can display any block-level element as an inline element. The height and width attribute values of the element will not affect.\nblock: using this, we can display any inline element as a block-level element. \ninline-block: This property is similar to inline, except by using the display as inline-block, we can actually format the element using height and width values.\nflex: It displays the container and element as a flexible structure. It follows flexbox property.\ninline-flex: It displays the flex container as an inline element while its content follows the flexbox properties.\ngrid: It displays the HTML elements as a grid container.\nnone: Using this property we can hide the HTML element. inline: Using this we can display any block-level element as an inline element. The height and width attribute values of the element will not affect. inline block: using this, we can display any inline element as a block-level element. block inline-block: This property is similar to inline, except by using the display as inline-block, we can actually format the element using height and width values. inline-block flex: It displays the container and element as a flexible structure. It follows flexbox property. flex inline-flex: It displays the flex container as an inline element while its content follows the flexbox properties. inline-flex grid: It displays the HTML elements as a grid container. grid none: Using this property we can hide the HTML element. none Below are some of the display types which are rarely used: table\ninline-table\ntable-cell\ntable-column\ntable-row\ninline-grid\nlist-item\ninherit\ninitial\ntable-caption table inline-table table-cell table-column table-row inline-grid list-item inherit initial table-caption",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "23. What is the difference between “display: none” and “visibility: hidden”, when used as attributes to the HTML element.",
        "answer": "When we use the attribute “visibility: hidden” for an HTML element then that element will be hidden from the webpage but still takes up space. Whereas, if we use the “display: none” attribute for an HTML element then the element will be hidden, and also it won’t take up any space on the webpage.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "24. How to specify the link in HTML and explain the target attribute?",
        "answer": "HTML provides a hyperlink - <a> tag to specify the links in a webpage. The ‘href’ attribute is used to specify the link and the ‘target’ attribute is used to specify, where do we want to open the linked document. The ‘target’ attribute can have the following values: _self: This is a default value. It opens the document in the same window or tab as it was clicked.\n_blank: It opens the document in a new window or tab.\n_parent: It opens the document in a parent frame.\n_top: It opens the document in a full-body window. _self: This is a default value. It opens the document in the same window or tab as it was clicked. _self _blank: It opens the document in a new window or tab. _blank _parent: It opens the document in a parent frame. _parent _top: It opens the document in a full-body window. _top",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "25. In how many ways can we specify the CSS styles for the HTML element?",
        "answer": "There are three ways in which we can specify the styles for HTML elements: Inline: Here we use the ‘style’ attribute inside the HTML element.\nInternal: Here we use the <style> tag inside the <head> tag. To apply the style we bind the elements using ‘id’ or ‘class’ attributes.\nExternal: Here we use the <link> tag inside <head> tag to reference the CSS file into our HTML code. Again the binding between elements and styles is done using ‘id’ or ‘class’ attributes. Inline: Here we use the ‘style’ attribute inside the HTML element. Inline Internal: Here we use the <style> tag inside the <head> tag. To apply the style we bind the elements using ‘id’ or ‘class’ attributes. Internal: External: Here we use the <link> tag inside <head> tag to reference the CSS file into our HTML code. Again the binding between elements and styles is done using ‘id’ or ‘class’ attributes. External  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "26. Difference between link tag <link> and anchor tag <a>?",
        "answer": "The anchor tag <a> is used to create a hyperlink to another webpage or to a certain part of the webpage and these links are clickable, whereas, link tag <link> defines a link between a document and an external resource and these are not clickable.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "27. How to include javascript code in HTML?",
        "answer": "HTML provides a <script> tag using which we can run the javascript code and make our HTML page more dynamic. <!DOCTYPE html>\n<html>\n   <body>\n    <h1>\n          <span>This is a demo for </span>\n          <u><span id=\"demo\"></span></u>\n   </h1>\n   <script>\n       document.getElementById(\"demo\").innerHTML = \"script Tag\"\n   </script>\n   </body>\n</html> <!DOCTYPE html>\n<html>\n   <body>\n    <h1>\n          <span>This is a demo for </span>\n          <u><span id=\"demo\"></span></u>\n   </h1>\n   <script>\n       document.getElementById(\"demo\").innerHTML = \"script Tag\"\n   </script>\n   </body>\n</html> <!DOCTYPE html> html <html> html <body> body <h1> h1 <span> span </span> span <u> u <span id=\"demo\"> span id \"demo\" </span> span </u> u </h1> h1 <script> script document.getElementById(\"demo\").innerHTML = \"script Tag\" document \"demo\" \"script Tag\" </script> script </body> body </html> html",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "28. When to use scripts in the head and when to use scripts in the body?",
        "answer": "If the scripts contain some event-triggered functions or jquery library then we should use them in the head section. If the script writes the content on the page or is not inside a function then it should be placed inside the body section at the bottom. In short, follow below three points: Place library scripts or event scripts in the head section.\nPlace normal scripts that do not write anything on the page, in the head section until there is any performance issue.\nPlace scripts that render something on the web page at the bottom of the body section. Place library scripts or event scripts in the head section. Place normal scripts that do not write anything on the page, in the head section until there is any performance issue. Place scripts that render something on the web page at the bottom of the body section.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "29. What are forms and how to create forms in HTML?",
        "answer": "The HTML form is used to collect the user inputs. HTML provides a <form> tag to create forms. To take input from the user we use the <input> tag inside the form so that all collected user data can be sent to the server for processing. There are different input types like ‘button’, ‘checkbox’, ‘number’, ‘text’, ‘password’, ‘submit’ etc. <form action=\"/submit_data.php\">\n   <label>Enter your name: </label>\n   <input type=\"text\" name=\"name\" /> \n   <label>Enter Mobile number </label>\n   <input type=\"number\" name=\"mobile_no\"/>\n   <input type=\"submit\" value=\"Submit\">\n</form> <form action=\"/submit_data.php\">\n   <label>Enter your name: </label>\n   <input type=\"text\" name=\"name\" /> \n   <label>Enter Mobile number </label>\n   <input type=\"number\" name=\"mobile_no\"/>\n   <input type=\"submit\" value=\"Submit\">\n</form> <form action=\"/submit_data.php\"> form action \"/submit_data.php\" <label> label </label> label <input type=\"text\" name=\"name\" /> input type \"text\" name \"name\" <label> label </label> label <input type=\"number\" name=\"mobile_no\"/> input type \"number\" name \"mobile_no\" <input type=\"submit\" value=\"Submit\"> input type \"submit\" value \"Submit\" </form> form",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "30. How to handle events in HTML?",
        "answer": "HTML allows event trigger actions in browsers using javascript or JQuery. There are a lot of events like ‘onclick’, ‘ondrag’, ‘onchange’, etc. <!DOCTYPE html>\n<html>\n   <body style=\"padding-top:50px\">\n       <h3 id=\"event_demo\">0</h3>\n       <input type=\"button\" onclick=\"myFunction()\" value=\"Click Me\" />\n       <input type=\"reset\" onclick=\"reset()\" value=\"Reset\" />\n   </body>\n   \n   <script>\n       function myFunction() {\n           var value = document.getElementById(\"event_demo\").innerHTML\n           value = parseInt(value) + 1;\n           document.getElementById(\"event_demo\").innerHTML = value;\n       }\n       function reset() {\n           document.getElementById(\"event_demo\").innerHTML = 0;\n       }\n   </script>\n</html> <!DOCTYPE html>\n<html>\n   <body style=\"padding-top:50px\">\n       <h3 id=\"event_demo\">0</h3>\n       <input type=\"button\" onclick=\"myFunction()\" value=\"Click Me\" />\n       <input type=\"reset\" onclick=\"reset()\" value=\"Reset\" />\n   </body>\n   \n   <script>\n       function myFunction() {\n           var value = document.getElementById(\"event_demo\").innerHTML\n           value = parseInt(value) + 1;\n           document.getElementById(\"event_demo\").innerHTML = value;\n       }\n       function reset() {\n           document.getElementById(\"event_demo\").innerHTML = 0;\n       }\n   </script>\n</html> <!DOCTYPE html> html <html> html <body style=\"padding-top:50px\"> body style \"padding-top:50px\" <h3 id=\"event_demo\"> h3 id \"event_demo\" </h3> h3 <input type=\"button\" onclick=\"myFunction()\" value=\"Click Me\" /> input type \"button\" onclick \"myFunction()\" value \"Click Me\" <input type=\"reset\" onclick=\"reset()\" value=\"Reset\" /> input type \"reset\" onclick \"reset()\" value \"Reset\" </body> body <script> script function myFunction() {\n           var value = document.getElementById(\"event_demo\").innerHTML\n           value = parseInt(value) + 1;\n           document.getElementById(\"event_demo\").innerHTML = value;\n       }\n       function reset() {\n           document.getElementById(\"event_demo\").innerHTML = 0;\n       } function myFunction() function myFunction  var document \"event_demo\" parseInt 1 document \"event_demo\" function reset() function reset  document \"event_demo\" 0 </script> script </html> html",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "1. What is new about the relationship between the <header> and <h1> tags in HTML5?",
        "answer": "As HTML5 was all about better semantics and arrangements of the tags and elements, the <header> tag specifies the header section of the webpage. Unlike in previous version there was one <h1> element for the entire webpage, now this is the header for one section such as <article> or <section>. According to the HTML5 specification, each <header> element must at least have one <h1> tag.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "2. Inline and block elements in HTML5?",
        "answer": "Inline Block\nInline elements just take up the space that is absolutely necessary for the content and does not start from a new line.\nExample:- <span>, <a>, <strong>, <img>, <button>, <em>, <select>, <abbr>, <label>, <sub>, <cite>, <abbr>, <script>, <label>, <i>, <input>, <output>, <q>, etc. Block elements start on a new line and consume the full width of the page available.\nExample:- <div>, <p>, <header>, <footer>, <h1>...<h6>, <form>, <table>, <canvas>, <video>, <blockquote>, <pre>, <ul>, <ol>, <figcaption>, <figure>, <hr>, <article>, <section>, etc. Inline Block\nInline elements just take up the space that is absolutely necessary for the content and does not start from a new line.\nExample:- <span>, <a>, <strong>, <img>, <button>, <em>, <select>, <abbr>, <label>, <sub>, <cite>, <abbr>, <script>, <label>, <i>, <input>, <output>, <q>, etc. Block elements start on a new line and consume the full width of the page available.\nExample:- <div>, <p>, <header>, <footer>, <h1>...<h6>, <form>, <table>, <canvas>, <video>, <blockquote>, <pre>, <ul>, <ol>, <figcaption>, <figure>, <hr>, <article>, <section>, etc. Inline Block Inline Block Inline Block Inline elements just take up the space that is absolutely necessary for the content and does not start from a new line.\nExample:- <span>, <a>, <strong>, <img>, <button>, <em>, <select>, <abbr>, <label>, <sub>, <cite>, <abbr>, <script>, <label>, <i>, <input>, <output>, <q>, etc. Block elements start on a new line and consume the full width of the page available.\nExample:- <div>, <p>, <header>, <footer>, <h1>...<h6>, <form>, <table>, <canvas>, <video>, <blockquote>, <pre>, <ul>, <ol>, <figcaption>, <figure>, <hr>, <article>, <section>, etc. Inline elements just take up the space that is absolutely necessary for the content and does not start from a new line.\nExample:- <span>, <a>, <strong>, <img>, <button>, <em>, <select>, <abbr>, <label>, <sub>, <cite>, <abbr>, <script>, <label>, <i>, <input>, <output>, <q>, etc. Block elements start on a new line and consume the full width of the page available.\nExample:- <div>, <p>, <header>, <footer>, <h1>...<h6>, <form>, <table>, <canvas>, <video>, <blockquote>, <pre>, <ul>, <ol>, <figcaption>, <figure>, <hr>, <article>, <section>, etc. Inline elements just take up the space that is absolutely necessary for the content and does not start from a new line.\nExample:- <span>, <a>, <strong>, <img>, <button>, <em>, <select>, <abbr>, <label>, <sub>, <cite>, <abbr>, <script>, <label>, <i>, <input>, <output>, <q>, etc.  Block elements start on a new line and consume the full width of the page available.\nExample:- <div>, <p>, <header>, <footer>, <h1>...<h6>, <form>, <table>, <canvas>, <video>, <blockquote>, <pre>, <ul>, <ol>, <figcaption>, <figure>, <hr>, <article>, <section>, etc.   ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "3. What is the difference between <figure> tag and <img> tag?",
        "answer": "The <figure> tag specifies the self-contained content, like diagrams, images, code snippets, etc. <figure> tag is used to semantically organize the contents of an image like image, image caption, etc., whereas the <img> tag is used to embed the picture in the HTML5 document.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "4. How to specify the metadata in HTML5?",
        "answer": "To specify we can use <meta> tag which is a void tag,i.e., it does not have a closing tag. Some of the attributes used with meta tags are name, content, http-equiv, etc. The below image tells how to specify the metadata.  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "5. Is the <datalist> tag and <select> tag same?",
        "answer": "No. The <datalist> tag and <select> tag are different. In the case of <select> tag a user will have to choose from a list of options, whereas <datalist> when used along with the <input> tag provides a suggestion that the user selects one of the options given or can enter some entirely different value.  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "6. Define Image Map?",
        "answer": "Image Map lets a developer map/link different parts of images with the different web pages. It can be achieved by the <map> tag in HTML5, using which we can link images with clickable areas. <img  src=”image_url” ,  usemap=”#workspace” />\n<map  name=”workspace”>\n     <area shape=”rect”  coords=”34, 44, 270, 350” ,  href=”xyz.html” />\n     <area shape=”rect”  coords=”10, 120, 250, 360” ,  href=”xyz.html” />\n</map> <img  src=”image_url” ,  usemap=”#workspace” />\n<map  name=”workspace”>\n     <area shape=”rect”  coords=”34, 44, 270, 350” ,  href=”xyz.html” />\n     <area shape=”rect”  coords=”10, 120, 250, 360” ,  href=”xyz.html” />\n</map> <img  src=”image_url” ,  usemap=”#workspace” /> img src ”image_url” usemap ”#workspace” <map  name=”workspace”> map name ”workspace” <area shape=”rect”  coords=”34, 44, 270, 350” ,  href=”xyz.html” /> area shape ”rect” coords ”34, 44 270 350 href ”xyz.html” <area shape=”rect”  coords=”10, 120, 250, 360” ,  href=”xyz.html” /> area shape ”rect” coords ”10, 120 250 360 href ”xyz.html” </map> map",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "7. What are Semantic Elements?",
        "answer": "Semantic elements are those which describe the particular meaning to the browser and the developer. Elements like <form>, <table>, <article>, <figure>, etc., are semantic elements.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "8. Convert the below data into Tabular format in HTML5?",
        "answer": "S.no., Language, Mostly used for 1, HTML, FrontEnd 2, CSS, FrontEnd 3, Python, BackEnd  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "9. What is the difference between <meter> tag and <progress> tag?",
        "answer": "<progress> tag should be used when we want to show the completion progress of a task, whereas if we just want a scalar measurement within a known range or fraction value. Also, we can specify multiple extra attributes for <meter> tags like ‘form’, ‘low’, ‘high’, ‘min’, etc.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "10. Is drag and drop possible using HTML5 and how?",
        "answer": "Yes, in HTML5 we can drag and drop an element. This can be achieved using the drag and drop-related events to be used with the element which we want to drag and drop.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "11. Difference between SVG and Canvas HTML5 element?",
        "answer": "SVG Canvas\nSVG is a vector based i.e., composed of shapes.  It is Raster based i.e., composed of pixels.\nSVG works better with a larger surface. Canvas works better with a smaller surface.\nSVG can be modified using CSS and scripts. Canvas can only be modified using scripts.\nSVG is highly scalable. So we can print at high quality with high resolution. It is less scalable. SVG Canvas\nSVG is a vector based i.e., composed of shapes.  It is Raster based i.e., composed of pixels.\nSVG works better with a larger surface. Canvas works better with a smaller surface.\nSVG can be modified using CSS and scripts. Canvas can only be modified using scripts.\nSVG is highly scalable. So we can print at high quality with high resolution. It is less scalable. SVG Canvas SVG Canvas SVG Canvas SVG is a vector based i.e., composed of shapes.  It is Raster based i.e., composed of pixels.\nSVG works better with a larger surface. Canvas works better with a smaller surface.\nSVG can be modified using CSS and scripts. Canvas can only be modified using scripts.\nSVG is highly scalable. So we can print at high quality with high resolution. It is less scalable. SVG is a vector based i.e., composed of shapes.  It is Raster based i.e., composed of pixels. SVG is a vector based i.e., composed of shapes. It is Raster based i.e., composed of pixels. SVG works better with a larger surface. Canvas works better with a smaller surface. SVG works better with a larger surface. Canvas works better with a smaller surface. SVG can be modified using CSS and scripts. Canvas can only be modified using scripts. SVG can be modified using CSS and scripts. Canvas can only be modified using scripts. SVG is highly scalable. So we can print at high quality with high resolution. It is less scalable. SVG is highly scalable. So we can print at high quality with high resolution. It is less scalable.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "12. What type of audio files can be played using HTML5?",
        "answer": "HTML5 supports the following three types of audio file formats: Mp3\nWAV\nOgg Mp3 WAV Ogg",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "13. What are the significant goals of the HTML5 specification?",
        "answer": "These were the target area of the HTML5 specs: Introduction of new element tags to better structure the web page such as <header> tag.\nForming a standard in cross-browser behavior and support for different devices and platforms\nBackward compatible with the older version HTML web pages\nIntroduction of basic interactive elements without the dependency of plugins such as <video> tag instead of the flash plugin. Introduction of new element tags to better structure the web page such as <header> tag. Forming a standard in cross-browser behavior and support for different devices and platforms Backward compatible with the older version HTML web pages Introduction of basic interactive elements without the dependency of plugins such as <video> tag instead of the flash plugin.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "14. Explain the concept of web storage in HTML5.",
        "answer": "This web storage helps in storing some of the static data in the local storage of the browser so that we do not need to fetch it from the server every time we need it. There is a size limit based on different browsers. This helps in decreasing the load time and a smooth user experience. There are two types of web storage that are used to store data locally in HTML5: Local Storage - This helps in storing data that will be retained even though the user reopens the browser. It is stored for each webapp on different browsers.\nSession Storage - This is used for one session only. After the user closes the browser this gets deleted. Local Storage - This helps in storing data that will be retained even though the user reopens the browser. It is stored for each webapp on different browsers. Local Storage Session Storage - This is used for one session only. After the user closes the browser this gets deleted. Session Storage",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "15. What is Microdata in HTML5?",
        "answer": "It is used to help extract data for site crawlers and search engines. It is basically a group of name-value pairs. The groups are called items, and each name-value pair is a property. Most of the search engines like Google, Microsoft, Yandex, etc follow schema.org vocabulary to extract this microdata. <div itemscope itemtype=\"http://schema.org/SoftwareApplication\">\n <span itemprop=\"name\">Interviewbit Games</span> -\n REQUIRES <span itemprop=\"operatingSystem\">ANDROID</span><br>\n <link itemprop=\"applicationCategory\" href=\"http://schema.org/GameApplication\"/>\n <div itemprop=\"aggregateRating\" itemscope itemtype=\"http://schema.org/AggregateRating\">\nRATING:\n<span itemprop=\"ratingValue\">4.6</span> (\n<span itemprop=\"ratingCount\">8864</span> ratings )\n </div>\n <div itemprop=\"offers\" itemscope itemtype=\"http://schema.org/Offer\">\nPrice: Rs.<span itemprop=\"price\">1.00</span>\n<meta itemprop=\"priceCurrency\" content=\"INR\" />\n </div>\n</div> <div itemscope itemtype=\"http://schema.org/SoftwareApplication\">\n <span itemprop=\"name\">Interviewbit Games</span> -\n REQUIRES <span itemprop=\"operatingSystem\">ANDROID</span><br>\n <link itemprop=\"applicationCategory\" href=\"http://schema.org/GameApplication\"/>\n <div itemprop=\"aggregateRating\" itemscope itemtype=\"http://schema.org/AggregateRating\">\nRATING:\n<span itemprop=\"ratingValue\">4.6</span> (\n<span itemprop=\"ratingCount\">8864</span> ratings )\n </div>\n <div itemprop=\"offers\" itemscope itemtype=\"http://schema.org/Offer\">\nPrice: Rs.<span itemprop=\"price\">1.00</span>\n<meta itemprop=\"priceCurrency\" content=\"INR\" />\n </div>\n</div> <div itemscope itemtype=\"http://schema.org/SoftwareApplication\"> div itemscope itemtype \"http://schema.org/SoftwareApplication\" <span itemprop=\"name\"> span itemprop \"name\" </span> span <span itemprop=\"operatingSystem\"> span itemprop \"operatingSystem\" </span> span <br> br <link itemprop=\"applicationCategory\" href=\"http://schema.org/GameApplication\"/> link itemprop \"applicationCategory\" href \"http://schema.org/GameApplication\" <div itemprop=\"aggregateRating\" itemscope itemtype=\"http://schema.org/AggregateRating\"> div itemprop \"aggregateRating\" itemscope itemtype \"http://schema.org/AggregateRating\" <span itemprop=\"ratingValue\"> span itemprop \"ratingValue\" </span> span <span itemprop=\"ratingCount\"> span itemprop \"ratingCount\" </span> span </div> div <div itemprop=\"offers\" itemscope itemtype=\"http://schema.org/Offer\"> div itemprop \"offers\" itemscope itemtype \"http://schema.org/Offer\" <span itemprop=\"price\"> span itemprop \"price\" </span> span <meta itemprop=\"priceCurrency\" content=\"INR\" /> meta itemprop \"priceCurrency\" content \"INR\" </div> div </div> div itemid – The unique, global identifier of an item.\nitemprop – Used to add properties to an item.\nitemref – Provides a list of element ids with additional properties.\nitemscope – It defines the scope of the itemtype associated with it.\nitemtype – Specifies the URL of the vocabulary that will be used to define itemprop. itemid – The unique, global identifier of an item. itemid itemprop – Used to add properties to an item. itemprop itemref – Provides a list of element ids with additional properties. itemref itemscope – It defines the scope of the itemtype associated with it. itemscope itemtype – Specifies the URL of the vocabulary that will be used to define itemprop. itemtype The above example will be parsed by Google as  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "16. Which tag is used for representing the result of a calculation? Explain its attributes.",
        "answer": "The <output> tag is used for representing the result of a calculation. It has the following attributes: for - It defines the relationship between the elements used in calculation and result.\nform - This is used to define the form the output element belongs to.\nname - The name of the output element. for - It defines the relationship between the elements used in calculation and result. for form - This is used to define the form the output element belongs to. form name - The name of the output element. name <form oninput = \"result.value=parseInt(n1.value)+parseInt(n2.value)\">\n     <input type = \"number\" name = \"n1\" value = \"1\" /> +\n     <input type = \"number\" name = \"n2\" value = \"2\" /><br />\n     The output is: <output name = \"result\"></output>\n</form> <form oninput = \"result.value=parseInt(n1.value)+parseInt(n2.value)\">\n     <input type = \"number\" name = \"n1\" value = \"1\" /> +\n     <input type = \"number\" name = \"n2\" value = \"2\" /><br />\n     The output is: <output name = \"result\"></output>\n</form> <form oninput = \"result.value=parseInt(n1.value)+parseInt(n2.value)\"> form oninput \"result.value=parseInt(n1.value)+parseInt(n2.value)\" <input type = \"number\" name = \"n1\" value = \"1\" /> input type \"number\" name \"n1\" value \"1\" <input type = \"number\" name = \"n2\" value = \"2\" /> input type \"number\" name \"n2\" value \"2\" <br /> br <output name = \"result\"> output name \"result\" </output> output </form> form The above example looks like  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "17. How can we include audio or video in a webpage?",
        "answer": "HTML5 provides two tags: <audio> and <video> tags using which we can add the audio or video directly in the webpage.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "18. Explain HTML5 Graphics.",
        "answer": "HTML5 supports two kinds of graphics: Canvas - It is like drawing on a whitepaper or a blank webpage. We can add different graphic designs on web pages with available methods for drawing various geometrical shapes. Canvas - It is like drawing on a whitepaper or a blank webpage. We can add different graphic designs on web pages with available methods for drawing various geometrical shapes. Canvas <!DOCTYPE HTML>\n<html>\n <head>\n </head>\n <body>\n   <canvas width=\"300\" height=\"100\" style=\"border:2px solid;\"></canvas>  \n </body>\n</html> <!DOCTYPE HTML>\n<html>\n <head>\n </head>\n <body>\n   <canvas width=\"300\" height=\"100\" style=\"border:2px solid;\"></canvas>  \n </body>\n</html> <!DOCTYPE HTML> HTML <html> html <head> head </head> head <body> body <canvas width=\"300\" height=\"100\" style=\"border:2px solid;\"> canvas width \"300\" height \"100\" style \"border:2px solid;\" </canvas> canvas </body> body </html> html SVG - Scalable Vector Graphics are used mostly for diagrams or icons. It follows the XML format. SVG - Scalable Vector Graphics are used mostly for diagrams or icons. It follows the XML format. SVG <!DOCTYPE html>\n<html>\n <body>\n   <svg width=\"400\" height=\"110\">\n     <rect width=\"300\" height=\"100\" style=\"fill:#FFF;stroke-width:2;stroke:#000\" />\n   </svg>\n </body>\n</html> <!DOCTYPE html>\n<html>\n <body>\n   <svg width=\"400\" height=\"110\">\n     <rect width=\"300\" height=\"100\" style=\"fill:#FFF;stroke-width:2;stroke:#000\" />\n   </svg>\n </body>\n</html> <!DOCTYPE html> html <html> html <body> body <svg width=\"400\" height=\"110\"> svg width \"400\" height \"110\" <rect width=\"300\" height=\"100\" style=\"fill:#FFF;stroke-width:2;stroke:#000\" /> rect width \"300\" height \"100\" style \"fill:#FFF;stroke-width:2;stroke:#000\" </svg> svg </body> body </html> html Both of the above examples produce this output and represent two different approaches provided by HTML5 to implement graphical aspects in the webpage.  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "19. Explain new input types provided by HTML5 for forms?",
        "answer": "Following are the significant new data types offered by HTML5: Date - Only select date by using type = \"date\"\nWeek - Pick a week by using type = \"week\"\nMonth - Only select month by using type = \"month\"\nTime - Only select time by using type = \"time\".\nDatetime - Combination of date and time by using type = \"datetime\"\nDatetime-local - Combination of  date and time by using type = \"datetime-local.\" but ignoring the timezone\nColor - Accepts multiple colors using type = \"color\"\nEmail - Accepts one or more email addresses using type = \"email\"\nNumber - Accepts a numerical value with additional checks like min and max using type = \"number\"\nSearch - Allows searching queries by inputting text using type = \"search\"\nTel - Allows different phone numbers by using type = \"tel\"\nPlaceholder - To display a short hint in the input fields before entering a value using type = \"placeholder\"\nRange - Accepts a numerical value within a specific range using type = \"range\"\nUrl - Accepts a web address using type = \"url” Date - Only select date by using type = \"date\" Week - Pick a week by using type = \"week\" Month - Only select month by using type = \"month\" Time - Only select time by using type = \"time\". Datetime - Combination of date and time by using type = \"datetime\" Datetime-local - Combination of  date and time by using type = \"datetime-local.\" but ignoring the timezone Color - Accepts multiple colors using type = \"color\" Email - Accepts one or more email addresses using type = \"email\" Number - Accepts a numerical value with additional checks like min and max using type = \"number\" Search - Allows searching queries by inputting text using type = \"search\" Tel - Allows different phone numbers by using type = \"tel\" Placeholder - To display a short hint in the input fields before entering a value using type = \"placeholder\" Range - Accepts a numerical value within a specific range using type = \"range\" Url - Accepts a web address using type = \"url” <form>  \n        <div>\n            <label>Date:</label>\n            <input type=\"date\" id=\"date\" />\n            <br>\n            <label>Week:</label>\n            <input type=\"week\" id=\"week\" />\n            <br>\n            <label>Month:</label>\n            <input type=\"month\" id=\"month\" />\n            <br>\n            <label>Time:</label>\n            <input type=\"time\" id=\"time\" />\n            <br>\n            <label>Datetime:</label>\n            <input type=\"datetime\" id=\"datetime\" />\n            <br>\n            <label>Datetime Local:</label>\n            <input type=\"datetime-local\" id=\"datetime-local\" />\n            <br>\n            <label>Color:</label>\n            <input type=\"color\" id=\"color\"/>\n            <br>\n            <label>Email:</label>\n            <input type=\"email\" id=\"email\" placeholder=\"email address\" />\n            <br>\n            <label>Number:</label>\n            <input type=\"number\" id=\"number\" />\n            <br>\n            <label>Search:</label>\n            <input type=\"search\" id=\"search\" />\n            <br>\n            <label>Phone:</label>\n            <input type=\"tel\" id=\"phone\" placeholder=\"Phone Number\" pattern=\"\\d{10}$\" />\n            <br>\n            <label>Range:</label>\n            <input type=\"range\" id=\"range\" />\n            <br>\n            <label>URL:</label>\n            <input type=\"url\" id=\"url\"/>\n        </div>  \n    </form> <form>  \n        <div>\n            <label>Date:</label>\n            <input type=\"date\" id=\"date\" />\n            <br>\n            <label>Week:</label>\n            <input type=\"week\" id=\"week\" />\n            <br>\n            <label>Month:</label>\n            <input type=\"month\" id=\"month\" />\n            <br>\n            <label>Time:</label>\n            <input type=\"time\" id=\"time\" />\n            <br>\n            <label>Datetime:</label>\n            <input type=\"datetime\" id=\"datetime\" />\n            <br>\n            <label>Datetime Local:</label>\n            <input type=\"datetime-local\" id=\"datetime-local\" />\n            <br>\n            <label>Color:</label>\n            <input type=\"color\" id=\"color\"/>\n            <br>\n            <label>Email:</label>\n            <input type=\"email\" id=\"email\" placeholder=\"email address\" />\n            <br>\n            <label>Number:</label>\n            <input type=\"number\" id=\"number\" />\n            <br>\n            <label>Search:</label>\n            <input type=\"search\" id=\"search\" />\n            <br>\n            <label>Phone:</label>\n            <input type=\"tel\" id=\"phone\" placeholder=\"Phone Number\" pattern=\"\\d{10}$\" />\n            <br>\n            <label>Range:</label>\n            <input type=\"range\" id=\"range\" />\n            <br>\n            <label>URL:</label>\n            <input type=\"url\" id=\"url\"/>\n        </div>  \n    </form> <form> form <div> div <label> label </label> label <input type=\"date\" id=\"date\" /> input type \"date\" id \"date\" <br> br <label> label </label> label <input type=\"week\" id=\"week\" /> input type \"week\" id \"week\" <br> br <label> label </label> label <input type=\"month\" id=\"month\" /> input type \"month\" id \"month\" <br> br <label> label </label> label <input type=\"time\" id=\"time\" /> input type \"time\" id \"time\" <br> br <label> label </label> label <input type=\"datetime\" id=\"datetime\" /> input type \"datetime\" id \"datetime\" <br> br <label> label </label> label <input type=\"datetime-local\" id=\"datetime-local\" /> input type \"datetime-local\" id \"datetime-local\" <br> br <label> label </label> label <input type=\"color\" id=\"color\"/> input type \"color\" id \"color\" <br> br <label> label </label> label <input type=\"email\" id=\"email\" placeholder=\"email address\" /> input type \"email\" id \"email\" placeholder \"email address\" <br> br <label> label </label> label <input type=\"number\" id=\"number\" /> input type \"number\" id \"number\" <br> br <label> label </label> label <input type=\"search\" id=\"search\" /> input type \"search\" id \"search\" <br> br <label> label </label> label <input type=\"tel\" id=\"phone\" placeholder=\"Phone Number\" pattern=\"\\d{10}$\" /> input type \"tel\" id \"phone\" placeholder \"Phone Number\" pattern \"\\d{10}$\" <br> br <label> label </label> label <input type=\"range\" id=\"range\" /> input type \"range\" id \"range\" <br> br <label> label </label> label <input type=\"url\" id=\"url\"/> input type \"url\" id \"url\" </div> div </form> form  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "20. What are the New tags in Media Elements in HTML5?",
        "answer": "<audio> - Used for sounds, audio streams, or music, embed audio content without any additional plug-in.\n<video> - Used for video streams, embed video content etc.\n<source> - Used for multiple media resources in media elements, such as audio, video, etc.\n<embed> - Used for an external application or embedded content.\n<track> - Used for subtitles in the media elements such as video or audio. <audio> - Used for sounds, audio streams, or music, embed audio content without any additional plug-in. <audio> <video> - Used for video streams, embed video content etc. <video> <source> - Used for multiple media resources in media elements, such as audio, video, etc. <source> <embed> - Used for an external application or embedded content. <embed> <track> - Used for subtitles in the media elements such as video or audio. <track> <label>\n       Video:\n   </label>\n    <video width=\"320\" height=\"240\" controls>\n        <source src=\"video.mp4\" type=\"video/mp4\">\n        <track src=\"subtitles.vtt\" kind=\"subtitles\" srclang=\"en\" label=\"English\">\n    </video>\n    <br>\n    <label>\n        Embed:\n    </label>\n    <embed type=\"video/webm\" src=\"https://www.youtube.com/embed/MpoE6s2psCw\" width=\"400\" height=\"300\">\n    <br>\n    <label>\n        Audio:\n    </label>\n    <audio controls>\n        <source src=\"audio.mp3\" type=\"audio/mpeg\">\n    </audio> <label>\n       Video:\n   </label>\n    <video width=\"320\" height=\"240\" controls>\n        <source src=\"video.mp4\" type=\"video/mp4\">\n        <track src=\"subtitles.vtt\" kind=\"subtitles\" srclang=\"en\" label=\"English\">\n    </video>\n    <br>\n    <label>\n        Embed:\n    </label>\n    <embed type=\"video/webm\" src=\"https://www.youtube.com/embed/MpoE6s2psCw\" width=\"400\" height=\"300\">\n    <br>\n    <label>\n        Audio:\n    </label>\n    <audio controls>\n        <source src=\"audio.mp3\" type=\"audio/mpeg\">\n    </audio> <label> label </label> label <video width=\"320\" height=\"240\" controls> video width \"320\" height \"240\" controls <source src=\"video.mp4\" type=\"video/mp4\"> source src \"video.mp4\" type \"video/mp4\" <track src=\"subtitles.vtt\" kind=\"subtitles\" srclang=\"en\" label=\"English\"> track src \"subtitles.vtt\" kind \"subtitles\" srclang \"en\" label \"English\" </video> video <br> br <label> label </label> label <embed type=\"video/webm\" src=\"https://www.youtube.com/embed/MpoE6s2psCw\" width=\"400\" height=\"300\"> embed type \"video/webm\" src \"https://www.youtube.com/embed/MpoE6s2psCw\" width \"400\" height \"300\" <br> br <label> label </label> label <audio controls> audio controls <source src=\"audio.mp3\" type=\"audio/mpeg\"> source src \"audio.mp3\" type \"audio/mpeg\" </audio> audio  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "21. Why do you think the addition of drag-and-drop functionality in HTML5 is important? How will you make an image draggable in HTML5?",
        "answer": "The drag and drop functionality is a very intuitive way to select local files. This is similar to what most of the OS have copy functionality thus making it very easy for the user to comprehend. Before the native drag and drop API, this was achievable by writing complex Javascript programming or external frameworks like jQuery. To enable this functionality there is a draggable attribute in the <img> tag and need to set ondrop and ondragover attribute to an eventhandler available in scripts. <!DOCTYPE HTML>\n<html>\n <head>\n   <script>\n     function allowDrop(ev) {\n       ev.preventDefault();\n     }\n     function drop(ev) {\n       ...\n     }\n   </script>\n </head>\n <body>\n   ...\n   <div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\" style=\"border: 1px solid #aaaaaa; width:350px; height: 70px;\"></div>\n   <br>\n   <img id=\"drag1\" src=\"img_logo.gif\" draggable=\"true\" width=\"336\" height=\"69\">\n    ...\n </body>\n</html> <!DOCTYPE HTML>\n<html>\n <head>\n   <script>\n     function allowDrop(ev) {\n       ev.preventDefault();\n     }\n     function drop(ev) {\n       ...\n     }\n   </script>\n </head>\n <body>\n   ...\n   <div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\" style=\"border: 1px solid #aaaaaa; width:350px; height: 70px;\"></div>\n   <br>\n   <img id=\"drag1\" src=\"img_logo.gif\" draggable=\"true\" width=\"336\" height=\"69\">\n    ...\n </body>\n</html> <!DOCTYPE HTML> HTML <html> html <head> head <script> script function allowDrop(ev) {\n       ev.preventDefault();\n     }\n     function drop(ev) {\n       ...\n     } function allowDrop(ev) function allowDrop ev function drop(ev) function drop ev </script> script </head> head <body> body <div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\" style=\"border: 1px solid #aaaaaa; width:350px; height: 70px;\"> div id \"div1\" ondrop \"drop(event)\" ondragover \"allowDrop(event)\" style \"border: 1px solid #aaaaaa; width:350px; height: 70px;\" </div> div <br> br <img id=\"drag1\" src=\"img_logo.gif\" draggable=\"true\" width=\"336\" height=\"69\"> img id \"drag1\" src \"img_logo.gif\" draggable \"true\" width \"336\" height \"69\" </body> body </html> html",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "22. Why do we need the MathML element in HTML5?",
        "answer": "MathML stands for Mathematical Markup Language. It is used for displaying mathematical expressions on web pages. For this <math> tag is used. <!DOCTYPE HTML>\n<html>\n <head>\n </head>\n <body>\n<math>\n  <mrow>\n    <mrow>\n      <msup>\n        <mi> a </mi>\n        <mn> 2 </mn>\n      </msup>\n      <mo> + </mo>\n      <msup>\n        <mi> b </mi>\n        <mn> 2 </mn>\n      </msup>\n      <mo> + </mo>\n      <mn> 2 </mn>\n      <mn> a </mn>\n      <mn> b </mn>\n    </mrow>\n    <mo> = </mo>\n    <mn> 0 </mn>\n  </mrow>\n</math>\n </body>\n</html> <!DOCTYPE HTML>\n<html>\n <head>\n </head>\n <body>\n<math>\n  <mrow>\n    <mrow>\n      <msup>\n        <mi> a </mi>\n        <mn> 2 </mn>\n      </msup>\n      <mo> + </mo>\n      <msup>\n        <mi> b </mi>\n        <mn> 2 </mn>\n      </msup>\n      <mo> + </mo>\n      <mn> 2 </mn>\n      <mn> a </mn>\n      <mn> b </mn>\n    </mrow>\n    <mo> = </mo>\n    <mn> 0 </mn>\n  </mrow>\n</math>\n </body>\n</html> <!DOCTYPE HTML> HTML <html> html <head> head </head> head <body> body <math> math <mrow> mrow <mrow> mrow <msup> msup <mi> mi </mi> mi <mn> mn </mn> mn </msup> msup <mo> mo </mo> mo <msup> msup <mi> mi </mi> mi <mn> mn </mn> mn </msup> msup <mo> mo </mo> mo <mn> mn </mn> mn <mn> mn </mn> mn <mn> mn </mn> mn </mrow> mrow <mo> mo </mo> mo <mn> mn </mn> mn </mrow> mrow </math> math </body> body </html> html This displays the equation a2 + b2 + 2ab = 0.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "23. What are the server-sent events in HTML5?",
        "answer": "The events pushed from the webserver to the browsers are called server-sent events. DOM elements can be continuously updated using these events. This has a major advantage over straight-up polling. In polling, there is a lot of overhead since every time it is establishing an HTTP connection and tearing it down whereas, in server-sent events, there is one long-lived HTTP connection. To use a server-sent event, <eventsource> element is used. The src attribute of this element specifies the URL from which sends a data stream having the events. <eventsource src = \"/cgi-bin/myfile.cgi\" /> <eventsource src = \"/cgi-bin/myfile.cgi\" /> <eventsource src = \"/cgi-bin/myfile.cgi\" /> eventsource src \"/cgi-bin/myfile.cgi\"",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "24. What are Web Workers?",
        "answer": "These are added to bring parallelism and async capability. It runs in the background to do the computationally expensive tasks without yielding to make the page responsive. It is achieved by starting a separate thread for such tasks. These are not meant to perform UI operations. There are three types of web workers: Dedicated Workers - These are workers that are utilized by a single script.\nShared Workers -These are workers that are utilized by multiple scripts running in different windows, IFrames, etc.\nService Workers - These act as proxy servers between web applications, the browser, and the network. Mostly used for push notifications and sync APIs. Dedicated Workers - These are workers that are utilized by a single script. Dedicated Workers Shared Workers -These are workers that are utilized by multiple scripts running in different windows, IFrames, etc. Shared Workers Service Workers - These act as proxy servers between web applications, the browser, and the network. Mostly used for push notifications and sync APIs. Service Workers <p>Count numbers: <output id=\"result\"></output></p>\n<button onclick=\"startWorker()\">Start Worker</button>\n<button onclick=\"stopWorker()\">Stop Worker</button>\n<script>\nvar w;\nfunction startWorker() {\n if(typeof(Worker) !== \"undefined\") {\nif(typeof(w) == \"undefined\") {\n  w = new Worker(\"demo_workers.js\");\n}\nw.onmessage = function(event) {\n  document.getElementById(\"result\").innerHTML = event.data;\n};\n }\n}\nfunction stopWorker() {\n w.terminate();\n w = undefined;\n}\n</script> <p>Count numbers: <output id=\"result\"></output></p>\n<button onclick=\"startWorker()\">Start Worker</button>\n<button onclick=\"stopWorker()\">Stop Worker</button>\n<script>\nvar w;\nfunction startWorker() {\n if(typeof(Worker) !== \"undefined\") {\nif(typeof(w) == \"undefined\") {\n  w = new Worker(\"demo_workers.js\");\n}\nw.onmessage = function(event) {\n  document.getElementById(\"result\").innerHTML = event.data;\n};\n }\n}\nfunction stopWorker() {\n w.terminate();\n w = undefined;\n}\n</script> <p> p <output id=\"result\"> output id \"result\" </output> output </p> p <button onclick=\"startWorker()\"> button onclick \"startWorker()\" </button> button <button onclick=\"stopWorker()\"> button onclick \"stopWorker()\" </button> button <script> script var w;\nfunction startWorker() {\n if(typeof(Worker) !== \"undefined\") {\nif(typeof(w) == \"undefined\") {\n  w = new Worker(\"demo_workers.js\");\n}\nw.onmessage = function(event) {\n  document.getElementById(\"result\").innerHTML = event.data;\n};\n }\n}\nfunction stopWorker() {\n w.terminate();\n w = undefined;\n} var function startWorker() function startWorker  if typeof \"undefined\" if typeof \"undefined\" new \"demo_workers.js\" function(event) function event document \"result\" function stopWorker() function stopWorker  undefined </script> script  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "25. What is the usage of a novalidate attribute for the form tag that is introduced in HTML5?",
        "answer": "Its value is a boolean type that indicates whether or not the data being submitted by the form will be validated beforehand. By making this false, forms can be submitted without validation which helps users to resume later also. <form action = \"\" method = \"get\" novalidate>\n        Name:<br><input type=\"name\" name=\"sname\"><br>\n       Doubt:<br><input type=\"number\" name=\"doubt\"><br>\n        <input type=\"submit\" value=\"Submit\">\n</form> <form action = \"\" method = \"get\" novalidate>\n        Name:<br><input type=\"name\" name=\"sname\"><br>\n       Doubt:<br><input type=\"number\" name=\"doubt\"><br>\n        <input type=\"submit\" value=\"Submit\">\n</form> <form action = \"\" method = \"get\" novalidate> form action \"\" method \"get\" novalidate <br> br <input type=\"name\" name=\"sname\"> input type \"name\" name \"sname\" <br> br <br> br <input type=\"number\" name=\"doubt\"> input type \"number\" name \"doubt\" <br> br <input type=\"submit\" value=\"Submit\"> input type \"submit\" value \"Submit\" </form> form",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "26. What are raster images and vector images?",
        "answer": "Raster Images - The raster image is defined by the arrangement of pixels in a grid with exactly what color the pixel should be. Few raster file formats include PNG(.png), JPEG(.jpg), etc.\nVector Images - The vector image is defined using algorithms with shape and path definitions that can be used to render the image on-screen written in a similar markup fashion. The file extension is .svg Raster Images  Vector Images",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "27. How to support SVG in old browsers?",
        "answer": "To support old browsers instead of defining the resource of svg in src attribute of <img> tag, it should be defined in srcset attribute and in src the fallback png file should be defined. <img src=\"circle.png\" alt=\"circle\" srcset=\"circle.svg\"> <img src=\"circle.png\" alt=\"circle\" srcset=\"circle.svg\"> <img src=\"circle.png\" alt=\"circle\" srcset=\"circle.svg\"> img src \"circle.png\" alt \"circle\" srcset \"circle.svg\"",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "28. What are different approaches to make an image responsive?",
        "answer": "Art direction - Using <picture> element the landscape image fully shown in desktop layout can be zoomed in with the main subject in focus for a portrait layout. Art direction - Using <picture> element the landscape image fully shown in desktop layout can be zoomed in with the main subject in focus for a portrait layout. Art direction <picture>\n <source media=\"(min-width: 650px)\" srcset=\"img_cup.jpg\">\n <img src=\"img_marsh.jpg\" style=\"width:auto;\">\n</picture> <picture>\n <source media=\"(min-width: 650px)\" srcset=\"img_cup.jpg\">\n <img src=\"img_marsh.jpg\" style=\"width:auto;\">\n</picture> <picture> picture <source media=\"(min-width: 650px)\" srcset=\"img_cup.jpg\"> source media \"(min-width: 650px)\" srcset \"img_cup.jpg\" <img src=\"img_marsh.jpg\" style=\"width:auto;\"> img src \"img_marsh.jpg\" style \"width:auto;\" </picture> picture Bigger Screen (>650px) Bigger Screen (>650px) Bigger Screen (>650px)   For any other screen For any other screen For any other screen   Resolution switching - Instead of zoom and crop the images can be scaled accordingly using vector graphics. Also, this can be further optimized to serve different pixel density screens as well. Resolution switching - Instead of zoom and crop the images can be scaled accordingly using vector graphics. Also, this can be further optimized to serve different pixel density screens as well. Resolution switching For example SVG For example SVG For example SVG <svg width=\"100\" height=\"100\">\n <circle cx=\"50\" cy=\"50\" r=\"40\"\n stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" />\n</svg> <svg width=\"100\" height=\"100\">\n <circle cx=\"50\" cy=\"50\" r=\"40\"\n stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" />\n</svg> <svg width=\"100\" height=\"100\"> svg width \"100\" height \"100\" <circle cx=\"50\" cy=\"50\" r=\"40\"\n stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" /> circle cx \"50\" cy \"50\" r \"40\" stroke \"green\" stroke-width \"4\" fill \"yellow\" </svg> svg  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "29. What is a manifest file in HTML5?",
        "answer": "The manifest file is used to list down resources that can be cached. Browsers use this information to make the web page load faster than the first time. There are 3 sections in the manifest file CACHE Manifest - Files needs to be cached\nNetwork - File never to be cached, always need a network connection.\nFallback - Fallback files in case a page is inaccessible CACHE Manifest - Files needs to be cached CACHE Manifest Network - File never to be cached, always need a network connection. Network Fallback - Fallback files in case a page is inaccessible Fallback CACHE MANIFEST\n# 2012-06-16 v1.0.0\n/style.css\n/logo.gif\n/main.js\nNETWORK:\nlogin.php\nFALLBACK:\n/html/ /offline.html CACHE MANIFEST\n# 2012-06-16 v1.0.0\n/style.css\n/logo.gif\n/main.js\nNETWORK:\nlogin.php\nFALLBACK:\n/html/ /offline.html <!DOCTYPE HTML>\n<html manifest=\"tutorial.appcache\">\n...\n...\n</html> <!DOCTYPE HTML>\n<html manifest=\"tutorial.appcache\">\n...\n...\n</html> <!DOCTYPE HTML> HTML <html manifest=\"tutorial.appcache\"> html manifest \"tutorial.appcache\" </html> html",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "30. What is the Geolocation API in HTML5?",
        "answer": "Geolocation API is used to share the physical location of the client with websites. This helps in serving locale-based content and a unique experience to the user, based on their location. This works with a new property of the global navigator object and most of the modern browsers support this. var geolocation = navigator.geolocation; var geolocation = navigator.geolocation; var",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "31. Write HTML5 code to demonstrate the use of Geolocation API.",
        "answer": "<!DOCTYPE html>\n<html>\n  <body>\n     <p>Click \"try it\" button to get your coordinates.</p>\n     <button onclick=\"getLocation()\">Try It</button>\n     <p id=\"demo\"></p>\n     <script>\n        var x = document.getElementById(\"demo\");\n        \n        function getLocation() {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n          } else { \n            x.innerHTML = \"Geolocation functionality is not supported by this browser.\";\n          }\n        }\n        \n        function showPosition(position) {\n          x.innerHTML = \"Latitude: \" + position.coords.latitude + \n          \"<br>Longitude: \" + position.coords.longitude;\n        }\n     </script>\n  </body>\n</html> <!DOCTYPE html>\n<html>\n  <body>\n     <p>Click \"try it\" button to get your coordinates.</p>\n     <button onclick=\"getLocation()\">Try It</button>\n     <p id=\"demo\"></p>\n     <script>\n        var x = document.getElementById(\"demo\");\n        \n        function getLocation() {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n          } else { \n            x.innerHTML = \"Geolocation functionality is not supported by this browser.\";\n          }\n        }\n        \n        function showPosition(position) {\n          x.innerHTML = \"Latitude: \" + position.coords.latitude + \n          \"<br>Longitude: \" + position.coords.longitude;\n        }\n     </script>\n  </body>\n</html> <!DOCTYPE html> html <html> html <body> body <p> p </p> p <button onclick=\"getLocation()\"> button onclick \"getLocation()\" </button> button <p id=\"demo\"> p id \"demo\" </p> p <script> script var x = document.getElementById(\"demo\");\n        \n        function getLocation() {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n          } else { \n            x.innerHTML = \"Geolocation functionality is not supported by this browser.\";\n          }\n        }\n        \n        function showPosition(position) {\n          x.innerHTML = \"Latitude: \" + position.coords.latitude + \n          \"<br>Longitude: \" + position.coords.longitude;\n        } var document \"demo\" function getLocation() function getLocation  if else \"Geolocation functionality is not supported by this browser.\" function showPosition(position) function showPosition position \"Latitude: \" \"<br>Longitude: \" </script> script </body> body </html> html The above example asks for user permission for accessing the location data via geolocation API and after clicking the button the coordinates of the physical location of the client get displayed.  ",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "32. Explain Web Components and it’s usage.",
        "answer": "These are used to create reusable custom elements which are very difficult in traditional HTML. It consists of three technologies: Custom elements - These are JavaScript APIs that help in defining custom elements and their behavior.\nShadow DOM - These are JavaScript APIs that attach an encapsulated shadow DOM tree to an element to keep the element’s features private and unaffected by other parts. Custom elements - These are JavaScript APIs that help in defining custom elements and their behavior. Custom elements Shadow DOM - These are JavaScript APIs that attach an encapsulated shadow DOM tree to an element to keep the element’s features private and unaffected by other parts. Shadow DOM <!DOCTYPE html>\n<html>\n <head>\n<meta charset=\"utf-8\">\n<title>composed and composedPath demo</title>\n<script src=\"main.js\" defer></script>\n </head>\n <body>\n<h1><code>composed</code> and <code>composedPath</code> demo</h1>\n<open-shadow text=\"I have an open shadow root\"></open-shadow>\n<closed-shadow text=\"I have a closed shadow root\"></closed-shadow>\n </body>\n</html> <!DOCTYPE html>\n<html>\n <head>\n<meta charset=\"utf-8\">\n<title>composed and composedPath demo</title>\n<script src=\"main.js\" defer></script>\n </head>\n <body>\n<h1><code>composed</code> and <code>composedPath</code> demo</h1>\n<open-shadow text=\"I have an open shadow root\"></open-shadow>\n<closed-shadow text=\"I have a closed shadow root\"></closed-shadow>\n </body>\n</html> <!DOCTYPE html> html <html> html <head> head <meta charset=\"utf-8\"> meta charset \"utf-8\" <title> title </title> title <script src=\"main.js\" defer> script src \"main.js\" defer </script> script </head> head <body> body <h1> h1 <code> code </code> code <code> code </code> code </h1> h1 <open-shadow text=\"I have an open shadow root\"> open-shadow text \"I have an open shadow root\" </open-shadow> open-shadow <closed-shadow text=\"I have a closed shadow root\"> closed-shadow text \"I have a closed shadow root\" </closed-shadow> closed-shadow </body> body </html> html customElements.define('open-shadow',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const pElem = document.createElement('p');\n  pElem.textContent = this.getAttribute('text');\n  const shadowRoot = this.attachShadow({mode: 'open'});\n  shadowRoot.appendChild(pElem);\n}\n }\n);\ncustomElements.define('closed-shadow',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const pElem = document.createElement('p');\n  pElem.textContent = this.getAttribute('text');\n  const shadowRoot = this.attachShadow({mode: 'closed'});\n  shadowRoot.appendChild(pElem);\n}\n }\n);\ndocument.querySelector('html').addEventListener('click', e => {\n console.log(e.composed);\n console.log(e.composedPath());\n}); customElements.define('open-shadow',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const pElem = document.createElement('p');\n  pElem.textContent = this.getAttribute('text');\n  const shadowRoot = this.attachShadow({mode: 'open'});\n  shadowRoot.appendChild(pElem);\n}\n }\n);\ncustomElements.define('closed-shadow',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const pElem = document.createElement('p');\n  pElem.textContent = this.getAttribute('text');\n  const shadowRoot = this.attachShadow({mode: 'closed'});\n  shadowRoot.appendChild(pElem);\n}\n }\n);\ndocument.querySelector('html').addEventListener('click', e => {\n console.log(e.composed);\n console.log(e.composedPath());\n}); 'open-shadow' class extends HTMLElement class extends HTMLElement constructor() constructor  super const document 'p' this 'text' const this mode 'open' 'closed-shadow' class extends HTMLElement class extends HTMLElement constructor() constructor  super const document 'p' this 'text' const this mode 'closed' document 'html' 'click' e => e console console   Here 2 custom elements are defined <open-shadow> and <closed-shadow> which takes their text content and inserts them into a shadow DOM as content of a <p> element. HTML templates - The markup templates are written using <template> and <slot> elements which can be reused multiple times as the basis of a custom element's structure. HTML templates - The markup templates are written using <template> and <slot> elements which can be reused multiple times as the basis of a custom element's structure. HTML templates <!DOCTYPE html>\n<html>\n<head>\n <meta charset=\"utf-8\">\n <title>Simple template</title>\n <script src=\"main.js\"></script>\n</head>\n<body>\n <h1>Simple template</h1>\n <template id=\"my-paragraph\">\n<style>\n  p {\n    color: white;\n    background-color: #666;\n    padding: 5px;\n  }\n</style>\n<p><slot name=\"my-text\">My default text</slot></p>\n </template>\n <my-paragraph>\n<span slot=\"my-text\">Let's have some different text!</span>\n </my-paragraph>\n <my-paragraph>\n<ul slot=\"my-text\">\n  <li>Let's have some different text!</li>\n  <li>In a list!</li>\n</ul>\n </my-paragraph>\n</body>\n</html> <!DOCTYPE html>\n<html>\n<head>\n <meta charset=\"utf-8\">\n <title>Simple template</title>\n <script src=\"main.js\"></script>\n</head>\n<body>\n <h1>Simple template</h1>\n <template id=\"my-paragraph\">\n<style>\n  p {\n    color: white;\n    background-color: #666;\n    padding: 5px;\n  }\n</style>\n<p><slot name=\"my-text\">My default text</slot></p>\n </template>\n <my-paragraph>\n<span slot=\"my-text\">Let's have some different text!</span>\n </my-paragraph>\n <my-paragraph>\n<ul slot=\"my-text\">\n  <li>Let's have some different text!</li>\n  <li>In a list!</li>\n</ul>\n </my-paragraph>\n</body>\n</html> <!DOCTYPE html> html <html> html <head> head <meta charset=\"utf-8\"> meta charset \"utf-8\" <title> title </title> title <script src=\"main.js\"> script src \"main.js\" </script> script </head> head <body> body <h1> h1 </h1> h1 <template id=\"my-paragraph\"> template id \"my-paragraph\" <style> style p {\n    color: white;\n    background-color: #666;\n    padding: 5px;\n  } p color background-color #666 padding 5px </style> style <p> p <slot name=\"my-text\"> slot name \"my-text\" </slot> slot </p> p </template> template <my-paragraph> my-paragraph <span slot=\"my-text\"> span slot \"my-text\" </span> span </my-paragraph> my-paragraph <my-paragraph> my-paragraph <ul slot=\"my-text\"> ul slot \"my-text\" <li> li </li> li <li> li </li> li </ul> ul </my-paragraph> my-paragraph </body> body </html> html customElements.define('my-paragraph',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const template = document.getElementById('my-paragraph');\n  const templateContent = template.content;\n  this.attachShadow({mode: 'open'}).appendChild(\n    templateContent.cloneNode(true)\n  );\n}\n }\n);\nconst slottedSpan = document.querySelector('my-paragraph span');\nconsole.log(slottedSpan.assignedSlot);\nconsole.log(slottedSpan.slot); customElements.define('my-paragraph',\n class extends HTMLElement {\nconstructor() {\n  super();\n  const template = document.getElementById('my-paragraph');\n  const templateContent = template.content;\n  this.attachShadow({mode: 'open'}).appendChild(\n    templateContent.cloneNode(true)\n  );\n}\n }\n);\nconst slottedSpan = document.querySelector('my-paragraph span');\nconsole.log(slottedSpan.assignedSlot);\nconsole.log(slottedSpan.slot); 'my-paragraph' class extends HTMLElement class extends HTMLElement constructor() constructor  super const document 'my-paragraph' const this mode 'open' true const document 'my-paragraph span' console console   Here we are reusing the <my-paragraph> template. References: Mozilla MDN Mozilla MDN W3C W3C Additional Resource Practice Coding\nFeatures of HTML\nHTML MCQ\nHTML Books\nHTML Projects\nHTML IDE\nHTML5 Features\nDifferent types of css\nTop Web Developer Interview Questions\nHow To Become Front End Developer\nDifference Between HTML and HTML5\nDifference Between Frontend and Backend\nDifference Between HTML and JavaScript\nDifference Between HTML and XML\nDifference Between HTML and XHTML\nDifference Between HTML and CSS\nView All Technical Interview Questions Practice Coding Practice Coding Features of HTML Features of HTML HTML MCQ HTML MCQ HTML Books HTML Books HTML Projects HTML Projects HTML IDE HTML IDE HTML5 Features HTML5 Features Different types of css Different types of css Top Web Developer Interview Questions Top Web Developer Interview Questions How To Become Front End Developer How To Become Front End Developer Difference Between HTML and HTML5 Difference Between HTML and HTML5 Difference Between Frontend and Backend Difference Between Frontend and Backend Difference Between HTML and JavaScript Difference Between HTML and JavaScript Difference Between HTML and XML Difference Between HTML and XML Difference Between HTML and XHTML Difference Between HTML and XHTML Difference Between HTML and CSS Difference Between HTML and CSS View All Technical Interview Questions View All Technical Interview Questions",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "33. What are some of the advantages of HTML5 over its previous versions?",
        "answer": "Some advantages of HTML5 are:- It has Multimedia Support.\nIt has the capabilities to store offline data using SQL databases and application cache.\nJavascript can be run in the background.\nHTML5 also allows users to draw various shapes like rectangles, circles, triangles, etc.\nIncluded new Semantic tags and form control tags. It has Multimedia Support. It has the capabilities to store offline data using SQL databases and application cache. Javascript can be run in the background. HTML5 also allows users to draw various shapes like rectangles, circles, triangles, etc. Included new Semantic tags and form control tags.",
        "reference": "interviewbit.com",
        "role": "html"
    },
    {
        "question": "1) What is HTML?",
        "answer": "HTML stands for Hyper Text Markup Language. It is a language of World Wide Web. It is a standard text formatting language which is used to create and display pages on the Web. It makes the text more interactive and dynamic. It can turn text into images, tables, links. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "2) What are Tags?",
        "answer": "HTML tags are composed of three things: an opening tag, content and ending tag. Some tags are unclosed tags.\nHTML documents contain two things:\ncontent, and\ntags\nWhen a web browser reads an HTML document, the browser reads it from top to bottom and left to right. HTML tags are used to create HTML documents and render their properties. Each HTML tags have different properties.\n\nSyntax\n<tag> content </tag>  \nContent is placed between tags to display data on the web page.\nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "3) Do all HTML tags have an end tag?",
        "answer": "No. There are some HTML tags that don't need a closing tag. For example: <image> tag, <br> tag. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "4) What is formatting in HTML?",
        "answer": "The HTML formatting is a process of format the text for a better look and feel. It uses different tags to make text bold, italicized, underlined. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "5) How many types of heading does an HTML contain?",
        "answer": "The HTML contains six types of headings which are defined with the <h1> to <h6> tags. Each type of heading tag displays different text size from another. So, <h1> is the largest heading tag and <h6> is the smallest one. For example:\n<h1>Heading no. 1</h1>    \n<h2>Heading no. 2</h2>    \n<h3>Heading no. 3</h3>    \n<h4>Heading no. 4</h4>    \n<h5>Heading no. 5</h5>    \n<h6>Heading no. 6</h6>    \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "6) How to create a hyperlink in HTML?",
        "answer": "The HTML provides an anchor tag to create a hyperlink that links one page to another page. These tags can appear in any of the following ways:\nUnvisited link - It is displayed, underlined and blue.\nVisited link - It is displayed, underlined and purple.\nActive link - It is displayed, underlined and red.\nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "7) Which HTML tag is used to display the data in the tabular form?",
        "answer": "The HTML table tag is used to display data in tabular form (row * column). It also manages the layout of the page, e.g., header section, navigation bar, body content, footer section. Here is the list of tags used while displaying the data in the tabular form:\nTag Description\n<table> It defines a table.\n<tr> It defines a row in a table.\n<th> It defines a header cell in a table.\n<td> It defines a cell in a table.\n<caption> It defines the table caption.\n<colgroup> It specifies a group of one or more columns in a table for formatting.\n<col>\nIt is used with <colgroup> element to specify column properties for each column.\n<tbody> It is used to group the body content in a table.\n<thead> It is used to group the header content in a table.\n<tfooter> It is used to group the footer content in a table.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "8) What are some common lists that are used when designing a page?",
        "answer": "There are many common lists which are used to design a page. You can choose any or a combination of the following list types:\nOrdered list - The ordered list displays elements in numbered format. It is represented by <ol> tag.\nUnordered list - The unordered list displays elements in bulleted format. It is represented by <ul> tag.\nDefinition list - The definition list displays elements in definition form like in dictionary. The <dl>, <dt> and <dd> tags are used to define description list.\nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "9) What is the difference between HTML elements and tags?",
        "answer": "HTML elements communicate to the browser to render text. When the elements are enclosed by brackets <>, they form HTML tags. Most of the time, tags come in a pair and surround content.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "10) What is semantic HTML?",
        "answer": "Semantic HTML is a coding style. It is the use of HTML markup to reinforce the semantics or meaning of the content. For example: In semantic HTML <b> </b> tag is not used for bold statement as well as <i> </i> tag is used for italic. Instead of these we use <strong></strong> and <em></em> tags.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "11) What is an image map?",
        "answer": "Image map facilitates you to link many different web pages using a single image. It is represented by <map> tag. You can define shapes in images that you want to make part of an image mapping.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "12) How to insert a copyright symbol on a browser page?",
        "answer": "You can insert a copyright symbol by using &copy; or &#169; in an HTML file.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "13) How to create a nested webpage in HTML?",
        "answer": "The HTML iframe tag is used to display a nested webpage. In other words, it represents a webpage within a webpage. The HTML <iframe> tag defines an inline frame. For example:\n<!DOCTYPE html>    \n<html>    \n<body>    \n<h2>HTML Iframes example</h2>    \n<p>Use the height and width attributes to specify the size of the iframe:</p>    \n<iframe src=\"https://www.javatpoint.com/\" height=\"300\" width=\"400\"></iframe>    \n</body>    \n</html>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "14) How do you keep list elements straight in an HTML file?",
        "answer": "You can keep the list elements straight by using indents.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "15) Does a hyperlink only apply to text?",
        "answer": "No, you can use hyperlinks on text and images both. The HTML anchor tag defines a hyperlink that links one page to another page. The \"href\" attribute is the most important attribute of the HTML anchor tag.\nSyntax\n<a href = \"...........\"> Link Text </a>  \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "16) What is a style sheet?",
        "answer": "A style sheet is used to build a consistent, transportable, and well-designed style template. You can add these templates on several different web pages. It describes the look and formatting of a document written in markup language.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "17) Can you create a multi-colored text on a web page?",
        "answer": "Yes. To create a multicolor text on a web page you can use <font color =\"color\"> </font> for the specific texts you want to color.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "18) Is it possible to change the color of the bullet?",
        "answer": "The color of the bullet is always the color of the first text of the list. So, if you want to change the color of the bullet, you must change the color of the text.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "19) Explain the layout of HTML?",
        "answer": "HTML layout specifies a way in which the web page is arranged.\n\n\n\nEvery website has a specific layout to display content in a specific manner.\nFollowing are different HTML5 elements which are used to define the different parts of a webpage.\n<header>: It is used to define a header for a document or a section.\n<nav>: It is used to define a container for navigation links\n<section>: It is used to define a section in a document\n<article>: It is used to define an independent, self-contained article\n<aside>: It is used to define content aside from the content (like a sidebar)\n<footer>: It is used to define a footer for a document or a section",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "20) What is a marquee?",
        "answer": "Marquee is used to put the scrolling text on a web page. It scrolls the image or text up, down, left or right automatically. You should put the text which you want to scroll within the <marquee>......</marquee> tag. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "21) How many tags can be used to separate a section of texts?",
        "answer": "Three tags are used to separate the texts.\n<br> tag - Usually <br> tag is used to separate the line of text. It breaks the current line and conveys the flow to the next line\n<p> tag - The <p> tag contains the text in the form of a new paragraph.\n<blockquote> tag - It is used to define a large quoted section. If you have a large quotation, then put the entire text within <blockquote>.............</blockquote> tag.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "22) How to make a picture of a background image of a web page?",
        "answer": "To make a picture a background image on a web page, you should put the following tag code after the </head> tag.\n<body background = \"image.gif\">  \n\nHere, replace the \"image.gif\" with the name of your image file which you want to display on your web page.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "23) What are empty elements?",
        "answer": "HTML elements with no content are called empty elements. For example: <br>, <hr> etc.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "",
        "answer": "The span tag is used for following things:\nFor adding color on text\nFor adding background on text\nHighlight any color text\nExample:\n<p>  \n<span style=\"color:#ffffff;\">  \nIn this page we use span.  \n</span>  \n</p>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "25) What is the use of an iframe tag?",
        "answer": "An iframe is used to display a web page within a web page.\nSyntax:\n<iframe src=\"URL\"></iframe>  \nExample:\n<iframe src=\"demo_iframe.html\" width=\"200px\" height=\"200px\"></iframe>  \nTarget to a link:\n<iframe src=\"http://www.javatpoint.com\" name=\"iframe_a\"></iframe>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "26) What are the entities in HTML?",
        "answer": "The HTML character entities are used as a replacement for reserved characters in HTML. You can also replace characters that are not present on your keyboard by entities. These characters are replaced because some characters are reserved in HTML.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "27) Why is a URL encoded in HTML?",
        "answer": "An URL is encoded to convert non-ASCII characters into a format that can be used over the Internet because a URL is sent over the Internet by using the ASCII character-set only. If a URL contains characters outside the ASCII set, the URL has to be converted. The non-ASCII characters are replaced with a \"%\" followed by hexadecimal digits.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "28) Does a <!DOCTYPE html> tag is a HTML tag?",
        "answer": "No, the <!DOCTYPE html> declaration is not an HTML tag. There are many type of HTML e.g. HTML 4.01 Strict, HTML 4.01 Transitional, HTML 4.01 Frameset, XHTML 1.0 Strict, XHTML 1.0 Transitional, XHTML 1.0 Frameset, XHTML 1.1 etc. So, <!DOCTYPE html> is used to instruct the web browser about the HTML page.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "29) What is the canvas element in HTML5?",
        "answer": "The <canvas> element is a container that is used to draw graphics on the web page using scripting language like JavaScript. It allows for dynamic and scriptable rendering of 2D shapes and bitmap images. There are several methods in canvas to draw paths, boxes, circles, text and add images. For Example:\n<canvas id=\"myCanvas1\" width=\"300\" height=\"100\" style=\"border:2px solid;\">    \nYour browser does not support the HTML5 canvas tag.    \n</canvas>    \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "30) What is SVG?",
        "answer": "HTML SVG is used to describe the two-dimensional vector and vector/raster graphics. SVG images and their behaviors are defined in XML text files. So as XML files, you can create and edit an SVG image with the text editor. It is mostly used for vector type diagrams like pie charts, 2-Dimensional graphs in an X, Y coordinate system.\n<svg width=\"100\" height=\"100\">    \n <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"yellow\" stroke-width=\"4\" fill=\"red\" />    \n</svg>   \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "31) What are the different new form element types in HTML 5?",
        "answer": "Following is a list of 10 frequently used new elements in HTML 5:\nColor\nDate\nDatetime-local\nEmail\nTime\nUrl\nRange\nTelephone\nNumber\nSearch",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "32) Is there any need to change the web browsers to support HTML5?",
        "answer": "No. Almost all browsers (updated versions) support HTML 5. For example Chrome, Firefox, Opera, Safari, IE.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "33) Which type of video formats are supported by HTML5?",
        "answer": "HTML 5 supports three types of video format:\nmp4\nWebM\nOgg\nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "34) Is audio tag supported in HTML 5?",
        "answer": "Yes. It is used to add sound or music files on the web page. There are three supported file formats for HTML 5 audio tag.\nmp3\nWAV\nOgg\nLet's see the code to play mp3 file using HTML audio tag.\n<audio controls>    \n  <source src=\"koyal.mp3\" type=\"audio/mpeg\">    \nYour browser does not support the html audio tag.    \n</audio>    \nInstead of koyal.mp3, you can pass any mp3 file name.\nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "35) What is the difference between progress and meter tag?",
        "answer": "The progress tag is used to represent the progress of the task only while the meter tag is used to measure data within a given range. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "36) What is the use of figure tag in HTML 5?",
        "answer": "The figure tag is used to add a photo in the document on the web page. It is used to handle the group of diagrams, photos, code listing with some embedded content.\n<p>The Taj Mahal is widely recognized as \"the jewel of Muslim art in India and one of the universally admired masterpieces of the world's heritage.\"</p>    \n<figure>    \n  <img src=\"htmlpages/images/tajmahal.jpg\" alt=\"Taj Mahal\"/>    \n</figure>     \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "37) What is the use of figcaption tag in HTML 5?",
        "answer": "The <figcaption> element is used to provide a caption to an image. It is an optional tag and can appear before or after the content within the <figure> tag. The <figcaption> element is used with <figure> element and it can be placed as the first or last child of the <figure> element.\n<figure>    \n  <img src=\"htmlpages/images/tajmahal.jpg\" alt=\"Taj Mahal\"/>    \n<figcaption>Fig.1.1 - A front view of the great Taj Mahal in Agra.</figcaption>    \n</figure>      \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "38) What is button tag?",
        "answer": "The button tag is used in HTML 5. It is used to create a clickable button within the HTML form on the web page. It is generally used to create a \"submit\" or \"reset\" button. Let's see the code to display the button.\n<button name=\"button\" type=\"button\">Click Here</button>    \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "39) What is the use of details and summary tag?",
        "answer": "The details tag is used to specify some additional details on the web page. It can be viewed or hidden on demand. The summary tag is used with details tag. More details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "40) What is datalist tag?",
        "answer": "The HTML 5 datalist tag provides an autocomplete feature on the form element. It facilitates users to choose the predefined options to the users to select data.\n<label>    \n Enter your favorite cricket player: Press any character<br />    \n <input type=\"text\" id=\"favCktPlayer\" list=\"CktPlayers\">    \n <datalist id=\"CktPlayers\">    \n <option value=\"Sachin Tendulkar\">    \n <option value=\"Brian Lara\">    \n <option value=\"Jacques Kallis\">     \n <option value=\"Ricky Ponting\">     \n <option value=\"Rahul Dravid\">     \n <option value=\"Shane Warne\">     \n <option value=\"Rohit Sharma\">     \n <option value=\"Donald Bradman\">     \n <option value=\"Saurav Ganguly \">     \n <option value=\"AB diVilliers\">     \n <option value=\"Mahendra Singh Dhoni\">     \n <option value=\"Adam Gilchrist\">    \n </datalist>    \n</label>     \nMore details.",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "41) How are tags migrated from HTML4 to HTML5?",
        "answer": "No. Typical HTML4 Typical HTML5\n1) <div id=\"header\"> <header>\n2) <div id=\"menu\"> <nav>\n3) <div id=\"content\"> <section>\n4) <div id=\"post\"> <article>\n5) <div id=\"footer\"> <footer>\nHeader and Footer Example\nHTML 4 Header and Footer:\n<div id=\"header\">  \n  <h1>Monday Times</h1>  \n</div>  \n.  \n.  \n.  \n<div id=\"footer\">  \n  <p>&copy; JavaTpoint. All rights reserved.</p>  \n</div>  \nHTML 5 Header and Footer:\n<header>  \n  <h1>Monday Times</h1>  \n</header>  \n.  \n.  \n.  \n<footer>  \n  <p>© JavaTpoint. All rights reserved.</p>  \n</footer>  \nMenu Example\nHTML 4 Menu:\n<div id=\"menu\">  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</div>  \nHTML 5 Menu:\n<nav>  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</nav>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "Header and Footer Example",
        "answer": "HTML 4 Header and Footer:\n<div id=\"header\">  \n  <h1>Monday Times</h1>  \n</div>  \n.  \n.  \n.  \n<div id=\"footer\">  \n  <p>&copy; JavaTpoint. All rights reserved.</p>  \n</div>  \nHTML 5 Header and Footer:\n<header>  \n  <h1>Monday Times</h1>  \n</header>  \n.  \n.  \n.  \n<footer>  \n  <p>© JavaTpoint. All rights reserved.</p>  \n</footer>  \nMenu Example\nHTML 4 Menu:\n<div id=\"menu\">  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</div>  \nHTML 5 Menu:\n<nav>  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</nav>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "Menu Example",
        "answer": "HTML 4 Menu:\n<div id=\"menu\">  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</div>  \nHTML 5 Menu:\n<nav>  \n  <ul>  \n    <li>News</li>  \n    <li>Sports</li>  \n    <li>Weather</li>  \n  </ul>  \n</nav>",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "42) If I do not put <!DOCTYPE html> will HTML 5 work?",
        "answer": "No, the browser will not be able to identify that it is an HTML document and HTML 5 tags do not function properly..",
        "reference": "javatpoint.com",
        "role": "html"
    },
    {
        "question": "43) What is the use of the required attribute in HTML5?",
        "answer": "It forces a user to fill text on the text field or text area before submitting the form. It is used for form validation.\nExample:\nName: <input type=\"text\" name=\"name\" required>",
        "reference": "javatpoint.com",
        "role": "html"
    }
]