[
    {
        "question": "1. What is DevOps?",
        "answer": "Characteristics DevOps\nBasic premise A collaboration of development and operations teams. It is more of a cultural shift.\nRelated to Agile methodology\nPriorities Resource management, communication, and teamwork\nBenefits Speed, functionality, stability, and innovation",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "2. How do you define the role of a DevOps engineer?",
        "answer": "A DevOps engineer is responsible for bridging the gap between the development and operations teams by facilitating the delivery of high-quality software products. They use automation tools and techniques to streamline the software development lifecycle, monitor and optimize system performance, and ensure continuous deployment and delivery.\nMoreover, they ensure that everything in the development and operations process runs smoothly.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "3. How does DevOps differ from traditional software development methodologies?",
        "answer": "DevOps differs from traditional software development methodologies in its collaboration, automation, and continuous delivery. Instead of having separate teams for development and operations, DevOps promotes cross-functional teams that work together to streamline the entire software development process.\nDevOps also relies heavily on automation tools and techniques to accelerate development and ensure consistency, quality, and reliability in every lifecycle stage.\n\n\nGet 100% Hike!\nMaster Most in Demand Skills Now !\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "4. How does HTTP work?",
        "answer": "HTTP or Hypertext Transfer Protocol works in a client–server model like most other protocols. HTTP provides a way to interact with web resources by transmitting hypertext messages between clients and servers.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "5. In terms of development and infrastructure, mention the core operations of DevOps.",
        "answer": "The core operations of DevOps include:\nDevelopment\nVersion Control\nTesting\nIntegration\nDeployment\nDelivery\nConfiguration\nMonitoring\nFeedback\nCheck out this video for Interview Questions on DevOps:",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "6. What are some technical and business benefits of DevOps?",
        "answer": "Technical benefits:\nContinuous software delivery\nLess complex problems to fix\nFaster bug resolution\nBusiness benefits:\nFaster delivery of features for customer satisfaction\nMore stable operating environments\nMore time available to add product value\nWant to become a master in DevOps? Check out this DevOps Training!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "7. What is CI? What is its purpose?",
        "answer": "CI stands for continuous integration. It is a software development process where developers frequently merge code changes into a central repository. \n\nCI aims to detect issues early and ensure the codebase always works. By integrating code changes often, developers can identify and fix problems faster. This makes building, testing, and deploying the software easier.\nAre you ready to take a challenge to answer the utmost asked interview questions?\nTake a quick Quiz to check it out\nTake a Quiz",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "8. Name three important DevOps KPIs.",
        "answer": "Three of the most common DevOps KPIs are:\nMeantime to failure recovery\nDeployment frequency\nPercentage of failed deployments\nLearn the Azure DevOps Interview Questions to learn about the association of Azure and DevOps.\n\nIntermediate DevOps Interview Questions",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "9. Name some of the most important DevOps tools.",
        "answer": "This is a list of the most important DevOps Tools being used:\nGit\nMaven\nSelenium\nJenkins\nDocker\nPuppet\nChef\nAnsible\nNagios",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "10. What are the core principles of DevOps?",
        "answer": "The core principles of DevOps include continuous integration, continuous delivery, automation, collaboration, and monitoring. DevOps teams work together to automate as much of the software development process as possible, making it faster, more reliable, and more efficient.\nThey also collaborate closely to ensure everyone is on the same page and continuously working to improve the software through continuous monitoring and feedback loops.\n\nHere is an informative video on DevOps Tutorial for Beginners from Intellipaat:",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "11. How do you measure the success of DevOps implementation?",
        "answer": "To evaluate the success of a DevOps implementation, we can use key indicators such as the frequency of changes, the speed of implementation, error recovery time, and the incidents of issues arising from changes. These metrics enable us to assess the efficiency and effectiveness of our software development process. We can also ask for feedback from team members and clients to measure the satisfaction level with the software and its functionality.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "12. What is continuous delivery?",
        "answer": "Continuous delivery is a software development practice that automates the release process. Its primary objective is to ensure that software is consistently prepared for deployment to production. This means that code changes are frequently integrated, built, tested, and deployed in a repeatable and automated manner. It helps the teams to reduce the time and effort required to release software while maintaining high quality and reliability. With continuous delivery, teams can release software more frequently and confidently.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "13. What is the difference between continuous deployment and continuous delivery?",
        "answer": "Continuous deployment is a software development practice where code changes are automatically deployed to production as soon as they pass the necessary tests and checks. Continuous delivery, on the other hand, focuses on automating the software release process but allows for manual intervention to determine when and how code changes are deployed to production.\n\nWhile continuous deployment is fully automated, continuous delivery provides the flexibility to choose when and how to release code changes, even though the process is automated.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "14. What is infrastructure as code?",
        "answer": "Infrastructure as code (IaC) is a practice where infrastructure is defined and managed using code. Instead of manually configuring servers and infrastructure components, IaC allows teams to automate the provisioning, configuration, and deployment of infrastructure using code.\nThis approach helps teams achieve consistency, reduce errors, and increase speed and efficiency. IaC also enables teams to version control their infrastructure code, making it easier to track changes and collaborate.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "15. Is DevOps a tool?",
        "answer": "DevOps can’t be referred to as a tool; it is a collaborative work culture that combines development and operations teams for continuous development, testing, integration, deployment, and monitoring.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "16. What is a DevOps pipeline?",
        "answer": "A DevOps pipeline is a series of automated procedures that enable software development teams to quickly and efficiently develop, test, and deliver applications. A pipeline often has numerous steps, including code analysis, building, testing, packaging, and deployment. The pipeline’s stages are all automated, and changes to the code are always carried over from one stage to the next.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "17. How would you ensure your DevOps pipeline is scalable and can handle increased demand?",
        "answer": "You can take the following actions to ensure a DevOps pipeline is scalable and can cope with rising demand:\nUtilize cloud-based resources and tools to aid scalability\nImprove the scalability of the pipeline’s architecture and design\nUse orchestration and automation to increase efficiency\nTrack pipeline performance and find areas for improvement using performance monitoring and analytics\nTest and validate the pipeline frequently to ensure it can handle rising demand and workloads.\n\nAdvanced DevOps Interview Questions for Experienced",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "18. What is the role of collaboration in DevOps?",
        "answer": "DevOps requires collaboration since it encourages teamwork and communication between the development, operations, and other teams. DevOps teams can break down the barriers to information and improve the software development process by cooperating and exchanging information. The DevOps culture places immense value on collaboration, ensuring everyone works towards the same goals.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "19. What are the core operations of DevOps in terms of development and infrastructure?",
        "answer": "The core operations of DevOps are application development, version control, unit testing, deployment with infrastructure, monitoring, configuration, and orchestration.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "20. How do you integrate security testing into your DevOps pipeline?",
        "answer": "It is essential to use security tools that can automatically scan the code and infrastructure for vulnerabilities to integrate security testing into a DevOps pipeline. This can include devices such as static analysis security testing and dynamic application security testing.\nThese tools can be integrated into the build process to test for security issues and provide feedback to developers automatically. Additionally, it is essential to involve security experts early in the development process to identify potential security risks and ensure that security is integrated into every pipeline stage.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "21. What role does automation play in ensuring security in a DevOps environment?",
        "answer": "Automation plays a critical role in ensuring security in a DevOps environment. Automating security checks and testing makes detecting and fixing potential vulnerabilities and threats easier. Automation can also help ensure the consistent application of security policies across the entire pipeline, reducing the risk of human error.\nAdditionally, automation can enable continuous monitoring and threat detection, allowing for a rapid response to any possible security incidents. Overall, automation helps to create a more secure and resilient DevOps environment.\n\nDevOps Interview Questions for 2 Years Experience",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "22. What is the importance of continuous feedback in DevOps?",
        "answer": "Continuous feedback is essential in DevOps as it helps teams identify and address issues early, improving the quality and speed of software delivery. By collecting feedback throughout the software development process, teams can continuously monitor the performance of their applications and infrastructure and make improvements as needed.\nIt also helps to ensure that the software meets the needs of its users, resulting in better customer satisfaction and higher business value. Continuous feedback is a key element of the DevOps culture and promotes a mindset of continuous learning and improvement.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "23. How do you ensure that both development and operations teams adopt DevOps practices?",
        "answer": "You can practice the following to ensure development and operations teams adopt DevOps practices:\nEstablish clear goals and objectives for the DevOps initiative\nEncourage collaboration and communication between teams\nProvide training and resources to help teams learn and adopt DevOps practices\nUse metrics and KPIs to measure progress and identify areas for improvement\nFoster a culture of continuous learning and improvement\nPromote ownership and accountability among team members\nCelebrate successes and share lessons learnt to build momentum and support for DevOps practices",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "24. How do you ensure your infrastructure is secure in a DevOps environment?",
        "answer": "To ensure that infrastructure is secure in a DevOps environment, you can take the following steps:\nImplement DevOps best security practices in the development process\nUse automated security testing tools to identify vulnerabilities\nMonitor infrastructure continuously to detect and respond to security threats promptly\nEmploy role-based access control to restrict access to sensitive information\nRegularly update and patch systems and software to address known vulnerabilities\nEstablish incident responses and disaster recovery plans to minimize the impact of security incidents.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "25. Can you describe the role of security in a DevOps environment?",
        "answer": "Security is a key element integrated into the entire software development lifecycle in a DevOps context. Security ensures the software is created to comply with rules and defend against any security risks.\nDevOps teams should include professionals who are knowledgeable about the most current security standards, can spot security threats, and can put the best security practices into action. This guarantees that the program is secure from creation and constantly watched throughout the deployment and maintenance phases.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "26. How do you ensure your DevOps tools and technologies are up-to-date and secure?",
        "answer": "The success of every DevOps project depends on maintaining the most recent and secure versions of DevOps tools and technology. Regularly checking for updates and security patches for all the tools is crucial to ensuring this. You can accomplish this by joining the vendor’s email lists or following their social media accounts.It is also advised to employ security testing tools like vulnerability scanners and penetration testing programs to find and fix any security problems.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "27. What are the key security considerations when building a DevOps pipeline?",
        "answer": "Security should be considered throughout the development lifecycle when building a DevOps pipeline. Some key security considerations include ensuring that code is written securely, using secure and up-to-date software dependencies, and implementing security testing and vulnerability scanning tools.\nAccess control and authentication measures should also be implemented, and security incidents should be quickly identified and addressed.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "28. Can you describe the process for securing application containers in a DevOps environment?",
        "answer": "In a DevOps environment, securing application containers is critical to preventing cyber threats. The process typically starts with selecting a secure container registry and implementing a continuous integration and continuous deployment (CI/CD) pipeline, including vulnerability scanning and image signing.\nOnce the container images are deployed, access control and network segmentation are used to limit their exposure to potential threats. Regular security scanning, patching, monitoring, and logging are essential to maintaining container security.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "29. Why are monitoring and logging important in DevOps?",
        "answer": "In a DevOps environment, monitoring and logging are vital because they give insight into the system’s functionality, effectiveness, and security. While logging enables analysis of system events and actions, monitoring assists in identifying any issues before they become critical. \nIdentifying the root cause of problems simplifies the process of resolution and helps prevent their recurrence. Additionally, monitoring and logging offer insights into user behavior and usage patterns, facilitating better optimization and decision-making.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "30. How does DevOps help in reducing the time-to-market for software products?",
        "answer": "DevOps combines software development and IT operations to deliver software products quickly and efficiently. DevOps reduces time-to-market by promoting automation, collaboration, Agile development, and infrastructure as code. Automation tools reduce manual testing and deployment, and collaboration helps identify and resolve issues quickly. Agile development allows for rapid feedback and infrastructure as code automates infrastructure management.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "31. What is the difference between a container and a virtual machine?",
        "answer": "Virtual machines (VMs) and containers are two different approaches to running software. Applications can execute in a consistent environment across several systems due to containers, which are portable, lightweight environments that share the host system’s resources.\nA virtual machine (VM) is an operating system that operates entirely independently on top of a host machine while utilizing its resources, such as memory and CPU.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "32. How does automation help in DevOps?",
        "answer": "Automation plays a crucial role in DevOps by streamlining software development. It eliminates repetitive and time-consuming tasks like testing and deployment, leading to faster time-to-market, enhanced software quality, and reduced chances of human error. Automation tools are instrumental in achieving these benefits by automating various aspects of the software development process.\nAutomation also increases efficiency, scalability, and reliability, enabling teams to focus on innovation and value creation. \n\nDevOps Interview Questions for 3 Years Experience",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "33. Can you discuss the importance of identity and access management in a DevOps environment?",
        "answer": "Identity and access management is critical in a DevOps environment to ensure that only authorized personnel can access the systems and resources. It helps manage users’ identities, access to resources, and permissions. \nIdentity and access management ensures that users have access to the resources required for their roles and responsibilities. It also helps detect and prevent unauthorized access and ensures access requests are verified and authenticated.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "34. How do you approach testing in a DevOps environment?",
        "answer": "In a DevOps environment, testing is integrated into the software development process. Automated testing tools ensure that code changes are thoroughly tested before deployment and that feedback is continuously provided to developers. \nTesting is performed continuously throughout the software development lifecycle, allowing for early detection of issues and faster delivery of high-quality software.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "35. Can you tell me what continuous testing and automation testing are?",
        "answer": "Automation testing, as the name suggests, is a process of automating the manual testing process. It involves using separate testing tools that let developers create test scripts that can be executed repeatedly without manual intervention.\nContinuous testing is the process of executing automated tests as part of the software delivery pipeline in DevOps. Each build is tested continuously in this process, allowing the development team to get fast business feedback to prevent the problems from progressing to the next stage of the software delivery lifecycle. This will dramatically speed up a developer’s workflow. They no longer need to manually rebuild the project and re-run all tests after making changes.\nAlso, Check out our blog on Manual Testing vs. Automation Testing.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "36. What are the benefits of automation testing?",
        "answer": "Automation testing has several advantages, including quicker and more effective testing, expanded coverage, and higher test accuracy. It can save time and money in the long run because automated testing can be repeated without human intervention.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "37. Can one consider DevOps as an Agile methodology?",
        "answer": "DevOps can be considered complementary to the Agile methodology but not entirely similar.\n\nDevOps Interview Questions for 5 Years Experience",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "38. What is the role of continuous testing in DevOps?",
        "answer": "Continuous testing is a critical component of DevOps that involves testing early and often throughout the software development process. It provides continuous feedback to developers, ensuring that code changes are tested thoroughly and defects are detected early. Continuous testing helps improve software quality, reduce costs and time-to-market, and increase customer satisfaction.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "39. What is the role of cloud computing in DevOps?",
        "answer": "Cloud computing plays a vital role within the realm of DevOps, as it offers a versatile and scalable infrastructure for software development and deployment. Its provision of computing resources on demand, which are easily manageable and provisional, is instrumental in empowering DevOps teams. By leveraging cloud services, these teams are able to automate the deployment process, collaborate effectively, and seamlessly integrate various DevOps practices. \nWith an extensive range of services such as virtual machines, containers, serverless computing, and managed databases, cloud computing empowers teams to expedite software delivery, enhance scalability, and reduce infrastructure expenses. It significantly augments the overall DevOps lifecycle by facilitating faster development and deployment cycles.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "40. How can DevOps help improve customer satisfaction and drive business growth?",
        "answer": "DevOps can increase customer satisfaction and drive business growth by providing better software faster. DevOps teams can offer features that satisfy customers’ expectations quickly by concentrating on collaboration, continuous improvement, and customer feedback. It can result in more loyal consumers and, ultimately, the company’s growth.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "41. How can DevOps help organizations reduce the risk of software failures?",
        "answer": "DevOps reduces the risk of software failures by promoting collaboration between teams, continuous testing, and monitoring. It also encourages a culture of learning from mistakes to address issues quickly and prevent them from happening again.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "42. What are some common misconceptions about DevOps?",
        "answer": "One common misconception about DevOps is that it is solely focused on tools and automation. In reality, it is a cultural and organizational shift that involves collaboration between teams and breaking down barriers. \nAnother misconception is that DevOps is only for startups or tech companies, when it can be beneficial for any organization looking to improve its software development and delivery processes.\nPeople consider DevOps the responsibility of the IT department, but it requires buy-in and involvement from all levels of the organization.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "43. How can DevOps affect culture change to improve the business?",
        "answer": "DevOps can positively affect business culture by encouraging team collaboration, enhancing communication, and promoting a culture of continuous learning and improvement. This cultural change can result in delivering software products and services that are quicker and more effective, with greater customer satisfaction. Adopting DevOps practices enables organizations to develop a culture that values adaptability, creativity, and teamwork, ultimately improving business results.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "44. Our team has some ideas and wants to turn those ideas into a software application. Now, as a manager, I am confused about whether I should follow the Agile work culture or DevOps. Can you tell me why I should follow DevOps over Agile?",
        "answer": "According to the current market trend, instead of releasing big sets of features in an application, companies are launching small features for software with better product quality and quick customer feedback, for high customer satisfaction. To keep up with this, we have to:\nIncrease the deployment frequency with utmost safety and reliability\nLower the failure rate of new releases\nShorten the bug resolution time\nDevOps fulfills all these requirements for fast and reliable development and deployment of software. Companies like Amazon and Google have adopted DevOps and are launching thousands of code deployments per day. But Agile, on the other hand, only focuses on software development. \nLearn more about DevOps from this insightful DevOps Tutorial!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "45. How is DevOps different from Agile methodology?",
        "answer": "DevOps and Agile are two methodologies that aim to improve software development processes. Agile focuses on delivering features iteratively and incrementally, while DevOps focuses on creating a collaborative culture between development and operations teams to achieve faster delivery and more reliable software.\nDevOps also emphasizes the use of automation, continuous integration and delivery, and continuous feedback to improve the software development process. While Agile is primarily focused on the development phase, DevOps is focused on the entire software development lifecycle, from planning and coding to testing and deployment.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "46. What is the role of configuration management in DevOps?",
        "answer": "The major advantages of configuration management are given below:\nIt enables us to manage the configurations on multiple systems.\nIt allows us to standardize the configurations on all systems in a cluster.\nIt helps us in the administration and management of multiple servers in the architecture.\nStart a successful career as a Solutions Architect with Intellipaat! Check out our AWS Certification course.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "47. What is the role of AWS in DevOps?",
        "answer": "AWS in DevOps works as a  cloud provider, and it has the following roles:\nFlexible services: AWS provides us with ready-to-use resources for implementation.\nScaling purpose: We can deploy thousands of machines on AWS, depending on the requirement.\nAutomation: AWS helps us automate tasks using various services.\nSecurity: Using its security options (IAM), we can secure our deployments and builds.\nRead about the Work of DevOps Engineers in this blog by Intellipaat.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "48. Can you list certain key performance indicators (KPIs) that are used to gauge the success of DevOps?",
        "answer": "Deployment Frequency: It is the number of times an application is deployed in a specific period.\nMean Time to Recovery (MTTR): It is the average time taken to restore a failed system.\nLead Time: It is the time taken from code commit to production release.\nChange Failure Rate: It is the percentage of changes that cause issues or failures.\nTime to Detect and Respond (TTDR): It is the average time taken to detect and respond to incidents.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "49. What can be a preparatory approach for developing a project using the DevOps methodology?",
        "answer": "Understanding the project’s objectives, specifications, and deadlines is essential to developing a project using the DevOps process. All stakeholders should be included in the planning process, and means for communication should be established.\nTeams can also create a culture of collaboration, automate crucial procedures, and use a continuous improvement strategy. On the basis of the particular requirements and objectives of the project, it is also crucial to choose the right tools and technologies.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "50. What are the various branching strategies used in version control systems?",
        "answer": "Several branching strategies are used in version control systems, including trunk-based development, feature branching, release branching, and git-flow. Trunk-based development involves committing changes directly to the main branch, while feature branching involves creating a new branch for each new feature. \nRelease branching involves creating a separate branch for each release, and git-flow combines feature and release branches to create a more structured branching strategy. Each strategy has its advantages and disadvantages, and the choice of strategy depends on the specific needs of the project and the team.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "51. What are the benefits of using version control?",
        "answer": "It helps improve the collaborative work culture: Here, team members are allowed to work freely on any file at any time. The version control system allows us to merge all changes into a common version.\nIt keeps different versions of code files securely: All the previous versions and variants of code files are neatly packed up inside the version control system.\nIt understands what happened: Every time we save a new version of our project, the version control system asks us to provide a short description of what was changed. More than that it allows us to see what changes were made in the file’s content, as well as who has made those changes.\nIt keeps a backup: A distributed version control system like Git allows all team members to access the complete history of the project file so that in case there is a breakdown in the central server, they can use any of their teammate’s local Git repository.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "52. What are some common integration challenges that can arise when using multiple DevOps tools?",
        "answer": "When using multiple DevOps tools, integration challenges can arise, such as data incompatibility, conflicting configurations, and a lack of communication between tools. For example, a deployment tool may not be compatible with a monitoring tool, or a configuration management tool may have different settings from the testing tool.\nOrganizations can use integration frameworks, middleware, and APIs to facilitate communication between tools and ensure data consistency to overcome these challenges. It is also important to establish clear communication channels between teams using different tools to ensure effective collaboration.\n\nDevOps Interview Questions for Source Code Management: Git",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "53. Can you tell me the advantages of using Git?",
        "answer": "Data redundancy and replication\nHigh availability\nOnly one Git directory per repository\nSuperior disk utilization and network performance\nCollaboration friendly\nCan be used for any sort of project",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "54. Are git fetch and git pull the same?",
        "answer": "The command ‘git pull’ pulls any new commits from a branch from the central repository and then updates the target branch in the local repository.\nBut, ‘git fetch’ is a slightly different form of ‘git pull’. Unlike ‘git pull’, it pulls all new commits from the desired branch and then stores them in a new branch in the local repository.\nIn order to reflect these changes in your target branch, ‘git fetch’ must be followed with a ‘git merge’. The target branch will only be updated after merging with the fetched branch (where we performed ‘git fetch’). We can also interpret the whole thing with an equation like this:\ngit pull = git fetch + git merge\nLearn more about DevOps in this DevOps Training in Chennai to get ahead in your career!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "55. How do you handle merge conflicts in Git?",
        "answer": "In order to resolve merge conflicts in Git, we need to follow three steps:\nUnderstand what happened: It could be because of the same line being edited on the same file; it could be because of deleting some files, or it could also be because of files with the same file names. You can check everything by using ‘git status’.\nMark and clean up the conflict: When we open the files using the merge tool, Git marks the conflicted area like this ‘<<<<< HEAD’ and ‘ >>>>> [other/branch/name]’.\nPerform the commit again and then merge the current branch with the master branch.\nGo through this GIT Cheat Sheet and know more about GIT.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "56. Can you tell me some advantages of the forking workflow over other Git workflows?",
        "answer": "The forking workflow is fundamentally different from other Git workflows. Instead of using a single server-side repository to act as the ‘central’ codebase, the forking workflow gives every developer their server-side repositories. This workflow is most often seen in public open-source projects.The main advantage is that contributions can be integrated without the need for everyone to push to a single central repository to maintain a clean project history. Developers can push to their server-side repositories, and only the one who maintains the project will push it to the official repository.As soon as developers are ready to publish their local commits, they will push their commits to their public repositories. Then, they will perform a pull request from the main repository which notifies the project manager that an update is ready to be integrated.\nInterested in learning DevOps? Click here to learn more from this DevOps Training in Pune!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "57. When do you use ‘git rebase’ instead of ‘git merge’?",
        "answer": "Both ‘git rebases’ and ‘git merge’ commands are designed to integrate changes from one branch into another branch: just that they just do it in different ways.\nWhen we perform rebase of a feature branch onto the master branch, we move the base of the feature branch to the master branch’s ending point.\nBy performing a merge, we take the contents of the feature branch and integrate them with the master branch. As a result, only the master branch is changed, but the feature branch history remains the same. Merging adds a new commit to your history.\nRebasing will create inconsistent repositories. For individuals, rebasing makes a lot of sense. Now, in order to see the history completely, the same way as it has happened, we should use merge. Merge preserves history, whereas rebase rewrites it.\nGo through a few AWS DevOps Interview Questions in the blog by Intellipaat.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "58. I just made a bad git commit and made it public, and I need to revert the commit. Can you suggest how to do that?",
        "answer": "Here we need to use the Git command:\ngit revert <name the commit you wish to revert>\nThis command can revert any command just by adding the commit ID.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "59. Can you tell me how to squash the last n commits into a single commit? Is it even possible?",
        "answer": "To squash the last n commits into a single commit, we can use:\ngit reset — soft HEAD~n &&\ngit commit\n\nDevOps Interview Questions for Continuous Integration: Jenkins",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "60. I want to move or copy Jenkins from one server to another. Is it possible? If yes, how?",
        "answer": "I would suggest copying the Jenkins jobs directory from the old server to the new one. We can just move a job from one installation of Jenkins to another by copying the corresponding job directory.\nOr, we can also make a copy of an existing Jenkins job by making a clone of that job directory in a different name.\nAnother way is that we can rename an existing job by renaming the directory. But, if you change the name of a job, you will need to change any other job that tries to call the renamed job.\nBecome a master of DevOps by going through this online DevOps Training in Delhi!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "61. I have 40 jobs in the Jenkins dashboard and I need to build them all at once. Is it possible?",
        "answer": "Yes, it is. With the help of a Jenkins plugin, we can build DevOps projects one after the other. If one parent job is carried out, then automatically other jobs are also run. We also have the option to use Jenkins Pipeline jobs for the same.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "62. How will you secure Jenkins?",
        "answer": "The way to secure Jenkins is as follows:\nEnsure that global security is on\nCheck whether Jenkins is integrated with the company’s user directory with an appropriate plugin\nMake sure that the Project matrix is enabled to fine-tune access\nAutomate the process of setting rights or privileges in Jenkins with a custom version-controlled script\nLimit physical access to Jenkins data or folders\nPeriodically run security audits",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "63. Can you please tell me how to create a backup and copy files in Jenkins?",
        "answer": "To create a backup, all we need to do is periodically back up our JENKINS_HOME directory. This contains all of the build configurations of our job, our slave node configurations, and our build history. To create a backup of our Jenkins setup, just copy this directory. We can also copy a job directory to clone or replicate a job or rename the directory.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "64. What are Jenkins Pipeline and CI/CD Pipeline?",
        "answer": "Jenkins Pipeline can be defined as a suite of plugins supporting both the implementation and integration of Jenkins’ continuous delivery pipeline.\nContinuous integration or continuous delivery pipeline consists of build, deploy, test, and release. The pipeline feature is very time-saving. In other words, a pipeline is a group of build jobs that are chained and integrated in a sequence.\n\nDevOps Interview Questions for Continuous Testing: Selenium",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "65. How to launch a browser using WebDriver?",
        "answer": "For Firefox:\n WebDriver driver = new FirefoxDriver();\nFor Chrome:\nWebDriver driver = new ChromeDriver();\n\nFor Internet Explorer (IE):\n\nWebDriver driver = new InternetExplorerDriver();",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "66. Explain the different Selenium components.",
        "answer": "Following are the different components of Selenium:\nSelenium Integrated Development Environment (IDE) – The Selenium IDE consists of a simple framework and comes with a Firefox plug-in that can be easily installed. This Selenium component should be used for prototyping.\nSelenium Remote Control (RC) – It is a testing framework for developers and QA that supports coding in any programming language like Java, PHP, C#, Perl, etc. This helps automate the UI testing process of web applications against any HTTP website.\nSelenium WebDriver – It has a better approach to automating the testing process of web-based applications and does not rely on JavaScript. This web framework allows cross-browser tests to be performed.\nSelenium Grid – This proxy server works with Selenium RC, and with the help of browsers, it is able to run parallel tests on different nodes or machines.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "67. What are the testing types supported by Selenium?",
        "answer": "Selenium supports regression testing and functional testing.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "68. Are there any technical challenges with Selenium?",
        "answer": "It supports only web-based applications.\nIt does not support the Bitmap comparison.\nNo vendor support is available for Selenium compared to commercial tools like HP UFT.\nAs there is no object repository concept, the maintainability of objects becomes very complex.\nGet certified from the top DevOps Training in Noida now!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "69. When should I use Selenium Grid?",
        "answer": "Selenium Grid can be used to execute the same or different test scripts on multiple platforms and browsers, concurrently, in order to achieve distributed test execution. It allows testing under different environments, remarkably saving execution time.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "70. Describe the difference between driver.close() and driver.quit().",
        "answer": "The driver.close command closes the focused browser window. But, the driver.quit command calls the driver.dispose method which closes all browser windows and also ends the WebDriver session.\n\nDevOps Chef Interview Questions",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "71. Why are SSL certificates used in Chef?",
        "answer": "SSL certificates are used in Chef to establish secure and encrypted communication channels between Chef components and nodes. These certificates verify the authenticity of Chef servers and nodes, ensuring secure data transmission. By encrypting communication, SSL certificates protect sensitive information, such as authentication credentials and configuration data, from unauthorized access or tampering. This enhances the overall security of the Chef infrastructure and helps maintain the integrity and confidentiality of the data being exchanged.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "72. How does Chef differ from other configuration management tools like Puppet and Ansible?",
        "answer": "Chef differs from other configuration management tools like Puppet and Ansible in its approach to infrastructure automation. While Puppet and Ansible rely on a procedural approach, Chef uses a declarative approach, which means that users define the desired state of their infrastructure, and Chef ensures that it remains in that state. Additionally, Chef has a strong focus on testing and compliance, making it a popular choice in enterprise environments with strict security and compliance requirements.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "73. What are the key components of a Chef deployment?",
        "answer": "The key components of a Chef deployment include the Chef Server, which acts as the central hub for storing configuration data and Chef code; Chef Client, which runs on each node and applies the configurations defined by the Chef code; and the Chef Workstation, which is used by developers and administrators to write and test the Chef code before pushing it to the Chef Server for deployment. Other important components include cookbooks, recipes, and resources, which define the desired state of the infrastructure and the actions needed to achieve it.\n\nDevOps Puppet Interview Questions",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "74. What are Puppet Manifests?",
        "answer": "Every Puppet Node or Puppet Agent has got its configuration details in Puppet Master, written in the native Puppet language. These details are written in a language that Puppet can understand and are termed as Puppet Manifests. These manifests are composed of Puppet codes, and their filenames use the .pp extension.\nFor instance, we can write a manifest in Puppet Master that creates a file and installs Apache on all Puppet Agents or slaves that are connected to the Puppet Master.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "75. How can I configure systems with Puppet?",
        "answer": "In order to configure systems in a client or server architecture with Puppet, we need to use the Puppet Agent and the Puppet Master applications. In stand-alone architecture, we use the Puppet apply application.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "76. What is a Puppet Module? How is it different from the Puppet Manifest?",
        "answer": "A Puppet Module is nothing but a collection of manifests and data (e.g., facts, files, and templates). Puppet Modules have a specific directory structure. They are useful for organizing the Puppet code because, with Puppet Modules, we can split the Puppet code into multiple manifests. It is considered best practice to use Puppet Modules to organize almost all of your Puppet Manifests.\nPuppet Modules are different from Puppet Manifests. Manifests are nothing but Puppet programs, composed of the Puppet code. File names of Puppet Manifests use the .pp extension.\nLearn the complete concepts of DevOps from the DevOps Training at Hyderabad in 26 hours!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "77. Can you tell me what a Puppet codedir is?",
        "answer": "It is the main directory for code and data in Puppet. It consists of environments (containing manifests and modules), a global modules directory for all the environments, and your Hiera data.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "78. Where do you find codedir in Puppet?",
        "answer": "It is found at one of the following locations:\nUnix/Linux Systems:\n/etc/puppetlabs/code\nWindows:\n%PROGRAMDATA%\\PuppetLabs\\code (usually, C:\\ProgramData\\PuppetLabs\\code)\n\nNon-root users:\n\n~/.puppetlabs/etc/code\n\nDevOps Ansible Interview Questions",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "79. How does Ansible work?",
        "answer": "Ansible is an open-source automation tool which is categorized into two types of servers:\nControlling machines\nNodes\nAnsible will be installed on the controlling machine and using that, machine nodes are managed with the help of SSH. Nodes’ locations are specified by inventories in that controlling machine.\nSince Ansible is an agentless tool, it doesn’t require any mandatory installations on remote nodes. So, there is no need for background programs to be executed while it is managing any nodes.\nAnsible can handle a lot of nodes from a single system over an SSH connection with the help of Ansible Playbooks. Playbooks are capable of performing multiple tasks, and they are in the YAML file format.\nAre you interested in learning DevOps from experts? Enroll in the DevOps Course in Bangalore provided by Intellipaat!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "80. Sometimes, we use ad-hoc commands instead of Playbooks in Ansible. Can you tell me what’s the difference between Ansible Playbook and an ad-hoc command? Also, cite when to use them.",
        "answer": "Ad-hoc commands are used to do something quickly, and they are mostly for one-time use. Whereas Ansible Playbook is used to perform repeated actions. There are scenarios where we want to use ad-hoc commands to perform a non-repetitive activity.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "81. Why should I use Ansible?",
        "answer": "Ansible can help in:\nConfiguration Management\nApplication Deployment\nTask Automation",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "82. What are handlers in Ansible?",
        "answer": "Handlers in Ansible are just like regular tasks inside an Ansible Playbook but they are only run if the task contains a ‘notify’ directive. Handlers are triggered when it is called by another task.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "83. Have you heard about Ansible Galaxy? What does it do?",
        "answer": "Yes, I have. Ansible Galaxy refers to the ‘Galaxy website’ by Ansible, where users share Ansible roles. It is used to install, create, and manage Ansible roles.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "84. What are the benefits of Ansible?",
        "answer": "Ansible is an open-source configuration management tool that helps us in the following:\nAutomating tasks\nManaging configurations\nDeploying applications\nEfficiency\nWant to learn more about Ansible? Check out our Ansible tutorial for beginners.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "85. What are the prerequisites to install Ansible 2.8 on Linux?",
        "answer": "To install Ansible 2.8 on Linux, Security-Enhanced Linux (SELinux) has to be enabled and Python 3 has to be installed on remote nodes.\n\nDevOps Scenario-Based Interview Questions",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "86. Can you write the syntax for building a docker image?",
        "answer": "To build a docker image, we use the following command:\ndocker build –f <file_name> -t image_name:version",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "87. How can Docker containers be shared with different nodes?",
        "answer": "Docker containers can be shared on different nodes with the help of the Docker Swarm. IT developers and administrators use this tool for the creation and management of a cluster of swarm nodes within the Docker platform. A swarm consists of a worker node and a manager node.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "88. What are the advantages of Docker over virtual machines?",
        "answer": "Below are the differences in multiple criteria that show why Docker has advantages over virtual machines.\nMemory Space – In terms of memory, Docker occupies less space than a virtual machine.\nBoot-up Time – Docker has a shorter boot-up time than a virtual machine.\nPerformance – Docker containers show better performance as they are hosted in a single Docker engine, whereas performance is unstable if multiple virtual machines are run.\nScaling – Docker is easy to scale up compared to virtual machines.\nEfficiency – The efficiency of docker is higher, which is an advantage over virtual machines.\nPortability – Docker doesn’t have the same cross-platform compatibility issues with porting as virtual machines do.\nSpace Allocation – Data volumes can be shared and used repeatedly across multiple containers in Docker, unlike virtual machines that cannot share data volumes.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "89. What is the concept of sudo in Linux?",
        "answer": "Sudo is a program for Unix/Linux-based systems that provides the ability to allow specific users to use specific system commands at the system’s root level. It is an abbreviation of ‘superuser do’, where ‘super user’ means the ‘root user’.\nIf you have any doubts or queries related to DevOps, get them clarified by DevOps experts in our DevOps and Agile Community!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "90. Can you tell me the purpose of SSH?",
        "answer": "SSH is nothing but a secure shell that allows users to log in with a secure and encrypted mechanism into remote computers. It is used for encrypted communications between two hosts on an unsafe network. It supports tunneling, forwarding TCP, and also transferring files.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "91. What is NRPE in Nagios?",
        "answer": "NRPE stands for ‘Nagios Remote Plugin Executor’. As the name suggests, it allows you to execute Nagios plugins remotely on other Linux or Unix machines.\nNagios\nIt can help monitor remote machine performance metrics such as disk usage, CPU load, etc. It can communicate with some of the Windows agent add-ons. We can execute scripts and check metrics on remote Windows machines as well.\nCheck out our blog on basic Linux commands for DevOps!",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "92. Can you tell me why I should use Nagios?",
        "answer": "To plan for infrastructure upgrades before outdated systems fail\nTo respond to issues quickly\nTo fix problems automatically when detected\nTo coordinate with the responses from the technical team\nTo ensure that the organization’s service-level agreements with the clients are being met\nTo make sure that the IT infrastructure outages have only a minimal effect on the organization’s net income\nTo monitor the entire infrastructure and business processes",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "93. What is Nagios Log Server?",
        "answer": "Nagios Log Server simplifies the process of searching the log data. Nagios Log Server is the best choice to perform tasks such as setting up alerts, notifying when potential threats arise, simply querying the log data, and quickly auditing any system. With Nagios Log Server, we can get all of our log data in one location.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "94. Can you tell me why I should use Nagios for HTTP monitoring?",
        "answer": "Nagios can provide us with a complete monitoring service for our HTTP servers and protocols. Here are a few benefits of implementing effective HTTP monitoring with Nagios:\nServer, services, and application availability can be increased.\nNetwork outages and protocol failures can be detected quickly.\nUser experience can be monitored.\nWeb server performance can be monitored.\nWeb transactions can be monitored.\nURLs can be monitored.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "95. What is a namespace in Kubernetes?",
        "answer": "Namespaces are a way to divide cluster resources between multiple users in Kubernetes. In other words, it is useful when multiple teams or users are using the same cluster which can lead to potential name collision.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "96. What is kubectl?",
        "answer": "By definition, kubectl is a command-line interface for running commands against Kubernetes clusters. Here, ‘ctl’ stands for ‘control’. This ‘kubectl’ command-line interface can be used to deploy applications, inspect and manage cluster resources, and view logs.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "97. How does Kubernetes help in container orchestration and deployment in a DevOps environment?",
        "answer": "Kubernetes helps in container orchestration and deployment in a DevOps environment by providing a platform for managing, scaling, and automating the deployment of containerized applications. It allows developers to deploy and manage applications consistently across different environments and infrastructures, ensuring they are reliable, scalable, and resilient.\nKubernetes automates many tasks related to the deployment and scaling of containers, such as load balancing, scaling, and self-healing, which helps to reduce manual effort and errors and ensure that applications are always available and performing.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "98. What are some common challenges in managing Kubernetes clusters in a DevOps environment, and how can they be addressed?",
        "answer": "In a DevOps environment, complicated configuration management, monitoring, and troubleshooting, as well as maintaining security and compliance, are common problems in operating Kubernetes clusters. \nTo address these problems, several strategies can be implemented. Firstly, adopting best practices like infrastructure-as-code and declarative configuration for cluster management can streamline operations. Secondly, automating tasks through CI/CD pipelines can save time and effort. Furthermore, implementing monitoring and logging solutions enables better visibility into cluster performance and security, aiding in problem-solving efforts.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "99. Which file is used to define dependency in Maven?",
        "answer": "In Maven, we define all dependencies inside pom.xml so that all the dependencies will be downloaded and can be used within the project.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "100. What are the benefits of using Maven in a DevOps environment?",
        "answer": "Maven provides several benefits for DevOps teams, including centralized management of project dependencies, simplified build configuration using a declarative approach, and automated build and deployment processes through integration with CI/CD pipelines. \nMaven also supports modular project structures, allowing teams to develop and test individual components separately, and provides consistent and reproducible builds across development, testing, and production environments. These benefits enable faster and more efficient delivery of software applications in a DevOps environment.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "101. Your company plans to move some applications to the cloud. How would you approach the migration plan while keeping security, compliance, and cost optimization in mind?",
        "answer": "Let’s imagine our company has a few internal applications that we want to move to the public cloud – like AWS or Azure. How should we approach this?\nFirst – I would make a plan looking at things like:\nSecurity\n   – We need to make sure our data and apps are secure when they move to the cloud. Adding firewall rules, network security groups, role based access etc. Making sure only authorized people can access them.\nCompliance \n   – Based on our industry, there may be rules and policies we need to follow even in the cloud – like HIPAA healthcare policies or PCI data standards. We need to check what compliance needs we have and implement those controls in the cloud.\nCost\n   – Clouds provide different instance types, reserved instances etc. So we should optimize and right size our resources to save costs. Only paying for what we use. Also think about auto-scaling resources up and down based on usage and demand.\nThe migration plan would cover setting up the right cloud accounts and access controls, configuring networks and firewalls, deploying servers and resources as needed while making sure they comply with all our policies. Testing things out first with non-production data. And figuring out how to best monitor, scale and optimize all these applications over time as needed.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "102. A new feature released to production starts causing increased CPU load, latency issues and some failures. The team is asking you why. How would you approach debugging this issue? What techniques and tools would you use?",
        "answer": "Let’s say our app has a new feature that started causing problems – things are running slow, some requests are failing, and our servers are working harder. The developers want to know why.\nSome ways I’d start investigating as a DevOps engineer:\nLook at metrics and monitoring – Many DevOps tools can show metrics for things like CPU usage, memory, network traffic. I’d check graphs around the time issues started happening. If CPU spiked, that’s a clue.\nReview logs – Application and web server logs often record errors or warnings about issues. Search logs from that timeframe for any common errors or repeating patterns.\nTrace requests – Tools like distributed tracing can follow a specific request through microservices. This can help pinpoint high response times and failures to a specific service.\nCompare configurations – I’d check if any infrastructure or application changes were made right before issues started – new cloud settings, firewall rules, dependency versions etc. Roll back changes to test.\nPerformance test – Simulate user traffic against different app versions to reproduce issues in a test environment. Helps narrow down root cause.\nThe goal is finding patterns and reducing variables until the specific line of code, resource limit or configuration causing problems is uncovered. Using monitoring, logs, system data and tests to incrementally eliminate possibilities.",
        "reference": "intellipaat.com",
        "role": "devops"
    },
    {
        "question": "1. Why DevOps has become famous?",
        "answer": "These days, the market window of products has reduced drastically. We see new products almost daily. This provides a myriad of choices to consumers but it comes at a cost of heavy competition in the market. Organizations cant afford to release big features after a gap. They tend to ship off small features as releases to the customers at regular intervals so that their products don't get lost in this sea of competition. Customer satisfaction is now a motto to the organizations which has also become the goal of any product for its success. In order to achieve this, companies need to do the below things: Frequent feature deployments\nReduce time between bug fixes\nReduce failure rate of releases\nQuicker recovery time in case of release failures.\nIn order to achieve the above points and thereby achieving seamless product delivery, DevOps culture acts as a very useful tool. Due to these advantages, multi-national companies like Amazon and Google have adopted the methodology which has resulted in their increased performance. Frequent feature deployments Reduce time between bug fixes Reduce failure rate of releases Quicker recovery time in case of release failures. In order to achieve the above points and thereby achieving seamless product delivery, DevOps culture acts as a very useful tool. Due to these advantages, multi-national companies like Amazon and Google have adopted the methodology which has resulted in their increased performance.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "2. Who is a DevOps engineer?",
        "answer": "A DevOps engineer is a person who works with both software developers and the IT staff to ensure smooth code releases. They are generally developers who develop an interest in the deployment and operations domain or the system admins who develop a passion for coding to move towards the development side. DevOps engineer software developers In short, a DevOps engineer is someone who has an understanding of SDLC (Software Development Lifecycle) and of automation tools for developing CI/CD pipelines.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "3. What is the use of SSH?",
        "answer": "SSH stands for Secure Shell and is an administrative protocol that lets users have access and control the remote servers over the Internet to work using the command line. SSH is a secured encrypted version of the previously known Telnet which was unencrypted and not secure. This ensured that the communication with the remote server occurs in an encrypted form. SSH also has a mechanism for remote user authentication, input communication between the client and the host, and sending the output back to the client.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "4. What is configuration management?",
        "answer": "Configuration management (CM) is basically a practice of systematic handling of the changes in such a way that system does not lose its integrity over a period of time. This involves certain policies, techniques, procedures, and tools for evaluating change proposals, managing them, and tracking their progress along with maintaining appropriate documentation for the same. CM helps in providing administrative and technical directions to the design and development of the appreciation. The following diagram gives a brief idea about what CM is all about: DevOps Configuration Management  DevOps Configuration Management",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "5. What is the importance of having configuration management in DevOps?",
        "answer": "Configuration management (CM) helps the team in the automation of time-consuming and tedious tasks thereby enhancing the organization’s performance and agility. It also helps in bringing consistency and improving the product development process by employing means of design streamlining, extensive documentation, control, and change implementation during various phases/releases of the project.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "6. What does CAMS stand for in DevOps?",
        "answer": "CAMS stands for Culture, Automation, Measurement, and Sharing. It represents the core deeds of DevOps.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "7. What is Continuous Integration (CI)?",
        "answer": "Continuous Integration (CI) is a software development practice that makes sure developers integrate their code into a shared repository as and when they are done working on the feature. Each integration is verified by means of an automated build process that allows teams to detect problems in their code at a very early stage rather than finding them after the deployment. Continuous Integration (CI)  Continuous Integration (CI) Based on the above flow, we can have a brief overview of the CI process. Developers regularly check out code into their local workspaces and work on the features assigned to them.\nOnce they are done working on it, the code is committed and pushed to the remote shared repository which is handled by making use of effective version control tools like git.\nThe CI server keeps track of the changes done to the shared repository and it pulls the changes as soon as it detects them.\nThe CI server then triggers the build of the code and runs unit and integration test cases if set up.\nThe team is informed of the build results. In case of the build failure, the team has to work on fixing the issue as early as possible, and then the process repeats. Developers regularly check out code into their local workspaces and work on the features assigned to them. Once they are done working on it, the code is committed and pushed to the remote shared repository which is handled by making use of effective version control tools like git. The CI server keeps track of the changes done to the shared repository and it pulls the changes as soon as it detects them. The CI server then triggers the build of the code and runs unit and integration test cases if set up. The team is informed of the build results. In case of the build failure, the team has to work on fixing the issue as early as possible, and then the process repeats.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "8. Why is Continuous Integration needed?",
        "answer": "By incorporating Continuous Integration for both development and testing, it has been found that the software quality has improved and the time taken for delivering the features of the software has drastically reduced. This also allows the development team to detect and fix errors at the initial stage as each and every commit to the shared repository is built automatically and run against the unit and integration test cases.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "9. What is Continuous Testing (CT)?",
        "answer": "Continuous Testing (CT) is that phase of DevOps which involves the process of running the automated test cases as part of an automated software delivery pipeline with the sole aim of getting immediate feedback regarding the quality and validation of business risks associated with the automated build of code developed by the developers. Using this phase will help the team to test each build continuously (as soon as the code developed is pushed) thereby giving the dev teams a chance to get instant feedback on their work and ensuring that these problems don’t arrive in the later stages of SDLC cycle. Doing this would drastically speed up the workflow followed by the developer to develop the project due to the lack of manual intervention steps to rebuild the project and run the automated test cases every time the changes are made.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "10. What are the three important DevOps KPIs?",
        "answer": "Few KPIs of DevOps are given below: Reduce the average time taken to recover from a failure.\nIncrease Deployment frequency in which the deployment occurs.\nReduced Percentage of failed deployments. Reduce the average time taken to recover from a failure. Increase Deployment frequency in which the deployment occurs. Reduced Percentage of failed deployments.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "1. What can be a preparatory approach for developing a project using the DevOps methodology?",
        "answer": "The project can be developed by following the below stages by making use of DevOps: Stage 1: Plan: Plan and come up with a roadmap for implementation by performing a thorough assessment of the already existing processes to identify the areas of improvement and the blindspots.\nStage 2: PoC: Come up with a proof of concept (PoC) just to get an idea regarding the complexities involved. Once the PoC is approved, the actual implementation work of the project would start.\nStage 3: Follow DevOps: Once the project is ready for implementation, actual DevOps culture could be followed by making use of its phases like version control, continuous integration, continuous testing, continuous deployment, continuous delivery, and continuous monitoring. Stage 1: Plan: Plan and come up with a roadmap for implementation by performing a thorough assessment of the already existing processes to identify the areas of improvement and the blindspots. Stage 1: Plan: Stage 2: PoC: Come up with a proof of concept (PoC) just to get an idea regarding the complexities involved. Once the PoC is approved, the actual implementation work of the project would start. Stage 2: PoC: Stage 3: Follow DevOps: Once the project is ready for implementation, actual DevOps culture could be followed by making use of its phases like version control, continuous integration, continuous testing, continuous deployment, continuous delivery, and continuous monitoring. Stage 3: Follow DevOps:",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "2. How does AWS contribute to DevOps?",
        "answer": "AWS stands for Amazon Web Services and it is a well known cloud provider. AWS helps DevOps by providing the below benefits: Flexible Resources: AWS provides ready-to-use flexible resources for usage.\nScaling: Thousands of machines can be deployed on AWS by making use of unlimited storage and computation power.\nAutomation: Lots of tasks can be automated by using various services provided by AWS.\nSecurity: AWS is secure and using its various security options provided under the hood of Identity and Access Management (IAM), the application deployments and builds can be secured. Flexible Resources: AWS provides ready-to-use flexible resources for usage. Flexible Resources: Scaling: Thousands of machines can be deployed on AWS by making use of unlimited storage and computation power. Scaling: Automation: Lots of tasks can be automated by using various services provided by AWS. Automation: Security: AWS is secure and using its various security options provided under the hood of Identity and Access Management (IAM), the application deployments and builds can be secured. Security:",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "3. How does Ansible work?",
        "answer": "Ansible has two types of servers categorized as: Controlling machines\nNodes Controlling machines Nodes For this to work, Ansible is installed on controlling machine using which the nodes are managed by means of using SSH. The location of the nodes would be specified and configured in the inventories of the controlling machine. Ansible does not require any installations on the remote node servers due its nature of being agentless. Hence, no background process needs to be executed while managing any remote nodes. Ansible can manage lots of nodes from a single controlling system my making use of Ansible Playbooks through SSH connection. Playbooks are of the YAML format and are capable to perform multiple tasks.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "4. Tell me something about Ansible work in DevOps",
        "answer": "It is a DevOps open-source automation tool which helps in modernizing the development and deployment process of applications in faster manner. It has gained popularity due to simplicity in understanding, using, and adopting it which largely helped people across the globe to work in a collaborative manner. Ansible Developers Operations QA Business/Clients\nChallenges Developers tend to focus a lot of time on tooling rather than delivering the results. Operations team would require uniform technology that can be used by different skillset groups easily. Quality Assurance team would require to keep track of what has been changed in the feature and when it has been changed. Clients worry about getting the products to the market as soon as possible.\nNeed Developers need to respond to new features/bugs and scale the efforts based on the demand. Operation team need a central governing tool to monitor different systems and its workloads. Quality Assurance team need to focus on reducing human error risk as much as possible for bug-free product. Clients need to create a competitive advantage for their products in the market.\nHow does Ansible help? Helps developers to discover bugs at an earlier phase, and assists them to perform faster deployments in a reliable manner. Helps the Operations team to reduce their efforts on shadowing IT people and reduce the times taken for deployment. Also, Ansible assists them to perform automated patching. Helps QA team to establish automated test cases irrespective of the environments for achieving more reliable and accurate results. Helps to define identical security baselines and helps them reduce the burden of following traditional documentation. Helps the Business team to ensure the IT team is on the right track. Also helps them to optimize the time taken for project innovation and strategising. Helps teams to collaborate in an effective manner. Ansible Developers Operations QA Business/Clients\nChallenges Developers tend to focus a lot of time on tooling rather than delivering the results. Operations team would require uniform technology that can be used by different skillset groups easily. Quality Assurance team would require to keep track of what has been changed in the feature and when it has been changed. Clients worry about getting the products to the market as soon as possible.\nNeed Developers need to respond to new features/bugs and scale the efforts based on the demand. Operation team need a central governing tool to monitor different systems and its workloads. Quality Assurance team need to focus on reducing human error risk as much as possible for bug-free product. Clients need to create a competitive advantage for their products in the market.\nHow does Ansible help? Helps developers to discover bugs at an earlier phase, and assists them to perform faster deployments in a reliable manner. Helps the Operations team to reduce their efforts on shadowing IT people and reduce the times taken for deployment. Also, Ansible assists them to perform automated patching. Helps QA team to establish automated test cases irrespective of the environments for achieving more reliable and accurate results. Helps to define identical security baselines and helps them reduce the burden of following traditional documentation. Helps the Business team to ensure the IT team is on the right track. Also helps them to optimize the time taken for project innovation and strategising. Helps teams to collaborate in an effective manner. Ansible Developers Operations QA Business/Clients Ansible Developers Operations QA Business/Clients Ansible Developers Operations QA Business/Clients Challenges Developers tend to focus a lot of time on tooling rather than delivering the results. Operations team would require uniform technology that can be used by different skillset groups easily. Quality Assurance team would require to keep track of what has been changed in the feature and when it has been changed. Clients worry about getting the products to the market as soon as possible.\nNeed Developers need to respond to new features/bugs and scale the efforts based on the demand. Operation team need a central governing tool to monitor different systems and its workloads. Quality Assurance team need to focus on reducing human error risk as much as possible for bug-free product. Clients need to create a competitive advantage for their products in the market.\nHow does Ansible help? Helps developers to discover bugs at an earlier phase, and assists them to perform faster deployments in a reliable manner. Helps the Operations team to reduce their efforts on shadowing IT people and reduce the times taken for deployment. Also, Ansible assists them to perform automated patching. Helps QA team to establish automated test cases irrespective of the environments for achieving more reliable and accurate results. Helps to define identical security baselines and helps them reduce the burden of following traditional documentation. Helps the Business team to ensure the IT team is on the right track. Also helps them to optimize the time taken for project innovation and strategising. Helps teams to collaborate in an effective manner. Challenges Developers tend to focus a lot of time on tooling rather than delivering the results. Operations team would require uniform technology that can be used by different skillset groups easily. Quality Assurance team would require to keep track of what has been changed in the feature and when it has been changed. Clients worry about getting the products to the market as soon as possible. Challenges Developers tend to focus a lot of time on tooling rather than delivering the results. Operations team would require uniform technology that can be used by different skillset groups easily. Quality Assurance team would require to keep track of what has been changed in the feature and when it has been changed. Clients worry about getting the products to the market as soon as possible. Need Developers need to respond to new features/bugs and scale the efforts based on the demand. Operation team need a central governing tool to monitor different systems and its workloads. Quality Assurance team need to focus on reducing human error risk as much as possible for bug-free product. Clients need to create a competitive advantage for their products in the market. Need Developers need to respond to new features/bugs and scale the efforts based on the demand. Operation team need a central governing tool to monitor different systems and its workloads. Quality Assurance team need to focus on reducing human error risk as much as possible for bug-free product. Clients need to create a competitive advantage for their products in the market. How does Ansible help? Helps developers to discover bugs at an earlier phase, and assists them to perform faster deployments in a reliable manner. Helps the Operations team to reduce their efforts on shadowing IT people and reduce the times taken for deployment. Also, Ansible assists them to perform automated patching. Helps QA team to establish automated test cases irrespective of the environments for achieving more reliable and accurate results. Helps to define identical security baselines and helps them reduce the burden of following traditional documentation. Helps the Business team to ensure the IT team is on the right track. Also helps them to optimize the time taken for project innovation and strategising. Helps teams to collaborate in an effective manner. How does Ansible help? Helps developers to discover bugs at an earlier phase, and assists them to perform faster deployments in a reliable manner. Helps the Operations team to reduce their efforts on shadowing IT people and reduce the times taken for deployment. Also, Ansible assists them to perform automated patching. Helps QA team to establish automated test cases irrespective of the environments for achieving more reliable and accurate results. Helps to define identical security baselines and helps them reduce the burden of following traditional documentation. Helps the Business team to ensure the IT team is on the right track. Also helps them to optimize the time taken for project innovation and strategising. Helps teams to collaborate in an effective manner.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "5. Can you say something about the DevOps pipeline?",
        "answer": "A pipeline, in general, is a set of automated tasks/processes defined and followed by the software engineering team. DevOps pipeline is a pipeline which allows the DevOps engineers and the software developers to efficiently and reliably compile, build and deploy the software code to the production environments in a hassle free manner. software developers Following image shows an example of an effective DevOps pipeline for deployment.   The flow is as follows: Developer works on completing a functionality.\nDeveloper deploys his code to the test environment.\nTesters work on validating the feature. Business team can intervene and provide feedback too.\nDevelopers work on the test and business feedback in continuous collaboration manner.\nThe code is then released to the production and validated again. Developer works on completing a functionality. Developer deploys his code to the test environment. Testers work on validating the feature. Business team can intervene and provide feedback too. Developers work on the test and business feedback in continuous collaboration manner. The code is then released to the production and validated again.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "6. Can you differentiate between continuous testing and automation testing?",
        "answer": "The difference between continuous testing and automation testing is given below: Continuous Testing Automation Testing\nThis is the process of executing all the automated test cases and is done as part of the delivery process. This is a process that replaces manual testing by helping the developers create test cases that can be run multiple times without manual intervention.\nThis process focuses on the business risks associated with releasing software as early as possible. This process helps the developer to know whether the features they have developed are bug-free or not by having set of pass/fail points as a reference. Continuous Testing Automation Testing\nThis is the process of executing all the automated test cases and is done as part of the delivery process. This is a process that replaces manual testing by helping the developers create test cases that can be run multiple times without manual intervention.\nThis process focuses on the business risks associated with releasing software as early as possible. This process helps the developer to know whether the features they have developed are bug-free or not by having set of pass/fail points as a reference. Continuous Testing Automation Testing Continuous Testing Automation Testing Continuous Testing Automation Testing This is the process of executing all the automated test cases and is done as part of the delivery process. This is a process that replaces manual testing by helping the developers create test cases that can be run multiple times without manual intervention.\nThis process focuses on the business risks associated with releasing software as early as possible. This process helps the developer to know whether the features they have developed are bug-free or not by having set of pass/fail points as a reference. This is the process of executing all the automated test cases and is done as part of the delivery process. This is a process that replaces manual testing by helping the developers create test cases that can be run multiple times without manual intervention. This is the process of executing all the automated test cases and is done as part of the delivery process. This is a process that replaces manual testing by helping the developers create test cases that can be run multiple times without manual intervention. This process focuses on the business risks associated with releasing software as early as possible. This process helps the developer to know whether the features they have developed are bug-free or not by having set of pass/fail points as a reference. This process focuses on the business risks associated with releasing software as early as possible. This process helps the developer to know whether the features they have developed are bug-free or not by having set of pass/fail points as a reference.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "7. What is Resilience Testing?",
        "answer": "Resilience Testing is a software process that tests the application for its behavior under uncontrolled and chaotic scenarios. It also ensures that the data and functionality are not lost after encountering a failure.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "8. What is CBD in DevOps?",
        "answer": "CBD stands for Component-Based Development. It is a unique way for approaching product development. Here, developers keep looking for existing well-defined, tested, and verified components of code and relieve the developer of developing from scratch.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "9. Can you list down certain KPIs which are used for gauging the success of DevOps?",
        "answer": "KPIs stands for Key Performance Indicators. Some of the popular KPIs used for gauging the success of DevOps are: Application usage, performance, and traffic\nAutomated Test Case Pass Percentage.\nApplication Availability\nChange volume requests\nCustomer tickets\nSuccessful deployment frequency and time\nError/Failure rates\nFailed deployments\nMeantime to detection (MTTD)\nMeantime to recovery (MTTR) Application usage, performance, and traffic Automated Test Case Pass Percentage. Application Availability Change volume requests Customer tickets Successful deployment frequency and time Error/Failure rates Failed deployments Meantime to detection (MTTD) Meantime to recovery (MTTR)",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "10. What are the various branching strategies used in the version control system?",
        "answer": "Branching is a very important concept in version control systems like git which facilitates team collaboration. Some of the most commonly used branching types are: Feature branching Feature branching This branching type ensures that a particular feature of a project is maintained in a branch.\nOnce the feature is fully validated, the branch is then merged into the main branch. This branching type ensures that a particular feature of a project is maintained in a branch. Once the feature is fully validated, the branch is then merged into the main branch. Task branching Task branching Here, each task is maintained in its own branch with the task key being the branch name.\nNaming the branch name as a task name makes it easy to identify what task is getting covered in what branch. Here, each task is maintained in its own branch with the task key being the branch name. Naming the branch name as a task name makes it easy to identify what task is getting covered in what branch. Release branching Release branching This type of branching is done once a set of features meant for a release are completed, they can be cloned into a branch called the release branch. Any further features will not be added to this branch.\nOnly bug fixes, documentation, and release-related activities are done in a release branch.\nOnce the things are ready, the releases get merged into the main branch and are tagged with the release version number.\nThese changes also need to be pushed into the develop branch which would have progressed with new feature development. This type of branching is done once a set of features meant for a release are completed, they can be cloned into a branch called the release branch. Any further features will not be added to this branch. Only bug fixes, documentation, and release-related activities are done in a release branch. Once the things are ready, the releases get merged into the main branch and are tagged with the release version number. These changes also need to be pushed into the develop branch which would have progressed with new feature development. The branching strategies followed would vary from company to company based on their requirements and strategies.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "11. Can you tell me something about Memcached?",
        "answer": "Memcached is an open-source and free in-memory object caching system that has high performance and is distributed and generic in nature. It is mainly used for speeding the dynamic web applications by reducing the database load. Memcached can be used in the following cases: Memcached can be used in the following cases: Profile caching in social networking domains like Facebook.\nWeb page caching in the content aggregation domain.\nProfile tracking in Ad targeting domain.\nSession caching in e-commerce, gaming, and entertainment domain.\nDatabase query optimization and scaling in the Location-based services domain. Profile caching in social networking domains like Facebook. Web page caching in the content aggregation domain. Profile tracking in Ad targeting domain. Session caching in e-commerce, gaming, and entertainment domain. Database query optimization and scaling in the Location-based services domain. Benefits of Memcached: Benefits of Memcached: Using Memcached speeds up the application processes by reducing the hits to a database and reducing the I/O access.\nIt helps in determining what steps are more frequently followed and helps in deciding what to cache. Using Memcached speeds up the application processes by reducing the hits to a database and reducing the I/O access. It helps in determining what steps are more frequently followed and helps in deciding what to cache. Some of the drawbacks of using Memcached are: Some of the drawbacks of using Memcached are: In case of failure, the data is lost as it is neither a persistent data store nor a database.\nIt is not an application-specific cache.\nLarge objects cannot be cached. In case of failure, the data is lost as it is neither a persistent data store nor a database. It is not an application-specific cache. Large objects cannot be cached.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "12. Differentiate between Continuous Deployment and Continuous Delivery?",
        "answer": "The main difference between Continuous Deployment and Continuous Delivery are given below: Continuous Deployment Continuous Delivery\nThe deployment to the production environment is fully automated and does not require manual/ human intervention. In this process, some amount of manual intervention with the manager’s approval is needed for deployment to a production environment.\nHere, the application is run by following the automated set of instructions, and no approvals are needed. Here, the working of the application depends on the decision of the team. Continuous Deployment Continuous Delivery\nThe deployment to the production environment is fully automated and does not require manual/ human intervention. In this process, some amount of manual intervention with the manager’s approval is needed for deployment to a production environment.\nHere, the application is run by following the automated set of instructions, and no approvals are needed. Here, the working of the application depends on the decision of the team. Continuous Deployment Continuous Delivery Continuous Deployment Continuous Delivery Continuous Deployment Continuous Delivery The deployment to the production environment is fully automated and does not require manual/ human intervention. In this process, some amount of manual intervention with the manager’s approval is needed for deployment to a production environment.\nHere, the application is run by following the automated set of instructions, and no approvals are needed. Here, the working of the application depends on the decision of the team. The deployment to the production environment is fully automated and does not require manual/ human intervention. In this process, some amount of manual intervention with the manager’s approval is needed for deployment to a production environment. The deployment to the production environment is fully automated and does not require manual/ human intervention. In this process, some amount of manual intervention with the manager’s approval is needed for deployment to a production environment. Here, the application is run by following the automated set of instructions, and no approvals are needed. Here, the working of the application depends on the decision of the team. Here, the application is run by following the automated set of instructions, and no approvals are needed. Here, the working of the application depends on the decision of the team. Continuous Deployment and Continuous Delivery  Continuous Deployment and Continuous Delivery",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "13. Explain the different phases in DevOps methodology.",
        "answer": "DevOps mainly has 6 phases and they are: Planning: Planning: This is the first phase of a DevOps lifecycle that involves a thorough understanding of the project to ultimately develop the best product. When done properly, this phase gives various inputs required for the development and operations phases. This phase also helps the organization to gain clarity regarding the project development and management process. Tools like Google Apps, Asana, Microsoft teams, etc are used for this purpose. Development: Development: The planning phase is followed by the Development phase where the project is built by developing system infrastructure, developing features by writing codes, and then defining test cases and the automation process. Developers store their codes in a code manager called remote repository which aids in team collaboration by allowing view, modification, and versioning of the code. Tools like git, IDEs like the eclipse, IntelliJ, and technological stacks like Node, Java, etc are used. Continuous Integration (CI): Continuous Integration (CI): This phase allows for automation of code validation, build, and testing. This ensures that the changes are made properly without development environment errors and also allows the identification of errors at an initial stage. Tools like Jenkins, circleCI, etc are used here. Deployment: Deployment: DevOps aids in the deployment automation process by making use of tools and scripts which has the final goal of automating the process by means of feature activation. Here, cloud services can be used as a force that assists in upgrade from finite infrastructure management to cost-optimized management with the potential to infinite resources. Tools like Microsoft Azure, Amazon Web Services, Heroku, etc are used. Operations: Operations: This phase usually occurs throughout the lifecycle of the product/software due to the dynamic infrastructural changes. This provides the team with opportunities for increasing the availability, scalability, and effective transformation of the product. Tools like Loggly, BlueJeans, Appdynamics, etc are used commonly in this phase. Monitoring: Monitoring: Monitoring is a permanent phase of DevOps methodology. This phase is used for monitoring and analyzing information to know the status of software applications. Tools like Nagios, Splunk, etc are commonly used. ",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "14. How is DevOps different than the Agile Methodology?",
        "answer": "DevOps is a practice or a culture that allows the collaboration of the development team and the operations team to come together for successful product development. This involves making use of practices like continuous development, integration, testing, deployment, and monitoring of the SDLC cycle. DevOps tries to reduce the gap between the developers and the operations team for the effective launch of the product. Agile is nothing but a software development methodology that focuses on incremental, iterative, and rapid releases of software features by involving the customer by means of feedback. This methodology removes the gap between the requirement understanding of the clients and the developers. Agile Methodology  Agile Methodology",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "15. What can you say about antipatterns of DevOps?",
        "answer": "A pattern is something that is most commonly followed by large masses of entities. If a pattern is adopted by an organization just because it is being followed by others without gauging the requirements of the organization, then it becomes an anti-pattern. Similarly, there are multiple myths surrounding DevOps which can contribute to antipatterns, they are: DevOps is a process and not a culture.\nDevOps is nothing but Agile.\nThere should be a separate DevOps group.\nDevOps solves every problem.\nDevOps equates to developers running a production environment.\nDevOps follows Development-driven management\nDevOps does not focus much on development.\nAs we are a unique organization, we don’t follow the masses and hence we won’t implement DevOps.\nWe don’t have the right set of people, hence we cant implement DevOps culture. DevOps is a process and not a culture. DevOps is nothing but Agile. There should be a separate DevOps group. DevOps solves every problem. DevOps equates to developers running a production environment. DevOps follows Development-driven management DevOps does not focus much on development. As we are a unique organization, we don’t follow the masses and hence we won’t implement DevOps. We don’t have the right set of people, hence we cant implement DevOps culture.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "1. Can you explain the “Shift left to reduce failure” concept in DevOps?",
        "answer": "In order to understand what this means, we first need to know how the traditional SDLC cycle works. In the traditional cycle, there are 2 main sides - The left side of the cycle consists of the planning, design, and development phase\nThe right side of the cycle includes stress testing, production staging, and user acceptance. The left side of the cycle consists of the planning, design, and development phase The right side of the cycle includes stress testing, production staging, and user acceptance. In DevOps, shifting left simply means taking up as many tasks that usually take place at the end of the application development process as possible into the earlier stages of application development. From the below graph, we can see that if the shift left operations are followed, the chances of errors faced during the later stages of application development would greatly reduce as it would have been identified and solved in the earlier stages itself. Shift Left To Reduce Failure  Shift Left To Reduce Failure The most popular ways of accomplishing shift left in DevOps is to: Work side by side with the development team while creating the deployment and test case automation. This is the first and the obvious step in achieving shift left. This is done because of the well-known fact that the failures that get notices in the production environment are not seen earlier quite often. These failures can be linked directly to:\nDifferent deployment procedures used by the development team while developing their features.\nProduction deployment procedures sometimes tend to be way different than the development procedure. There can be differences in tooling and sometimes the process might also be manual.\nBoth the dev team and the operations teams are expected to take ownership to develop and maintain standard procedures for deployment by making use of the cloud and the pattern capabilities. This aids in giving the confidence that the production deployments would be successful.\nUsage of pattern capabilities to avoid configurational level inconsistencies in the different environments being used. This would require the dev team and the operation team to come together and work in developing a standard process that guides developers to test their application in the development environment in the same way as they test in the production environment. Work side by side with the development team while creating the deployment and test case automation. This is the first and the obvious step in achieving shift left. This is done because of the well-known fact that the failures that get notices in the production environment are not seen earlier quite often. These failures can be linked directly to:\nDifferent deployment procedures used by the development team while developing their features.\nProduction deployment procedures sometimes tend to be way different than the development procedure. There can be differences in tooling and sometimes the process might also be manual. Different deployment procedures used by the development team while developing their features.\nProduction deployment procedures sometimes tend to be way different than the development procedure. There can be differences in tooling and sometimes the process might also be manual. Different deployment procedures used by the development team while developing their features. Production deployment procedures sometimes tend to be way different than the development procedure. There can be differences in tooling and sometimes the process might also be manual. Both the dev team and the operations teams are expected to take ownership to develop and maintain standard procedures for deployment by making use of the cloud and the pattern capabilities. This aids in giving the confidence that the production deployments would be successful. Usage of pattern capabilities to avoid configurational level inconsistencies in the different environments being used. This would require the dev team and the operation team to come together and work in developing a standard process that guides developers to test their application in the development environment in the same way as they test in the production environment.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "2. Do you know about post mortem meetings in DevOps?",
        "answer": "Post Mortem meetings are those that are arranged to discuss if certain things go wrong while implementing the DevOps methodology. When this meeting is conducted, it is expected that the team has to arrive at steps that need to be taken in order to avoid the failure(s) in the future.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "3. What is the concept behind sudo in Linux OS?",
        "answer": "Sudo stands for ‘superuser do’ where the superuser is the root user of Linux. It is a program for Linux/Unix-based systems that gives provision to allow the users with superuser roles to use certain system commands at their root level.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "4. Can you explain the architecture of Jenkins?",
        "answer": "Jenkins follows the master-slave architecture. The master pulls the latest code from the GitHub repository whenever there is a commitment made to the code. The master requests slaves to perform operations like build, test and run and produce test case reports. This workload is distributed to all the slaves in a uniform manner. Jenkins also uses multiple slaves because there might be chances that require different test case suites to be run for different environments once the code commits are done. Jenkins Architecture  Jenkins Architecture",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "5. Can you explain the “infrastructure as code” (IaC) concept?",
        "answer": "As the name indicates, IaC mainly relies on perceiving infrastructure in the same way as any code which is why it is commonly referred to as “programmable infrastructure”. It simply provides means to define and manage the IT infrastructure by using configuration files. This concept came into prominence because of the limitations associated with the traditional way of managing the infrastructure. Traditionally, the infrastructure was managed manually and the dedicated people had to set up the servers physically. Only after this step was done, the application would have been deployed. Manual configuration and setup were constantly prone to human errors and inconsistencies. This also involved increased cost in hiring and managing multiple people ranging from network engineers to hardware technicians to manage the infrastructural tasks. The major problem with the traditional approach was decreased scalability and application availability which impacted the speed of request processing. Manual configurations were also time-consuming and in case the application had a sudden spike in user usage, the administrators would desperately work on keeping the system available for a large load. This would impact the application availability. IaC solved all the above problems. IaC can be implemented in 2 approaches: Imperative approach: This approach “gives orders” and defines a sequence of instructions that can help the system in reaching the final output.\nDeclarative approach: This approach “declares” the desired outcome first based on which the infrastructure is built to reach the final result. Imperative approach: This approach “gives orders” and defines a sequence of instructions that can help the system in reaching the final output. Declarative approach: This approach “declares” the desired outcome first based on which the infrastructure is built to reach the final result.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "6. What is ‘Pair Programming’?",
        "answer": "Pair programming is an engineering practice where two programmers work on the same system, same design, and same code. They follow the rules of “Extreme Programming”. Here, one programmer is termed as “driver” while the other acts as “observer” which continuously monitors the project progress to identify any further problems.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "7. What is Blue/Green Deployment Pattern?",
        "answer": "A blue-green pattern is a type of continuous deployment, application release pattern which focuses on gradually transferring the user traffic from a previously working version of the software or service to an almost identical new release - both versions running on production. The blue environment would indicate the old version of the application whereas the green environment would be the new version. The production traffic would be moved gradually from blue to green environment and once it is fully transferred, the blue environment is kept on hold just in case of rollback necessity.   In this pattern, the team has to ensure two identical prod environments but only one of them would be LIVE at a given point of time. Since the blue environment is more steady, the LIVE one is usually the blue environment.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "8. What is Dogpile effect? How can it be prevented?",
        "answer": "It is also referred to as cache stampede which can occur when huge parallel computing systems employing caching strategies are subjected to very high load. It is referred to as that event that occurs when the cache expires (or invalidated) and multiple requests are hit to the website at the same time. The most common way of preventing dogpiling is by implementing semaphore locks in the cache. When the cache expires in this system, the first process to acquire the lock would generate the new value to the cache.",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "9. What are the steps to be undertaken to configure git repository so that it runs the code sanity checking tooks before any commits? How do you prevent it from happening again if the sanity testing fails?",
        "answer": "Sanity testing, also known as smoke testing, is a process used to determine if it’s reasonable to proceed to test.\nGit repository provides a hook called pre-commit which gets triggered right before a commit happens. A simple script by making use of this hook can be written to achieve the smoke test.  The script can be used to run other tools like linters and perform sanity checks on the changes that would be committed into the repository. The following snippet is an example of one such script: #!/bin/sh\nfiles=$(git diff –cached –name-only –diff-filter=ACM | grep ‘.py$’)\nif [ -z files ]; then\nexit 0\nfi\nunfmtd=$(pyfmt -l $files)\nif [ -z unfmtd ]; then\nexit 0\nfi\necho “Some .py files are not properly fmt’d”\nexit 1 #!/bin/sh\nfiles=$(git diff –cached –name-only –diff-filter=ACM | grep ‘.py$’)\nif [ -z files ]; then\nexit 0\nfi\nunfmtd=$(pyfmt -l $files)\nif [ -z unfmtd ]; then\nexit 0\nfi\necho “Some .py files are not properly fmt’d”\nexit 1 The above script checks if any .py files which are to be committed are properly formatted by making use of the python formatting tool pyfmt. If the files are not properly formatted, then the script prevents the changes to be committed to the repository by exiting with status 1. ",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "10. How can you ensure a script runs every time repository gets new commits through git push?",
        "answer": "There are three means of setting up a script on the destination repository to get executed depending on when the script has to be triggered exactly. These means are called hooks and they are of three types: Pre-receive hook: This hook is invoked before the references are updated when commits are being pushed. This hook is useful in ensuring the scripts related to enforcing development policies are run.\nUpdate hook: This hook triggers the script to run before any updates are actually made. This hook is called once for every commit which has been pushed to the repository.\nPost-receive hook: This hook helps trigger the script after the updates or changes have been accepted by the destination repository. This hook is ideal for configuring deployment scripts, any continuous integration-based scripts or email notifications process to the team, etc. Pre-receive hook: This hook is invoked before the references are updated when commits are being pushed. This hook is useful in ensuring the scripts related to enforcing development policies are run. Pre-receive hook: Update hook: This hook triggers the script to run before any updates are actually made. This hook is called once for every commit which has been pushed to the repository. Update hook: Post-receive hook: This hook helps trigger the script after the updates or changes have been accepted by the destination repository. This hook is ideal for configuring deployment scripts, any continuous integration-based scripts or email notifications process to the team, etc. Post-receive hook: Conclusion DevOps is a culture-shifting practice that has and is continuing to help lots of businesses and organizations in a tremendous manner. It helps in bridging the gap between the conflict of goals and priorities of the developers (constant need for change) and the operations (constant resistance to change) team by creating a smooth path for Continuous Development and Continuous Integration. Being a DevOps engineer has huge benefits due to the ever-increasing demand for DevOps practice. Additional Resources Additional Resources Practice Coding\nDevOps Tools\nDevOps Engineer Salary\nSplunk Interview Questions\nTerraform Interview Questions\nTechnical Interview Questions Practice Coding Practice Coding DevOps Tools DevOps Tools DevOps Engineer Salary DevOps Engineer Salary Splunk Interview Questions Splunk Interview Questions Terraform Interview Questions Terraform Interview Questions Technical Interview Questions Technical Interview Questions",
        "reference": "interviewbit.com",
        "role": "devops"
    },
    {
        "question": "1) Explain DevOps?",
        "answer": "The DevOps is a combination of two words one is software Development, and second is Operations. It allows a single team to handle the entire application lifecycle, from development to testing, deployment, and operations. DevOps helps you to reduce the disconnection between software developers, quality assurance (QA) engineers, and system administrators.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "2) What are the principles of DevOps?",
        "answer": "The principles behind DevOps are:\nADVERTISEMENT\nContinuous deployment\nInfrastructure as code\nAutomation\nMonitoring\nSecurity",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "3) How DevOps is helpful to developers?",
        "answer": "DevOps is very helpful for developers to fix the bugs and quickly implement the new features. It also helps in more transparent communication between the team members.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "4) Explain some popular tools of DevOps?",
        "answer": "Here are some popular tools of DevOps, such as:\nJenkins: Jenkins is a DevOps tool for monitoring the execution of repeated tasks. Jenkins is a software that allows continuous integration. And it will be installed on a server where the central build will take place.\nAnsible: Ansible is a leading DevOps tool. Ansible is an open-source IT engine that automates application deployment, cloud provisioning, intra service orchestration, and other IT tools.\nNagios: Nagios is one of the more useful tools for DevOps. It can determine the errors and rectify them with the help of network, infrastructure, server, and log monitoring systems.\nDocker: Docker is a high-end DevOps tool that allows building, ship, and run distributed applications on multiple systems.\nGit: Git is an open-source distributed version control system that is freely available for everyone. It is designed to handle minor to major projects with speed and efficiency.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "5) What are the prerequisites for the DevOps implementation?",
        "answer": "Following are some useful prerequisites for DevOps implementation:\nProper communication between the team members.\nAt least one version control software.\nAutomated testing.\nAutomated deployment.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "6) What are the core operation of DevOps with application development and infrastructure?",
        "answer": "The core operation of DevOps with application development and infrastructure are:\nApplication development\nCode building\nCode coverage\nUnit testing\nPackaging\nDeployment\nInfrastructure\nProvisioning\nConfiguration\nOrchestration\nDeployment",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "7) What are the key components of DevOps?",
        "answer": "The most important key components of DevOps are:\nADVERTISEMENT\nContinuous integration\nContinuous testing\nContinuous delivery\nContinuous mongering",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "8) What is Vagrant?",
        "answer": "A Vagrant is a tool of DevOps that can create and manage virtualized environments for testing and developing software.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "9) What are the technical and business benefits of DevOps work culture?",
        "answer": "Following are the technical and business benefits of DevOps work culture:\nTechnical benefits\nLess complex problems to fix.\nContinuous software delivery.\nFaster bugs resolution.\nBusiness benefits\nMost stable operating environments.\nMore time available to add product value.\nFaster delivery of features for customer satisfaction.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "10) What is Scrum?",
        "answer": "Scrum is used to divide a sophisticated software and product development task into smaller chunks using iterations and increasing practices. Scrum consist of three roles, such as:\nProduct owner\nScrum master\nTeam",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "11) What is version control?",
        "answer": "It is a system that records the changes to a file or set of files over time so you can recall specific versions.\nThe version control system consists of a central shared repository where teammates can commit the changes to a file or set of files. It allows:\nTo revert the file to the previous state.\nTo compare changes over time.\nTo revert the entire project to a previous state.\nTo see who modified something in the files.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "12) Which scripting tools are used in DevOps?",
        "answer": "Both Python and Ruby scripting tools are used in the DevOps.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "13) What is the role of AWS in DevOps?",
        "answer": "AWS is a cloud-based service provided by Amazon that ensures scalability through unlimited computing power and storage. It empowers IT enterprises to develop and deliver experienced products and deploy applications on the cloud.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "14) Why open source tools boost DevOps?",
        "answer": "Open source tools mainly used by any organization which is adapted by DevOps pipeline because DevOps came with the focus of automation in various aspects of organization build, release, change management, and infrastructure management areas.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "15) What is the need for organization playbooks as the role?",
        "answer": "Organization playbooks as the role give more reliability and reusability to any plays while considering a task where MySQL installation should be done after the removal of Oracle DB. You need another requirement to install MySQL after java installation. In both cases, you need to install MySQL, but without roles, it needs to write playbooks separately for both use cases. Still, once using roles, the MySQL installation role is created can be utilized any number of times by invoking using logic in site.yaml.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "16) How many cloud platform which is used for DevOps implementation?",
        "answer": "Here are some cloud computing platform used for DevOps implementation, such as:\nGoogle Cloud\nAmazon Web Services\nMicrosoft Azure",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "17) Explain two-factor authentication?",
        "answer": "The two-factor authentication is a security method in which the user provides two ways of identification from separate categories.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "18) What is the use of PTR in DNS?",
        "answer": "PTR is a pointer record that is used for a reverse DNS lookup.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "19) Name some network monitoring tools?",
        "answer": "Some most essential network monitoring tools are:\nNagios\nOpenNMS\nSplunk\nIcinga 2\nWireshark",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "20) Name three important DevOps KPIs?",
        "answer": "Three most important DevOps KPIs are:\nDeployment frequency\nPercentage of failed deployments\nMean time to failure recovery",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "21) Explain pair programming regarding DevOps?",
        "answer": "Pair programming is an engineering practice of Extreme Programming Rules. In this case, two programmers work on the same system on the same design or algorithm.\nOne programmer act as a Driver and other as an Observer who continuously monitors the progress of a project to identify problems. The roles can be reversed at any point of time without any prior intimation.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "22) What is CBD?",
        "answer": "Component-Based Development (CBD) is a unique way to approach product development. In this method, developers always look for existing well defined, tested, and verified components to compose and assemble them to a product instead of developing from scratch.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "23) Define DevOps Automation?",
        "answer": "Automation is the crucial need for DevOps practices, and automate everything is the fundamental principle of DevOps. Automation kick starts from the code generation on the developer's machine, until the code is pushed to the code, to monitor the application and system in the production.\nAutomation in DevOps boosts speed, consistency, higher accuracy, reliability, and increases the number of deliveries.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "24) What is the DevOps pipeline?",
        "answer": "A pipeline in software engineering team is a set of automated processes which allows DevOps professionals and developer to reliably and efficiently compile, build, and deploy their code to their production compute platforms.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "25) What is Azure DevOps?",
        "answer": "Azure DevOps is also known as Microsoft visual studio team services (VSTS). It is a set of collaborative development tools built for the cloud. VSTS was commonly used as a standalone term, and Azure DevOps is a platform which is made up of a few different products, such as:\nAzure Test Plans\nAzure Boards\nAzure Repos\nAzure Pipeline\nAzure Artifacts",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "26) Which makes AWS DevOps highly accessible?",
        "answer": "Here are some reasons which make AWS DevOps a highly popular, such as:\nAWS CloudFormation\nAWS EC2\nAWS CloudWatch\nAWS CodePipeline",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "27) What is the Build in DevOps?",
        "answer": "The build is a method in which the source code is put together to check whether it works as a single unit. In the build creation process, the source code will undergo compilation, testing, inspection, and deployment.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "28) Explain at what instance has used the SSH?",
        "answer": "You can use SSH to log into a remote machine and work on the command line. Also, you can use it to tunnel into the system to facilitate secure encrypted communication between two hosts over an insecure network.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "29) How infrastructure code is executed in AWS?",
        "answer": "In AWS:\nThe code for infrastructure will be in a simple JSON format.\nThis JSON code will be organized into files called templates.\nThese templates can be deployed on AWS DevOps and then managed as stacks.\nLater the CloudFormation service will do the Creating, deleting, updating, etc. operation in the stack.",
        "reference": "javatpoint.com",
        "role": "devops"
    },
    {
        "question": "30) Explain Git Bisect?",
        "answer": "Git Bisect helps to find the commit which introduced a bug using binary search.",
        "reference": "javatpoint.com",
        "role": "devops"
    }
]