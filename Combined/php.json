[
    {
        "question": "1. What is PHP most used for?",
        "answer": "PHP has a plethora of uses for developers and the ones mentioned below are some of the most widely used concepts that PHP offers:\nWith PHP, it becomes very easy to provide restricted access to the required content of the website.\nIt allows users to access individual cookies and set them as per requirement.\nDatabase manipulation operations, such as addition, deletion, and modification, can be done easily.\nForm handling, alongside features that involve file handling concepts and email integration, is used widely.\nThe system module allows users to perform a variety of system functions such as open, read, write, etc.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "2. Is PHP a case-sensitive scripting language?",
        "answer": "The answer to this is both yes and no. Variables and their declaration in PHP are completely case sensitive while function names are not.\nFor example, user-defined functions in PHP can be defined in uppercase but later referred to in lowercase, and it would still function normally.\nNext up on these PHP interview questions for freshers, you need to understand what PEAR is.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "3. What is the meaning of PEAR in PHP?",
        "answer": "PEAR stands for PHP Extension and Application Repository. It is one of the frameworks and acting repositories that host all of the reusable PHP components. Alongside containing some of the PHP libraries, it also provides you with a simple interface in PHP to automatically install packages.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "4. How is a PHP script executed?",
        "answer": "PHP scripts can be easily executed from the command-line interface (CLI). The syntax is as follows:\nphp filename.php\nHere, filename refers to the file that contains scripts. The extension .php is needed alongside the filename.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "5. What are the types of variables present in PHP?",
        "answer": "There are eight primary data types in PHP as shown below:\nArray: A named and ordered collection of data\nBoolean: A logical value (True or False)\nDouble: Floating point numbers such as 5.1525\nInteger: Whole numbers without a floating point\nObject: An instance of classes, containing data and functions\nNULL: A special data type, supporting only the NULL data\nResource: Special variables that hold references to external resources\nString: A sequence of characters such as, “Hello learners!”\nGet 100% Hike!\nMaster Most in Demand Skills Now !\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "6. What are the main characteristics of a PHP variable?",
        "answer": "Following are some of the most important aspects of the usage of variables in PHP:\nVariables can be declared before the value assignment.\nA variable value assignment happens using the ‘=’ operator.\nEvery variable in PHP is denoted with a $ (dollar) sign.\nThe value of a variable depends on its latest assigned value.\nPHP variables are not intrinsic. There is no explicit declaration.\nNext up on these PHP interview questions for freshers, you need to understand what NULL is.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "7. What does the phrase ‘PHP escape’ mean?",
        "answer": "PHP escape is a mechanism that is used to tell the PHP parser that certain code elements are different from the PHP code. This provides the basic means to differentiate a piece of PHP code from the other aspects of the program.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "8. Differentiate between PHP4 and PHP5.",
        "answer": "PHP4 PHP5\nNo support for static methods Allows the usage of static methods\nAbstract classes cannot be declared Abstract classes can be declared\nThe method of call-by-value is used The method of call-by-reference is used\nConstructors can have class names Constructors have separate names",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "9. What are some of the popular frameworks in PHP?",
        "answer": "There are many frameworks in PHP that are known for their usage. Following are some of them:\nCodeIgniter\nCakePHP\nLaravel\nZend\nPhalcon\nYii 2",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "10. What is PHP?",
        "answer": "PHP stands for Hypertext Preprocessor. It is an open-source,  general-purpose, scripting language that is especially used for web development.\nCheck out this video on PHP Interview Questions",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "11. Explain the PHP request-response cycle.",
        "answer": "The PHP request-response cycle is a concept that explains how a web application processes incoming requests and generates responses that are later sent to the client.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "12. What are some of the key features of PHP?",
        "answer": "Some of the key features of PHP are:\nIt is completely open-source.\nIt is compatible with many databases, like MySQL, SQLite, etc.\nIt is platform-independent, that is, it can be run on any operating system like Linux, Unix, Windows, etc.\nIt is object-oriented, that is it supports object oriented functionalities like encapsulation, inheritance, abstraction, and polymorphism.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "13. What are constants in PHP, and what is the syntax to define them?",
        "answer": "In PHP, constants are like variables that cannot be changed during the execution of the script. They are used to store values that remain constant throughout the execution.\nEx.\ndefine(name, value, case-insensitive);\nWhere, name = name of the constant\nvalue = value of the constant\nCase-sensitive takes in a boolean value",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "14. What is the difference between == and === operators in PHP?",
        "answer": "“==” operator is used to check two values without checking datatypes.\n“===” operator is used to do a strict check that also checks for datatypes along with values",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "15. What are superglobals in PHP?",
        "answer": "Superglobal variables in PHP are predefined global variables. Global variables are accessible from any part of a PHP script. Some examples of superglobal variables are  $_GET, $_POST, $_REQUEST, $_FILES, $_COOKIE, $_SESSION, $_SERVER, $_ENV, and $GLOBALS.\n\nPHP Interview Questions for Experienced",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "16. How does JavaScript interact with PHP?",
        "answer": "JavaScript is a client-side programming language, while PHP is a server-side scripting language. PHP has the ability to generate JavaScript variables, and this can be executed easily in the browser, thereby making it possible to pass variables to PHP using a simple URL.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "17. Does PHP interact with HTML?",
        "answer": "Yes, HTML and PHP interaction is at the core of what makes PHP’s functionality. PHP scripts have the ability to generate HTML mode and move around information very easily.\nPHP is a server-side scripting language, while HTML is a client-side language. This interaction helps bridge the gaps and use the best of both languages.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "18. Differentiate between require() and require_once() functions.",
        "answer": "require() require_once()\nThe inclusion and evaluation of files Includes files if they are not included before\nPreferred for files with fewer functions Preferred when there are a lot of functions",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "19. What is the most used method for hashing passwords in PHP?",
        "answer": "The crypt() function is widely used for this functionality as it provides a large amount of hashing algorithms that can be used. These algorithms include md5, sha1 or sha256.\n\nPHP Interview Questions for 3 Years Experience",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "20. What are sessions and cookies in PHP?",
        "answer": "Sessions are global variables that are stored on the server inside the architecture. Every single session is tagged with a unique server ID that is later used to work with the storage and retrieval of values.\nCookies are entities used to identify unique users in the architecture. It is a small file that the server plants into the client system. This is done to get useful information from the client for the development of various aspects of the server.\nLet us now take a look at the advanced questions.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "21. Can a form be submitted in PHP without making use of a submit button?",
        "answer": "Yes, a form can be submitted without the explicit use of a button. This is done by making use of the JavaScript submit() function easily.\nNext up on this PHP developer interview questions, it is vital that you know about PHP in detail. Read on.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "22. What are the different types of PHP errors?",
        "answer": "There are three main types of errors in PHP. They are as follows:\nNotice: A notice is a non-critical error that is not displayed to the user.\nWarning: A warning is an error that is displayed to the user while the script is running.\nFatal error: This is the most critical type of error. A fatal error will cause immediate termination of the script.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "23. What are PHP namespaces?",
        "answer": "Namespaces are qualifiers that are used to group the classes that work together. They are usually used to encapsulate classes, interfaces, functions, and constants that perform similar tasks.\nSyntax:  \nnamespace example;\nThis creates a namespace by the name of “example”",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "24. What are traits in PHP?",
        "answer": "Traits are a kind of method that allows us to reuse the code. They provide a means to mitigate the constraints of single inheritance by allowing us to freely reuse sets of methods across multiple classes that exist in separate class hierarchies.\nCheck out the Web Development Interview Questions for Freshers.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "25. Can you submit a form without reloading the page in PHP?",
        "answer": "No, we cannot submit a form without reloading the page in PHP. As PHP is a server-side language, it requires a page reload to process the form data.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "26. Explain the differences between abstract classes and interfaces.",
        "answer": "Interfaces Abstract classes\nInterfaces cannot have properties. Abstract classes can have properties.\nAll interfaces must be public. Abstract classes can be public or protected.\nIn the interface, we can only use public access specifiers. In abstract classes, we can use all access specifiers.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "27. What are the differences between a session and a cookie?",
        "answer": "Cookie Session\nIt is stored on the user’s web browser. It is stored server-side, that is, on the web server.\nIt lasts for a longer time, even after the user closes their browser. It lasts for a shorter period of time, usually only until the user closes their browser.\nIt can only hold a small amount of data, up to 4KB. It can hold a large amount of data, usually 64mb or 128mb.\n\nPHP Interview Questions for 5 Years Experience",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "28. What is the difference between ASP.NET and PHP?",
        "answer": "ASP.NET PHP\nA programming framework A scripting language\nCompiled and executed Interpreted mode of execution\nDesigned for use on Windows Platform independent\nAlso check out our blog on ASP.NET",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "29. How can you get the IP address of a client in PHP?",
        "answer": "The IP address of a client, who is connected, can be obtained easily in PHP by making use of the following syntax:\n$_SERVER[\"REMOTE_ADDR\"];",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "30. Differentiate between GET and POST methods in PHP.",
        "answer": "GET Method POST Method\nThe GET method can only send a maximum of 1024 characters simultaneously There is no restriction on the data size\nGET does not support sending binary data POST supports binary data as well as ASCII\nQUERY_STRING env variable is used to access the data that is sent The HTTP protocol and the header are used to push the data\nThe $_GET associative array is used to access the sent information The $_POST associative array is used to access the sent information here",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "31. How can you optimize the performance of PHP code?",
        "answer": "A few of the points to improve the performance of a PHP code are:\nOptimizing Code: Make your website’s code better to use less memory and make it faster for users.\nUsing HTTP/2: Switching to HTTP/2 makes your website faster because it can handle more requests at once.\nBetter Caching: Use techniques like network caching, HTTP caching, and database caching to make your website load faster for users who have visited before.\nImproving Frontend: Make your website look better and easier to use by improving styles, adding more options and images, and creating more pages if needed.\nAlso check out Closures in JavaScript",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "32. What are closures in PHP?",
        "answer": "Closures are small one-time use functions in PHP that can be passed around and used in other functions. They are helpful in avoiding writing larger wrapper functions just to pass to array functions, for example. \nThe key aspects are:\nCompact, single-use functions.\nCan accept arguments and return values like normal functions.\nCan be assigned to variables and passed to other functions.\nHave access to variables from the parent scope.\nHelp make the code more concise and readable.\nUsed in array functions and callbacks.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "33. How can you achieve data abstraction in PHP?",
        "answer": "There are two main ways to approach abstraction:\n1) Using Interfaces: \n   – Interfaces allow us to define common methods that a class must implement.\n   – The interface only defines the method signatures and the class implements the logic.\n   – This separates the interface from the implementation details\n   – For example, a MailerInterface can define sendMail() method and classes implement the actual mail sending logic.\n2) Using Abstract Classes:\n   – Abstract classes allow us to have abstract methods without body\n   – Any child class inheriting an abstract class must define the implementation of abstract methods. \n   – This enforces a common interface in all child classes\n   – Additional non-abstract methods with implementation can also be defined.\n   – So core logic can stay in an abstract class, and subclasses can be customized.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "34. What are magic methods in PHP?",
        "answer": "Magic methods in PHP are special built-in methods that start with a double underscore ” _ “. Few examples of magic methods are:\n__construct() – The constructor method that is called automatically when an object is created\n__destruct() – The destructor method that is invoked when the object is destroyed\n__get() – Invoked when trying to read a non-accessible property\n__set() – Automatically called when trying to assign a value to a non-accessible property\n\nAdvanced PHP Interview Questions",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "35. What are the steps to create a new database using MySQL and PHP?",
        "answer": "There are four basic steps that are used to create a new MySQL database in PHP. They are as follows:\nFirst, a connection is established to the MySQL server using the PHP script.\nSecond, the connection is validated. If the connection is successful, then you can write a sample query to verify.\nQueries that create the database are input and later stored into a string variable.\nThen, the created queries are executed one after the other.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "36. How does string concatenation work in PHP?",
        "answer": "String concatenation is carried out easily in PHP by making use of the dot(.) operator. Consider the following example:\n<!--?php $string1=\"Welcome\"; $string2=\"to Intellipaat\"; echo $string1 . \" \" . $string2; ?-->\nOutput: Welcome to Intellipaat",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "37. Is it possible to set infinite execution time in PHP?",
        "answer": "Yes, it is possible to have an infinite execution time in PHP for a script by adding the set_time_limit(0) function to the beginning of a script.\nThis can also be executed in the  ‘php.ini’  file if not at the beginning of the script.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "38. How can we increase the execution time of a PHP script?",
        "answer": "The default time allowed for a PHP script to execute is 30 seconds as mentioned in the php.ini file. The function used is set_time_limit(int sec). If the value passed is ‘0’, it takes unlimited time. It should be noted that if the default timer is set to 30 seconds and 20 seconds is specified in set_time_limit(), the script will run for 45 seconds.\nThis time can be increased by modifying max_execution_time in seconds. The time must be changed keeping in mind the environment of the server. This is because modifying the execution time will affect all the sites hosted by the server.\nThe script execution time can be increased by:\nUsing the sleep() function in the PHP script\nUsing the set_time_limit() function\nThe default limit is 30 seconds. The time limit can be set to zero to impose no time limit\nTo know more about PHP, enroll in our Online PHP Training Course now!\n\nPHP Interview Questions for 7 Years Experience",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "39. Compare PHP and Java.",
        "answer": "Criteria PHP Java\nDeployment area Server-side scripting General-purpose programming\nLanguage type Dynamically typed Statically typed\nProviding a rich set of APIs No Yes\nCheck out our Java Tutorial",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "40. What is Zend Engine?",
        "answer": "Zend Engine is used internally by PHP as a compiler and runtime engine. PHP Scripts are loaded into memory and compiled into Zend OPCodes.\nThese OPCodes are executed and the HTML generated is sent to the client.\nThe Zend Engine provides memory and resource management and other standard services for the PHP language. Its performance, reliability, and extensibility have played a significant role in PHP’s increasing popularity.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "41. What are magic methods?",
        "answer": "Magic methods are member functions that are available to all the instances of a class. Magic methods always start with ‘__’, for example, __construct(). All magic methods need to be declared as public.\nTo use a method, it should be defined within the class or the program scope. Various magic methods used in PHP5 are:\n__construct()\n__destruct()\n__set()\n__get()\n__call()\n__toString()\n__sleep()\n__wakeup()\n__isset()\n__unset()\n__autoload()\n__clone()",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "42. What is Smarty?",
        "answer": "Smarty is a template engine written in PHP. Typically, these templates will include variables—like {$variable}—and a range of logical and loop operators to allow adaptability within the templates.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "43. In what different conditions do we use require() vs. include()?",
        "answer": "We use require() when the file that is included is essential for your script to work. In other words, if we want our code to immediately stop when the file is not present, we will use require().\nWe use include() when the file which is included is not mandatory for your script to work. In other words if we want our code to continue execution when the file is not present, we will use include().",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "44. How to handle file uploads securely in PHP?",
        "answer": "When allowing users to upload files to your site, it opens up security risks. Files could contain malicious code or viruses. The goal is to handle the uploads safely. Here are some steps:\nUse HTTPS on your site to encrypt traffic.\nCheck that the uploaded file is less than a max file size you allow, say 10MB.\nEnsure the file type being uploaded matches the allowed types you support (for example, JPG, PNG images).\nGive each file a random, unique name on the server; don’t rely on the user given filename.\nScan the content before making uploaded files publicly accessible – this checks for viruses.\nStore files outside your main web server folder; limit access.\n\nPHP Interview Questions for 10 Years Experience",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "45. What library is used for PDF in PHP?",
        "answer": "The PDF functions in PHP can create PDF files using PDFlib version 6. PDFlib offers an object-oriented API for PHP5 in addition to the function-oriented API for PHP4.\nThere is also the Â» Panda module.\nFPDF is a PHP class, which allows generating PDF files with pure PHP (without using PDFlib). F from FPDF stands for Free: we may use it for any requirement and modify it to suit our needs. FPDF requires no extension (except zlib to activate compression and GD for GIF support) and works with PHP4 and PHP5.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "46. What are the new features introduced in PHP7?",
        "answer": "Zend Engine 3 performance improvements and 64-bit integer support on Windows\nUniform variable syntax\nAST-based compilation process\nAdded Closure::call()\nBitwise shift consistency across platforms\n(Null coalesce) operator\nUnicode codepoint escape syntax\nReturn type declarations\nScalar type (integer, float, string, and Boolean) declarations",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "47. What is htaccess? Why do we use it and where?",
        "answer": "The .htaccess files are configuration files of Apache Server that provide a way to make configuration changes on a per-directory basis. A file, containing one or more configuration directives, is placed in a particular document directory; the directives apply to that directory and all subdirectories thereof.\nThese .htaccess files are used to change the functionality and features of the Apache web server.\nFor instance:\nThe .htaccess file is used for URL rewrite.\nIt is used to make the site password-protected.\nIt can restrict some IP addresses so that on these restricted IP addresses, the site will not open.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "48. How can we execute a PHP script using a command line?",
        "answer": "We just have to run the PHP CLI (Command-line Interface) program and provide the PHP script file name as the command-line argument, for example, php myScript.php, assuming php as the command to invoke the CLI program.\nWe have to keep in mind that if our PHP script is written for the Web CGI interface, it may not execute properly in the command-line environment.\nIf you are looking forward to becoming an expert in Web Development, make sure to check out Intellipaat’s Web Development Online Course. Here, you can learn all of the concepts thoroughly and earn a course certificate as well!",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "49. Explain REST API development in PHP.",
        "answer": "A REST API allows different software systems to communicate with each other over the internet using the HTTP protocol. The API exposes various operations that can be consumed by sending requests and receiving responses.\nBuilding a REST API with PHP involves:\nUsing a framework that structures code well\nCreating PHP functions for key operations like getting, adding, or updating data.\nMapping URL endpoints to those functions – for example, a GET request to /users would trigger getting user data\nSerializing data output from PHP into common formats like JSON \nStandardizing error handling, for example, sending back error codes like 400 or 500\nProper documentation and reporting\nPerforming authentication, that is, using API keys, so that only authorized systems can make requests\nFinal Hosting is deploying the PHP application with API endpoints accessible over HTTP.\nThe above-mentioned steps are simplified from an interview point of view.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "50. Explain integrating PHP applications with third-party web services.",
        "answer": "When building PHP apps, you often need to connect them to existing external services over the internet. For example, payment gateways, shipping APIs, weather data, Google Maps, etc. This is done through integration.\nThe steps are:\nFind web services relevant to enhancing your PHP app’s functionality. \nRegister with the provider to get authentication keys to access their API.\nThe external service exposes endpoints and docs for operations like – getting users, refunding  payments etc.\nIn your PHP code, use cURL to craft and send API requests to their servers with authentication.\nParse their JSON response back into PHP objects to extract the actual data.\nUse the data – for example, to show shipped orders on your site.\nThe above-mentioned steps are simplified from an interview point of view.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "51. How are two objects compared in PHP?",
        "answer": "PHP provides you with the ‘==’ operator, which is used to compare two objects at a time. This is used to check if there is a common presence of attributes and values between the objects in comparison.\nThe ‘===’ operator is also used to compare if both objects in consideration are referencing to the same class.\nNext up on these PHP interview questions, you need to understand a fundamental concept.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "52. What is NULL in PHP?",
        "answer": "NULL is a special data type in PHP used to denote the presence of only one value, NULL. You cannot assign any other value to it.\nNULL is not case sensitive in PHP and can be declared in two ways as shown below:\n$var = NULL:\nOr\n$var = null;\n\nBoth of the above syntaxes work fine in PHP.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "53. How are constants defined in PHP?",
        "answer": "Constants can be defined easily in PHP by making use of the define() function. This function is used to define and pull out the values of the constants easily.\nConstants, as the name suggests, cannot be changed after being definition. They do not require the PHP syntax of starting with the conventional $ sign.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "54. What is the use of the constant() function in PHP?",
        "answer": "The constant() function is used to retrieve the values predefined in a constant variable. It is used especially when you do not know the name of the variable.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "55. What are the various constants predefined in PHP?",
        "answer": "PHP consists of many constants, and the following are some of the more widely used ones:\n_METHOD_: Represents the class name\n_CLASS_: Returns the class name\n_FUNCTION_: Denotes the function name\n_LINE_: Denotes the working line number\n_FILE_: Represents the path and the file name",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "56. Differentiate between variables and constants in PHP.",
        "answer": "Variable Constant\nVariables can have changed paths Constants cannot be changed\nThe default scope is the current access scope Constants can be accessed throughout without any scoping rules\nThe $ assignment is used for definition Constants are defined using the define() function\nCompulsory usage of the $ sign at the start No need for the $ sign for constants\nTo learn more about React JS check out Intellipaat’s React JS Course.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "57. Differentiate between static and dynamic websites.",
        "answer": "Static Website Dynamic Website\nThe content cannot be manipulated after the script is executed The content can be changed even at the runtime\nNo way to change the content as it is predefined The content can be changed easily by manipulation and reloading",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "58. What are the variable-naming rules you should follow in PHP?",
        "answer": "There are two main rules that you have to follow when naming a variable in PHP. They are as follows:\nVariables can only begin with letters or underscores.\nSpecial characters such as +, %, -, &, etc. cannot be used.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "59. What is the meaning of break and continue statements in PHP?",
        "answer": "Break: This statement is used in a looping construct to terminate the execution of the iteration and to immediately execute the next code snippet outside the scope of the iterating statement.\nContinue: This statement is used to skip the current iteration of the loop and continue to execute the next iteration until the looping construct is exited.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "60. What is the use of the final class and the final method in PHP?",
        "answer": "The ‘final’ keyword, if present in a declaration, denotes that the current method does not support overriding by other classes. This is used when there is a requirement to create an immutable class.\nNote: Properties cannot be declared as final. It is only the methods and classes that get to be final.\nNext up on this core PHP interview questions and answers blog, let us take a look at the intermediate questions.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "61. What are the types of arrays supported by PHP?",
        "answer": "There are three main types of arrays that are used in PHP.\nIndexed arrays: These are arrays that contain numerical data. Data access and storage are linear in indexed arrays.\nAssociative arrays: There are arrays that contain strings for indexing elements.\nMultidimensional arrays: These are arrays that contain more than one index and dimension.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "62. How does the ‘foreach’ loop work in PHP?",
        "answer": "The foreach statement is a looping construct used in PHP to iterate and loop through the array data type. The working of foreach is simple; with every single pass of the value, elements get assigned a value and pointers are incremented. This process is repeated until the end of the array.\nThe following is the syntax for using the foreach statement in PHP:\nforeach(array)\n{\nCode inside the loop;\n}",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "63. What are the data types present in PHP?",
        "answer": "PHP supports three types of data handling, and they are as shown in the following table:\nScalar Data Types Compound Data Types Special Data Types\n●       Boolean\n●       Integer<>\n●       Float\n●       String\n●       Array\n●       Object\n●       NULL\n●       Resource\nIf you are looking to become proficient in PHP and learn all of the concepts thoroughly, make sure to check out Intellipaat’s PHP Course.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "64. How can a text be printed using PHP?",
        "answer": "Text can be output onto the working environment using the following methods:\nEcho\nPrint\nThe following code denotes the usage of both:\n<?php echo \"Using echo\";\nprint \"Using print\"; ?>",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "65. What is the use of constructors and destructors in PHP?",
        "answer": "Constructors are special methods in PHP that are automatically invoked at the time of object creation. Their primary purpose is to initialize the object’s properties and perform any necessary setup tasks. Constructors are particularly useful for ensuring that an object is in a valid and usable state upon instantiation. They allow developers to define and set initial values for the object’s properties or perform other initialization logic. By using constructors, the object can be properly configured and ready to be utilized immediately.\nDestructors are automatically invoked when an object goes out of scope. Their primary objective is to execute cleanup operations prior to the object’s destruction and the subsequent release of its memory. Destructors prove valuable in releasing resources, closing database connections, and performing any essential cleanup tasks. Through the implementation of destructors, developers can ensure the proper management and release of resources when they are no longer needed, effectively preventing memory leaks and other potential issues.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "66. What are some of the top Content Management Systems (CMS) made using PHP?",
        "answer": "There are many CMS that are made using PHP. The popular ones are as mentioned below:\nWordPress\nJoomla\nMagento\nDrupal",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "67. How are comments used in PHP?",
        "answer": "There are two ways to use comments in PHP. They are single-line comments and multi-line comments.\nSingle-line comments can be left using the conventional ‘#’ sign.\nExample:\n<?php\n# This is a comment\necho \"Single-line comment\";\n?>\nMulti-line comments can be denoted using ‘/* */’ in PHP.\nExample:\n<?php\n/*\nThis is\na\nMulti-line\nComment\nIn PHP;\n*/\necho \"Multi-line comment\";\n?>\nNow to find out the difference between an indexed and an associative array.\nAlso check out Exception Handling in Python",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "68. Differentiate between an indexed array and an associative array.",
        "answer": "Indexed arrays have elements that contain a numerical index value.\nExample: $color=array(\"red\",\"green\",\"blue\");\nHere, red is at index 0, green at 1, and blue at 2.\nAssociative arrays, on the other hand, hold elements with string indices as shown below:\nExample: $salary=array(\"Jacob\"=>\"20000\",\"John\"=>\"44000\",\"Josh\"=>\"60000\");",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "69. Is typecasting supported in PHP?",
        "answer": "Yes, typecasting is supported by PHP and can be done very easily. Following are the types that can be cast in PHP:\n(int), (integer): Cast to integer\n(bool), (boolean): Cast to boolean\n(float), (double), (real): Cast to float\n(string): Cast to string\n(array): Cast to array\n(object): Cast to object",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "70. Does PHP support variable length argument functions?",
        "answer": "Yes, PHP supports the use of variable-length argument functions. This simply means that you can pass any number of arguments to a function. The syntax simply involves using three dots before the argument name as shown in the following example:\n<?php\nfunction add(...$num) {\n$sum = 0;\nforeach ($num as $n) {\n$sum += $n;\n}\nreturn $sum;\n}\necho add(5, 6, 7, 8);\n?>\nOutput: 26",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "71. What is the use of session_start() and session_destroy() functions?",
        "answer": "In PHP, the session_start() function is used to start a new session. However, it can also resume an existing session if it is stopped. In this case, the return will be the current session if resumed.\nSyntax:\nsession_start();\nThe session_destroy() function is mostly used to destroy all of the session variables as shown below:\n<?php\nsession_start();\nsession_destroy();\n?>",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "72. How can you open a file in PHP?",
        "answer": "PHP supports file operations by providing users with a plethora of file-related functions.\nIn the case of opening a file, the fopen() function is used. This function can open a file or a URL as per requirement. It takes two arguments: $filename and $mode.\nSyntax:\nresource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "73. What is the use of $message and $$message in PHP?",
        "answer": "Both $message and $$message are variables in PHP and the difference lies in the name. While $message is a variable with a fixed name, $$message is a variable with a name that is actually stored in $message.\nConsider the following example:\nIf $message consists of ‘var’, then $$message is nothing but ‘$var’.\nNext up on these core PHP interview questions, you have to know a very important difference in PHP.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "74. What is the use of lambda functions in PHP?",
        "answer": "Being an anonymous function, the lambda function is used to first store data into a variable and then to pass it as arguments for the usage in other methods or functions.\nConsider the following example:\n$input = array(2, 5, 10);\n$output = array_filter($input, function ($x) { return $x > 2; });\nThe lambda function definition here:\nfunction ($x) { return $x > 2; });\nThis is used further to store data into a variable, and then you can use it when required without the requirement of defining it again.\nAlso check out lambda function in Python",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "75. Differentiate between compile-time exception and runtime exception in PHP.",
        "answer": "As the name suggests, if there is an occurrence of any sort of exception while the script is being compiled, it is called a compile-time exception. The FileNotFoundException is a good example of a compile-time exception.\nAn exception that interrupts the script while running is called a runtime exception. The ArrayIndexOutOfBoundException is an example of a runtime exception.\nAlso, check our blog on CRUD Operations in PHP using MySQL.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "76. What is the meaning of type hinting in PHP?",
        "answer": "Type hinting is used in PHP when there is a requirement to explicitly define the data type of an argument when passing it through a function.\nWhen this function is first called, PHP will run a quick check to analyze the presence of all the data types that are specified. If it is different, then the runtime will stop as an exception will be raised.\nNext up you have to understand how to connect a URL with PHP.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "77. How is a URL connected to PHP?",
        "answer": "Any URL can be connected to PHP easily by making use of the library called cURL. This comes as a default library with the standard installation of PHP.\nThe term ‘cURL’ stands for client-side URL, allowing users to connect to a URL and pick up information from that page to display.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "78. What rules are there for determining the",
        "answer": "A value is said to be “true” if it is either a non-empty string or a non-zero number. Anything else, such as a null value or an empty string, is regarded as false. Additionally, an array is false if it is open and correct if it has at least one entry. Null is also thought to be incorrect.\nTo learn full-stack development in detail, sign up for Intellipaat’s Full Stack Developer Online Course and learn from industry experts.",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "79. Explain how to submit a form without a submit button.",
        "answer": "A form can be posted or submitted without the button in the following ways:\nOn the OnClick event of a label in the form, a JavaScript function can be called to submit the form.\nExample:\ndocument.form_name.submit()\nUsing a Hyperlink: On clicking the link, a JavaScript function can be called.\nExample:\n\nA form can be submitted in the following ways as well without using the submit button:\nSubmitting a form by clicking a link\nSubmitting a form by selecting an option from the drop-down box with the invocation of an onChange event\nUsing JavaScript:\ndocument.form.submit();\nUsing header(“location:page.php”);",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "80. What is meant by PEAR in PHP?",
        "answer": "PEAR is an acronym for PHP Extension and Application Repository. The purpose of PEAR is to provide:\nA structured library of open-sourced code for PHP users\nA system for code distribution and package maintenance\nA standard style for writing code in PHP\nPHP Foundation Classes (PFC)\nPHP Extension Community Library (PECL)\nA website, mailing lists, and download mirrors to support the PHP/PEAR community\nAlso check out the blog on forms",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "81. Explain soundex() and metaphone().",
        "answer": "The soundex() function calculates the soundex key of a string. A soundex key is a 4-character long alphanumeric string that represents the English pronunciation of a word. The soundex() function can be used for spelling applications.\n<?php \n$str= “hello”;\nEcho soundex($str);\n?>\nThe metaphone() function calculates the metaphone key of a string. A metaphone key represents how a string sounds if it is pronounced by an English (native) person. This function can also be used for spelling applications.\nphp \necho metaphone(“world”);",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "82. What is Memcache?",
        "answer": "Memcache is a technology that caches objects in memory such that a web application can get to them really fast. It is used by sites, such as Digg, Facebook, and NowPublic, and is widely recognized as an essential ingredient in scaling any LAMP.\n\nPHP Coding Interview Questions",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "83. Write a program to reverse a string without using built-in functions for php",
        "answer": "<!--?php \n\nfunction reverseString($str) {\n  $reversedStr = ''; \n  $strLen = strlen($str);\n  for($i=$strLen-1; $i>=0; $i--){\n    $reversedStr .= $str&#91;$i&#93;; \n  }\n  return $reversedStr;\n}\n\n$input = \"Hello World\";\n\n$output = reverseString($input);\n\necho \"Reversed String: \" . $output;\n\n?-->",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "84. Find duplicates in an array and return an array with duplicates removed.",
        "answer": "<!--?php \nfunction removeDuplicates($array) {\n    return array_unique($array);\n}\n\n$inputArray = &#91;1, 2, 3, 4, 5, 2, 3, 6&#93;;\n$outputArray = removeDuplicates($inputArray);\n\nprint_r($outputArray);\n?-->",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "85. How can we encrypt a password using PHP?",
        "answer": "The crypt () function is used to create one-way encryption. It takes one input string and one optional parameter. The function is defined as:\ncrypt ($input_string, $salt)\nHere, $input_string consists of the input string that has to be encrypted and $salt is also a string parameter that is used to generate a strong password and it acts as the base of the hashing process here. PHP uses DES for encryption. The format is as follows:\n\n\nPHP MCQ Questions with Answers",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "86. Which of the following is used to get data from forms?",
        "answer": "Get\nRequest\nPost\nFetch\nPost",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "87. Which PHP function is used to find files?",
        "answer": "filename\nfile_exist\nfind\nfile_exists\nfile_exists",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "88. Which function can be used to escape special characters in a string?",
        "answer": "esc()\nescape()\nbackslash()\nhtmlspecialchars()\nhtmlspecialchars()",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "89. Which of the following is not a valid PHP variable name?",
        "answer": "$my_Var\n$MYVAR\n$my var\n$myVar_1\n$my var",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "90. Which built-in PHP function returns the length of a string?",
        "answer": "length()\nsizeof()\nstrlen()\nstr_length()\nstrlen()\n\nDownload the PHP Interview Questions and Answers PDF to prepare for interviews offline.\n\nPHP Developer Salary Trends\nJob Role  Average   Salary in India Average Salary in the USA\nPHP Developer\n(0-9 years of experience)\nMinimum – ₹49T /mo Minimum – $86T /yr\nAverage –  ₹88T /mo Average – $92T /yr\nHighest –   ₹1L /mo\n(estimated)\nHighest – $1L /yr\n\nPHP Developer Job Trends\nBig giants like Facebook and Zoom even today use PHP for their server-side language. According to the Bureau of Labor Statistics, there will be a 15% growth in web development, including PHP.\nGlobal Trend: Despite the popularity of Python and other fast-growing technologies, the demand for PHP developers is expected to stay strong.\nGrowth Projections: Many assume that PHP is declining;  however,  around 76.5% of the world’s websites run on PHP. The Bureau of Labor Statistics predicts a 15% rise in jobs related to web development, including PHP roles.\n\nPHP Developer Roles and Responsibilities",
        "reference": "intellipaat.com",
        "role": "php"
    },
    {
        "question": "1. What is a session in PHP?",
        "answer": "A session in PHP is a way to store information to be used across multiple pages of an entire website. The information is not stored on the user’s computer, unlike cookies. In a temporary directory on the server, a file will be created by the session where registered session variables and their values are stored. This information will be available to all pages on the site during that visit. When you work with an application, you open it, do some modifications, and then you close it. This is much like a Session. The computer knows who you are. It knows when the application is started and ended by you. But on the internet, the webserver does not know who you are or what you do, because the HTTP address doesn’t maintain a state. This problem is solved using session variables by storing user information to be used across multiple pages (e.g. username, favorite color, etc). By default, session variables will last until the user closes the browser. So Session variables hold single user information and are available to all pages in one application.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "2. Differentiate between variables and constants in PHP",
        "answer": "Few difference between variables and constants in PHP are given below: Variables Constants\nThe value of a variable can be changed during the execution. The constant value can’t be changed during script execution.\nVariables require compulsory usage of the $ sign at the start. No dollar sign ($) is required before using a constant.\nIt is possible to define a variable by simple assignment. Constants can’t be defined by simple assignments. They are defined using the define() function.\nThe default scope is the current access scope. Constants can be accessed throughout without any scoping rules. Variables Constants\nThe value of a variable can be changed during the execution. The constant value can’t be changed during script execution.\nVariables require compulsory usage of the $ sign at the start. No dollar sign ($) is required before using a constant.\nIt is possible to define a variable by simple assignment. Constants can’t be defined by simple assignments. They are defined using the define() function.\nThe default scope is the current access scope. Constants can be accessed throughout without any scoping rules. Variables Constants Variables Constants Variables Constants The value of a variable can be changed during the execution. The constant value can’t be changed during script execution.\nVariables require compulsory usage of the $ sign at the start. No dollar sign ($) is required before using a constant.\nIt is possible to define a variable by simple assignment. Constants can’t be defined by simple assignments. They are defined using the define() function.\nThe default scope is the current access scope. Constants can be accessed throughout without any scoping rules. The value of a variable can be changed during the execution. The constant value can’t be changed during script execution. The value of a variable can be changed during the execution. The constant value can’t be changed during script execution. Variables require compulsory usage of the $ sign at the start. No dollar sign ($) is required before using a constant. Variables require compulsory usage of the $ sign at the start. No dollar sign ($) is required before using a constant. It is possible to define a variable by simple assignment. Constants can’t be defined by simple assignments. They are defined using the define() function. It is possible to define a variable by simple assignment. Constants can’t be defined by simple assignments. They are defined using the define() function. The default scope is the current access scope. Constants can be accessed throughout without any scoping rules. The default scope is the current access scope. Constants can be accessed throughout without any scoping rules.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "3. What does PEAR stands for?",
        "answer": "PEAR stands for “PHP Extension and Application Repository”. PEAR is a framework and repository for all of the reusable PHP components. PEAR provides a higher level of programming for web developers. It contains all kinds of PHP code snippets and libraries. It also provides you with a command-line interface to automatically install packages. web developers",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "4. Explain the difference between $message and $$message.",
        "answer": "The main difference between the $message and $$message is given below: $message $$message\n$message is a regular variable. $$message is a reference variable.\nIt has a fixed name and stores a fixed value. It stores data about the variable.\nData stored in $message is fixed. The value of the $$message can change dynamically as the value of the variable changes. $message $$message\n$message is a regular variable. $$message is a reference variable.\nIt has a fixed name and stores a fixed value. It stores data about the variable.\nData stored in $message is fixed. The value of the $$message can change dynamically as the value of the variable changes. $message $$message $message $$message $message $$message $message is a regular variable. $$message is a reference variable.\nIt has a fixed name and stores a fixed value. It stores data about the variable.\nData stored in $message is fixed. The value of the $$message can change dynamically as the value of the variable changes. $message is a regular variable. $$message is a reference variable. $message is a regular variable. $$message is a reference variable. It has a fixed name and stores a fixed value. It stores data about the variable. It has a fixed name and stores a fixed value. It stores data about the variable. Data stored in $message is fixed. The value of the $$message can change dynamically as the value of the variable changes. Data stored in $message is fixed. The value of the $$message can change dynamically as the value of the variable changes.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "5. Is PHP a case-sensitive language?",
        "answer": "PHP can be considered as a partial case-sensitive language. The variable names are completely case-sensitive but function names are not. Also, user-defined functions are not case-sensitive but the rest of the language is case-sensitive. For example, user-defined functions in PHP can be defined in lowercase but later referred to in uppercase, and it would still function normally.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "6. What are the different types of variables present in PHP?",
        "answer": "Types of PHP Variables  Types of PHP Variables There are 8 primary data types in PHP which are used to construct the variables. They are: Integers: Integers are whole numbers without a floating-point. Ex: 1253.\nDoubles: Doubles are floating-point numbers. Ex: 7.876\nBooleans: It represents two logical states- true or false.\nNULL: NULL is a special type that only has one value, NULL. When no value is assigned to a variable, it can be assigned with NULL.\nArrays: Array is a named and ordered collection of similar type of data. Ex: $colors = array(\"red\", \"yellow\", \"blue\");\nStrings: Strings are a sequence of characters. Ex: “Hello InterviewBit!”\nResources: Resources are special variables that consist of references to resources external to PHP(such as database connections).\nObjects: An instance of classes containing data and functions. Ex: $mango = new Fruit(); Integers: Integers are whole numbers without a floating-point. Ex: 1253. Doubles: Doubles are floating-point numbers. Ex: 7.876 Booleans: It represents two logical states- true or false. NULL: NULL is a special type that only has one value, NULL. When no value is assigned to a variable, it can be assigned with NULL. Arrays: Array is a named and ordered collection of similar type of data. Ex: $colors = array(\"red\", \"yellow\", \"blue\"); Strings: Strings are a sequence of characters. Ex: “Hello InterviewBit!” Resources: Resources are special variables that consist of references to resources external to PHP(such as database connections). Objects: An instance of classes containing data and functions. Ex: $mango = new Fruit();",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "7. What are the rules for naming a PHP variable?",
        "answer": "The following two rules are needed to be followed while naming a PHP variable: A variable must start with a dollar symbol, followed by the variable name. For example: $price=100; where price is a variable name.\nVariable names must begin with a letter or underscore.\nA variable name can consist of letters, numbers, or underscores. But you cannot use characters like + , – , % , & etc.\nA PHP variable name cannot contain spaces.\nPHP variables are case-sensitive. So $NAME and $name both are treated as different variables. A variable must start with a dollar symbol, followed by the variable name. For example: $price=100; where price is a variable name. Variable names must begin with a letter or underscore. A variable name can consist of letters, numbers, or underscores. But you cannot use characters like + , – , % , & etc. A PHP variable name cannot contain spaces. PHP variables are case-sensitive. So $NAME and $name both are treated as different variables.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "8. What is the difference between “echo” and “print” in PHP?",
        "answer": "The main difference between echo and print in PHP are given below: echo print\necho can output one or more strings. print can only output one string and it always returns 1.\necho is faster than print because it does not return any value. print is slower compared to echo.\nIf you want to pass more than one parameter to echo, a parenthesis should be used. Use of parenthesis is not required with the argument list. echo print\necho can output one or more strings. print can only output one string and it always returns 1.\necho is faster than print because it does not return any value. print is slower compared to echo.\nIf you want to pass more than one parameter to echo, a parenthesis should be used. Use of parenthesis is not required with the argument list. echo print echo print echo print echo can output one or more strings. print can only output one string and it always returns 1.\necho is faster than print because it does not return any value. print is slower compared to echo.\nIf you want to pass more than one parameter to echo, a parenthesis should be used. Use of parenthesis is not required with the argument list. echo can output one or more strings. print can only output one string and it always returns 1. echo can output one or more strings. print can only output one string and it always returns 1. echo is faster than print because it does not return any value. print is slower compared to echo. echo is faster than print because it does not return any value. print is slower compared to echo. If you want to pass more than one parameter to echo, a parenthesis should be used. Use of parenthesis is not required with the argument list. If you want to pass more than one parameter to echo, a parenthesis should be used. Use of parenthesis is not required with the argument list.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "9. Tell me some of the disadvantages of PHP",
        "answer": "The cons of PHP are: PHP is not suitable for giant content-based web applications.\nSince it is open-source, it is not secure. Because ASCII text files are easily available.\nChange or modification in the core behavior of online applications is not allowed by PHP.\nIf we use more features of the PHP framework and tools, it will cause poor performance of online applications.\nPHP features a poor quality of handling errors. PHP lacks debugging tools, which are needed to look for warnings and errors. It has only a few debugging tools in comparison to other programming languages. PHP is not suitable for giant content-based web applications. Since it is open-source, it is not secure. Because ASCII text files are easily available. Change or modification in the core behavior of online applications is not allowed by PHP. If we use more features of the PHP framework and tools, it will cause poor performance of online applications. PHP features a poor quality of handling errors. PHP lacks debugging tools, which are needed to look for warnings and errors. It has only a few debugging tools in comparison to other programming languages.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "1. What is the meaning of a final method and a final class?",
        "answer": "The final keyword in a declaration of the method indicates that the method cannot be overridden by subclasses. A class that is declared as final cannot be subclassed. This is especially useful when we are creating an immutable class like the String class. Only classes and methods may be declared final, properties cannot be declared as final.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "2. Explain Path Traversal",
        "answer": "Path traversal is a form of attack to read into the files of a web application. '../' (dot-dot-sequences) is a cross-platform symbol to go up in the directory. Path traversal makes use of this symbol to operate the web application file. The attacker can reveal the content of the file attacked using the path traversal outside the root directory of a web server or application. It is usually done to gain access to secret passwords, tokens, and other sensitive information stored in the files. attack web application Path Traversal is also called “Directory Traversal”. It allows the attacker to exploit vulnerabilities present in the web file under attack. Let’s take a simple example. Consider we have a “Show File” button that opens up some URL. For a classic directory traversal attack, the attacker may try to access the system file /etc/passwd (assuming a UNIX/LINUX system). If the application receives the value of the file parameter from the URL and passes it to a system call, it would traverse the relative path ../../etc/passwd starting from /var/www and ask the system to load the password file. This technique is also called a dot-dot-slash attack, because it usually uses the special characters ../ (or \\.. on Windows) to climb to a higher-level directory. dot-dot-slash attack",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "3. What is the meaning of ‘escaping to PHP’?",
        "answer": "The PHP parsing engine needs a way to differentiate PHP code from other page elements. The mechanism to achieve this is known as ‘escaping to PHP’. Escaping a string means reducing ambiguity in quotes used in that string. For example, when you’re defining a string, you surround it in either double quotes or single quotes:\n\"Hello, InterviewBit.\"  But what if I include double quotes within the string?\n\"Hello \"InterviewBit.\"\"  Now I have ambiguity - the interpreter doesn’t know where does my string end. If I want to keep my double quotes, I have various options. I could use single quotes around my string:\n'Hello \"InterviewBit.\"'  Or I can escape my quotes:\n\"Hello \\\"InterviewBit.\\\"\"  Any quote that is preceded by a slash is escaped and understood to be part of the value of the string.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "4. What is the difference between ASP.NET and PHP?",
        "answer": "The main difference between ASP.NET and PHP are given below: ASP.NET PHP\nA web application framework. A server-side scripting language.\nIt is designed for use on Windows. It is Platform independent\nCode is compiled and executed. Interpreted mode of execution.\nIt has a license cost associated with it. PHP is open-source and freely available. ASP.NET PHP\nA web application framework. A server-side scripting language.\nIt is designed for use on Windows. It is Platform independent\nCode is compiled and executed. Interpreted mode of execution.\nIt has a license cost associated with it. PHP is open-source and freely available. ASP.NET PHP ASP.NET PHP ASP.NET PHP A web application framework. A server-side scripting language.\nIt is designed for use on Windows. It is Platform independent\nCode is compiled and executed. Interpreted mode of execution.\nIt has a license cost associated with it. PHP is open-source and freely available. A web application framework. A server-side scripting language. A web application framework. A server-side scripting language. It is designed for use on Windows. It is Platform independent It is designed for use on Windows. It is Platform independent Code is compiled and executed. Interpreted mode of execution. Code is compiled and executed. Interpreted mode of execution. It has a license cost associated with it. PHP is open-source and freely available. It has a license cost associated with it. PHP is open-source and freely available.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "5. What are cookies? How to create cookies in PHP?",
        "answer": "A cookie is a small record that the server installs on the client’s computer. They store data about a user on the browser. It is used to identify a user and is embedded on the user’s computer when they request a particular page. Each time a similar PC asks for a page with a program, it will send the cookie as well. After verifying the user’s identity in encrypted form, cookies maintain the session id generated at the back end. It must reside in the browser of the machine. You can store only string values not object because you cannot access any object across the website or web apps. By default, cookies are URL particular. For example, Gmail cookies are not supported by Yahoo and vice versa. Cookies are temporary and transitory by default. Per site 20 cookies can be created in a single website or web app. 50 bytes is the initial size of the cookie and 4096 bytes is the maximum size of the cookie. In PHP, we can create cookies using the setcookie() function: In PHP, we can create cookies using the setcookie() function: setcookie(name, value, expire, path, domain, secure, httponly); Here name is mandatory and the remaining parameters are optional. Example:\nsetcookie(“instrument_selected”, “guitar”) Example: ",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "6. What is the difference between the include() and require() functions?",
        "answer": "include() function include() function This function is used to copy all the contents of a file called within the function, text wise into a file from which it is called. When the file is included cannot be found, it will only produce a warning (E_WARNING) and the script will continue the execution. require() function: require() function: The require() function performs same as the include() function. It also takes the file that is required and copies the whole code into the file from where the require() function is called. When the file is included cannot be found, it will produce a fatal error (E_COMPILE_ERROR) and terminates the script.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "7. What is the most used method for hashing passwords in PHP?",
        "answer": "The crypt() function is used for this functionality as it provides a large number of hashing algorithms that can be used. These algorithms include sha1, sha256, or md5 which are designed to be very fast and efficient.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "8. How does the ‘foreach’ loop work in PHP?",
        "answer": "The foreach statement is a looping construct that is used in PHP to iterate and loop through the array data type. foreach statement The working of foreach is simple, with every single pass of the value, elements get assigned a value, and pointers are incremented. This process is repeatedly done until the end of the array has been reached. The syntax for using the foreach statement in PHP is given below: foreach($array as $value)\n{\n   Code inside the loop;\n} foreach($array as $value)\n{\n   Code inside the loop;\n} foreach $array as $value",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "9. Does JavaScript interact with PHP?",
        "answer": "JavaScript is a client-side programming language, whereas PHP is a server-side scripting language. PHP has the ability to generate JavaScript variables, and this can be executed easily in the browser. Thereby making it possible to pass variables to PHP using a simple URL.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "10. What are traits?",
        "answer": "Traits are a mechanism that lets you create reusable code in PHP and similar languages where multiple inheritances are not supported. It’s not possible to instantiate it on its own. A trait is intended to reduce the limitations of single inheritance by enabling a developer to reuse sets of methods freely in many independent classes living in different hierarchies of class.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "11. Explain the main types of errors.",
        "answer": "The 3 main types of errors in PHP are: Notices: Notices are non-critical errors that can occur during the execution of the script. These are not visible to users. Example: Accessing an undefined variable.\nWarnings: These are more critical than notices. Warnings don’t interrupt the script execution. By default, these are visible to the user. Example: include() a file that doesn’t exist.\nFatal: This is the most critical error type which, when occurs, immediately terminates the execution of the script. Example: Accessing a property of a non-existent object or require() a non-existent file. Notices: Notices are non-critical errors that can occur during the execution of the script. These are not visible to users. Example: Accessing an undefined variable. Warnings: These are more critical than notices. Warnings don’t interrupt the script execution. By default, these are visible to the user. Example: include() a file that doesn’t exist. Fatal: This is the most critical error type which, when occurs, immediately terminates the execution of the script. Example: Accessing a property of a non-existent object or require() a non-existent file.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "12. Explain the importance of Parser in PHP?",
        "answer": "A PHP parser is software that converts source code into the code that computer can understand. This means whatever set of instructions we give in the form of PHP code is converted into a machine-readable format by the parser. You can parse PHP code with PHP using the token_get_all() function.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "13. How can PHP and HTML interact?",
        "answer": "PHP scripts have the ability to generate HTML, and it is possible to pass information from HTML to PHP. PHP is a server-side language whereas HTML is a client-side language. So PHP executes on the server-side and gets its results as strings, objects, arrays, and then we use them to display its values in HTML. This interaction helps bridge the gaps and use the best of both languages.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "14. What is the purpose of @ in PHP?",
        "answer": "In PHP, @ is used for suppressing error messages. If any runtime error occurs on the line which consists @ symbol at the beginning, then the error will be handled by PHP.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "15. What are the different types of Array in PHP?",
        "answer": "There are 3 main types of arrays that are used in PHP: Types of Arrays in PHP  Types of Arrays in PHP Indexed Array Indexed Array An array with a numeric key is known as the indexed array. Values are stored and accessed in linear order. Indexed Array  Indexed Array Associative Array Associative Array An array with strings for indexing elements is known as the associative array. Element values are stored in association with key values rather than in strict linear index order. Associative Array  Associative Array Multidimensional Array Multidimensional Array An array containing one or more arrays within itself is known as a multidimensional array. The values are accessed using multiple indices. Multidimensional Array  Multidimensional Array",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "1. What are the steps to create a new database using MySQL and PHP?",
        "answer": "The 4 main steps used to create a new MySQL database in PHP are given below: A connection establishment is done to the MySQL server using the PHP script.\nThe connection is validated. If the connection is successful, then you can write a sample query to verify.\nQueries that create the database are input and later stored into a string variable.\nThen, the created queries will be executed one after the other. A connection establishment is done to the MySQL server using the PHP script. The connection is validated. If the connection is successful, then you can write a sample query to verify. Queries that create the database are input and later stored into a string variable. Then, the created queries will be executed one after the other.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "2. What is the use of session_start() and session_destroy() functions in PHP?",
        "answer": "The session_start() function is used to start a new session. Also, it can resume an existing session if it is stopped. In this particular case, the return will be the current session if resumed. Syntax: session_start(); session_start(); The session_destroy() function is used to destroy all of the session variables as given below: <?php\nsession_start();\nsession_destroy();\n?> <?php\nsession_start();\nsession_destroy();\n?> <?php ?>",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "3. What is Memcache and Memcached in PHP? Is it possible to share a single instance of a Memcache between several projects of PHP?",
        "answer": "Memcached is an efficient caching daemon designed specifically for decreasing database load in dynamic web applications. Memcache offers a handy procedural and object-oriented interface to Memcached. Memcache is a memory storage space. We can run Memcache on a single or several servers. Therefore, it is possible to share a single instance of Memcache between multiple projects. It is possible to configure a client to speak to a separate set of instances. Therefore, it is allowed to run two different Memcache processes on the same host. Despite running on the same host, both of such Memcache processes stay independent, unless there is a partition of data.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "4. What are the different ways of handling the result set of MySQL in PHP?",
        "answer": "There are 4 ways of handling the result set of MySQL in PHP. They are: mysqli_fetch_array(): Returns the current row of the result set as an associative array, a numeric array, or both.\nmysqli_fetch_assoc(): Returns the current row of the result set as an associative array.\nmysqli_fetch_object(): Returns the current row of a result set, as an object.\nmysqli_fetch_row(): Returns result row as an enumerated array. mysqli_fetch_array(): Returns the current row of the result set as an associative array, a numeric array, or both. mysqli_fetch_assoc(): Returns the current row of the result set as an associative array. mysqli_fetch_object(): Returns the current row of a result set, as an object. mysqli_fetch_row(): Returns result row as an enumerated array.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "5. How to connect to a URL in PHP?",
        "answer": "Any URL can be connected to PHP easily by making use of the library called cURL. This comes as a default library with the standard installation of PHP. The term cURL stands for client-side URL. cURL make use of libcurl(client-side URL Transfer Library) which supports many protocols like FTP, FTPS, HTTP/1, HTTP POST, HTTP PUT, HTTP proxy, HTTPS, IMAP, Kerberos etc. It allows you to connect to a URL and retrieve and display information from that page – like the HTML content of the page, HTTP headers, and their associated data, etc. Steps for connecting with URL using PHP cURL POST are given below: Steps for connecting with URL using PHP cURL POST are given below: Initialize cURL session.\nDefine your URL where you want to post the request. We can directly enter this URL into the URL section inset option parameter or we can assign it to an object.\nNow, define the cURL options that you want to execute with the post option.\nAfter setting all the functions then it’s time to execute our cURL.\nAfter this, close the cURL and echo your object to check their response. Initialize cURL session. Define your URL where you want to post the request. We can directly enter this URL into the URL section inset option parameter or we can assign it to an object. Now, define the cURL options that you want to execute with the post option. After setting all the functions then it’s time to execute our cURL. After this, close the cURL and echo your object to check their response. //Step 1 To initialize curl\n     $ch = curl_init();\n//Step 2 To set url where you want to post\n     $url = ‘http://www.localhost.com’;\n//Step 3 Set curl functions which are needs to you\n     curl_setopt($ch,CURLOPT_URL,$url);\n     curl_setopt($ch,CURLOPT_POST,true);\n     curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n     curl_setopt($ch,CURLOPT_POSTFIELD,’postv1 = value1&postv2 = value2’);\n//Step 4 To execute the curl\n     $result = curl_exec($ch);\n//Step 5 Close curl\n     curl_close($ch); //Step 1 To initialize curl\n     $ch = curl_init();\n//Step 2 To set url where you want to post\n     $url = ‘http://www.localhost.com’;\n//Step 3 Set curl functions which are needs to you\n     curl_setopt($ch,CURLOPT_URL,$url);\n     curl_setopt($ch,CURLOPT_POST,true);\n     curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n     curl_setopt($ch,CURLOPT_POSTFIELD,’postv1 = value1&postv2 = value2’);\n//Step 4 To execute the curl\n     $result = curl_exec($ch);\n//Step 5 Close curl\n     curl_close($ch); //Step 1 To initialize curl $ch //Step 2 To set url where you want to post $url //www.localhost.com’; //Step 3 Set curl functions which are needs to you $ch $url $ch true $ch true $ch //Step 4 To execute the curl $result $ch //Step 5 Close curl $ch",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "6. How to create API in PHP?",
        "answer": "API stands for Application Programming Interface. It defines the functions and variables. Communication between the database via PHP extensions is handled by API. Now, REST API is the web architecture that uses HTTP protocol for exchanging data between two functions that means your application or system. Now, let us have a look at how to create REST API in PHP by considering the example of accessing data from a database using PHP script. Step 1 - Create a database: To create a database run the query given below: Step 1 - Create a database: CREATE DATABASE phptest; CREATE DATABASE phptest; Step 2 - Create a table: After creating a database, you have to create a table with dummy data. To create a table run the query given below: Step 2 - Create a table: CREATE TABLE IF NOT EXISTS `transactions` \n(\n   `id` int(20) NOT NULL AUTO_INCREMENT,\n   `order_id` int(50) NOT NULL,\n   `amount` decimal(9,2) NOT NULL,\n   `response_code` int(10) NOT NULL,\n   `response_desc` varchar(50) NOT NULL,\n   PRIMARY KEY (`id`),\n   UNIQUE KEY `order_id` (`order_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ; CREATE TABLE IF NOT EXISTS `transactions` \n(\n   `id` int(20) NOT NULL AUTO_INCREMENT,\n   `order_id` int(50) NOT NULL,\n   `amount` decimal(9,2) NOT NULL,\n   `response_code` int(10) NOT NULL,\n   `response_desc` varchar(50) NOT NULL,\n   PRIMARY KEY (`id`),\n   UNIQUE KEY `order_id` (`order_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ; IF int 20 NULL int 50 NULL 9 2 NULL int 10 NULL 50 NULL DEFAULT Step 3 - Create a Database Connection: Create a db.php file and paste the below-given database connection in it. Make sure to update these credentials with your database credentials. Step 3 - Create a Database Connection: <?php\n// Enter your Host, username, password, database below.\n$con = mysqli_connect(\"localhost\",\"root\",\"\",\"phptest\");\nif (mysqli_connect_errno())\n{\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n    die();\n}\n?> <?php\n// Enter your Host, username, password, database below.\n$con = mysqli_connect(\"localhost\",\"root\",\"\",\"phptest\");\nif (mysqli_connect_errno())\n{\n    echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n    die();\n}\n?> <?php // Enter your Host, username, password, database below. $con \"localhost\" \"root\" \"\" \"phptest\" if echo \"Failed to connect to MySQL: \" die ?> Step 4 - Create a REST API File: Create an api.php file and copy the following script in it. Step 4 - Create a REST API File: <?php\nheader(\"Content-Type:application/json\");\nif (isset($_GET['order_id']) && $_GET['order_id']!=\"\") \n{\ninclude('db.php');\n$order_id = $_GET['order_id'];\n$result = mysqli_query($con,\n       \"SELECT * FROM `transactions` WHERE order_id=$order_id\");\nif(mysqli_num_rows($result)>0)\n       {\n    $row = mysqli_fetch_array($result);\n    $amount = $row['amount'];\n           $response_code = $row['response_code'];\n           $response_desc = $row['response_desc'];\n    response($order_id, $amount, $response_code, $response_desc);\n    mysqli_close($con);\n}\n       else\n       {\n     response(NULL, NULL, 200,\"No Record Found\");\n}\n}\nelse\n{\nresponse(NULL, NULL, 400,\"Request is invalid\");\n}\nfunction response($order_id,$amount,$response_code, $response_desc)\n{\n$response['order_id'] = $order_id;\n$response['amount'] = $amount;\n$response['response_code'] = $response_code;\n       $response['response_desc'] = $response_desc;\n$json_response = json_encode($response);\necho $json_response;\n}\n?> <?php\nheader(\"Content-Type:application/json\");\nif (isset($_GET['order_id']) && $_GET['order_id']!=\"\") \n{\ninclude('db.php');\n$order_id = $_GET['order_id'];\n$result = mysqli_query($con,\n       \"SELECT * FROM `transactions` WHERE order_id=$order_id\");\nif(mysqli_num_rows($result)>0)\n       {\n    $row = mysqli_fetch_array($result);\n    $amount = $row['amount'];\n           $response_code = $row['response_code'];\n           $response_desc = $row['response_desc'];\n    response($order_id, $amount, $response_code, $response_desc);\n    mysqli_close($con);\n}\n       else\n       {\n     response(NULL, NULL, 200,\"No Record Found\");\n}\n}\nelse\n{\nresponse(NULL, NULL, 400,\"Request is invalid\");\n}\nfunction response($order_id,$amount,$response_code, $response_desc)\n{\n$response['order_id'] = $order_id;\n$response['amount'] = $amount;\n$response['response_code'] = $response_code;\n       $response['response_desc'] = $response_desc;\n$json_response = json_encode($response);\necho $json_response;\n}\n?> <?php \"Content-Type:application/json\" if isset $_GET 'order_id' $_GET 'order_id' \"\" include 'db.php' $order_id $_GET 'order_id' $result $con \"SELECT * FROM `transactions` WHERE order_id=$order_id\" $order_id if $result 0 $row $result $amount $row 'amount' $response_code $row 'response_code' $response_desc $row 'response_desc' $order_id $amount $response_code $response_desc $con else NULL NULL 200 \"No Record Found\" else NULL NULL 400 \"Request is invalid\" function response($order_id,$amount,$response_code, $response_desc) function response $order_id,$amount,$response_code, $response_desc $order_id $amount $response_code $response_desc $response 'order_id' $order_id $response 'amount' $amount $response 'response_code' $response_code $response 'response_desc' $response_desc $json_response $response echo $json_response ?> The above code will accept the GET request and return output in the JSON format. Now you can get an output as given below: Output File  Output File This is how you can create REST API in PHP.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "7. What is PDO in PHP?",
        "answer": "PDO stands for PHP Data Object. PDO is a set of PHP extensions that provide a core PDO class and database, specific drivers. The PDO extension can access any database which is written for the PDO driver. There are several PDO drivers available which are used for FreeTDS, Microsoft SQL Server, IBM DB2, Sybase, Oracle Call Interface, Firebird/Interbase 6 and PostgreSQL databases, etc. It gives a lightweight, vendor-neutral, data-access abstraction layer. Hence, no matter what database we use, the function to issue queries and fetch data will be the same. And, it focuses on data access abstraction instead of database abstraction.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "8. Differentiate between GET and POST",
        "answer": "The difference between GET and POST are given below: GET POST\nGET method is used for requesting data from a specified resource. POST is used for sending the data to the server as a package in a separate communication with the processing script.\nData is sent in the form of URL parameters which are strings of name-value pairs separated by ampersands(&) Data sent through the POST method will not be seen in the URL\nGET method cannot be used for sending binary data like images or word documents The POST method can be used to send ASCII as well as binary data like images and word documents\nThis method must not be used if you have any sensitive information like a password to be sent to the server. Sensitive information can be sent using this method.\nIt can be used for submitting the form where the user can bookmark the result. Submissions by form with POST cannot be bookmarked.\nYou can use this method only for data that is not secure. Data sent through this method is secure.\nGET method is not safer since parameters may be stored in web server logs or browser history. POST method is safer than GET because the parameters are not stored in web server logs or browser history. GET POST\nGET method is used for requesting data from a specified resource. POST is used for sending the data to the server as a package in a separate communication with the processing script.\nData is sent in the form of URL parameters which are strings of name-value pairs separated by ampersands(&) Data sent through the POST method will not be seen in the URL\nGET method cannot be used for sending binary data like images or word documents The POST method can be used to send ASCII as well as binary data like images and word documents\nThis method must not be used if you have any sensitive information like a password to be sent to the server. Sensitive information can be sent using this method.\nIt can be used for submitting the form where the user can bookmark the result. Submissions by form with POST cannot be bookmarked.\nYou can use this method only for data that is not secure. Data sent through this method is secure.\nGET method is not safer since parameters may be stored in web server logs or browser history. POST method is safer than GET because the parameters are not stored in web server logs or browser history. GET POST GET POST GET POST GET method is used for requesting data from a specified resource. POST is used for sending the data to the server as a package in a separate communication with the processing script.\nData is sent in the form of URL parameters which are strings of name-value pairs separated by ampersands(&) Data sent through the POST method will not be seen in the URL\nGET method cannot be used for sending binary data like images or word documents The POST method can be used to send ASCII as well as binary data like images and word documents\nThis method must not be used if you have any sensitive information like a password to be sent to the server. Sensitive information can be sent using this method.\nIt can be used for submitting the form where the user can bookmark the result. Submissions by form with POST cannot be bookmarked.\nYou can use this method only for data that is not secure. Data sent through this method is secure.\nGET method is not safer since parameters may be stored in web server logs or browser history. POST method is safer than GET because the parameters are not stored in web server logs or browser history. GET method is used for requesting data from a specified resource. POST is used for sending the data to the server as a package in a separate communication with the processing script. GET method is used for requesting data from a specified resource. POST is used for sending the data to the server as a package in a separate communication with the processing script. Data is sent in the form of URL parameters which are strings of name-value pairs separated by ampersands(&) Data sent through the POST method will not be seen in the URL Data is sent in the form of URL parameters which are strings of name-value pairs separated by ampersands(&) Data sent through the POST method will not be seen in the URL GET method cannot be used for sending binary data like images or word documents The POST method can be used to send ASCII as well as binary data like images and word documents GET method cannot be used for sending binary data like images or word documents The POST method can be used to send ASCII as well as binary data like images and word documents This method must not be used if you have any sensitive information like a password to be sent to the server. Sensitive information can be sent using this method. This method must not be used if you have any sensitive information like a password to be sent to the server. Sensitive information can be sent using this method. It can be used for submitting the form where the user can bookmark the result. Submissions by form with POST cannot be bookmarked. It can be used for submitting the form where the user can bookmark the result. Submissions by form with POST cannot be bookmarked. You can use this method only for data that is not secure. Data sent through this method is secure. You can use this method only for data that is not secure. Data sent through this method is secure. GET method is not safer since parameters may be stored in web server logs or browser history. POST method is safer than GET because the parameters are not stored in web server logs or browser history. GET method is not safer since parameters may be stored in web server logs or browser history. POST method is safer than GET because the parameters are not stored in web server logs or browser history.",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "9. Explain type hinting in PHP",
        "answer": "In PHP, type hinting is used to specify the expected data type (arrays, objects, interface, etc.) for an argument in a function declaration. It was introduced in PHP 5. Whenever the function is called, PHP checks if the arguments are of a user-preferred type or not. If the argument is not of the specified type, the run time will display an error and the program will not execute. It is helpful in better code organization and improved error messages. Example usage: Example usage: //sendEmail() function argument $email is type hinted of Email Class. It means to call this function you must have to pass an email object otherwise an error is generated.\n<?php\n    function sendEmail (Email $email)\n    {\n      $email->send();\n    }\n?> //sendEmail() function argument $email is type hinted of Email Class. It means to call this function you must have to pass an email object otherwise an error is generated.\n<?php\n    function sendEmail (Email $email)\n    {\n      $email->send();\n    }\n?> //sendEmail() function argument $email is type hinted of Email Class. It means to call this function you must have to pass an email object otherwise an error is generated. <?php function sendEmail (Email $email) function sendEmail Email $email $email $email ?>",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "10. How to terminate the execution of a script in PHP?",
        "answer": "To terminate the execution of the script in PHP, the exit() function is used. It is a built-in function that outputs a message and then terminates the current script. The message which you want to display is passed as a parameter to the exit() function. Script termination will be done by this function after displaying the message. It is an alias of die() function. It doesn’t return any value. Syntax: exit(message) Where the message is a parameter to be passed as an argument. It defines a message or status. Example: The code given below will print a message and exit the current script. <?php\n$site = \"https://www.interviewbit.com//\";\nfopen($site,\"r\")\nor exit(\"Unable to connect to $site\");\n?> <?php\n$site = \"https://www.interviewbit.com//\";\nfopen($site,\"r\")\nor exit(\"Unable to connect to $site\");\n?> <?php $site \"https://www.interviewbit.com//\" $site \"r\" or exit \"Unable to connect to $site\" $site ?> Conclusion PHP proves to be a great tool for writing dynamic web pages. It is not restricted to use by professional web developers. Non-technical users can also easily learn a few handy tricks to make their web pages easier to manage thereby making them more useful. professional web developers Important Resources: Important Resources: PHP Developer PHP Developer PHP Developer Salary PHP Developer Salary Features of PHP Features of PHP Difference Between PHP 5 and 7 Difference Between PHP 5 and 7 PHP Frameworks PHP Frameworks PHP Projects PHP Projects PHP IDE PHP IDE PHP Vs Python PHP Vs Python ",
        "reference": "interviewbit.com",
        "role": "php"
    },
    {
        "question": "1) What is PHP?",
        "answer": "PHP stands for Hypertext Preprocessor. It is an open source server-side scripting language which is widely used for web development. It supports many databases like MySQL, Oracle, Sybase, Solid, PostgreSQL, generic ODBC etc.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "2) What is PEAR in PHP?",
        "answer": "PEAR is a framework and repository for reusable PHP components. PEAR stands for PHP Extension and Application Repository. It contains all types of PHP code snippets and libraries.\nIt also provides a command line interface to install \"packages\" automatically.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "3) Who is known as the father of PHP?",
        "answer": "Rasmus Lerdorf",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "4) What was the old name of PHP?",
        "answer": "The old name of PHP was Personal Home Page.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "5) Explain the difference b/w static and dynamic websites?",
        "answer": "In static websites, content can't be changed after running the script. You can't change anything on the site. It is predefined.\nIn dynamic websites, content of script can be changed at the run time. Its content is regenerated every time a user visit or reload. Google, yahoo and every search engine is the example of dynamic website.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "6) What is the name of scripting engine in PHP?",
        "answer": "The scripting engine that powers PHP is called Zend Engine 2.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "PHP4 doesn't support oops concept and uses Zend Engine 1.\nPHP5 supports oops concept and uses Zend Engine 2.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "8) What are the popular Content Management Systems (CMS) in PHP?",
        "answer": "ADVERTISEMENT\nWordPress: WordPress is a free and open-source content management system (CMS) based on PHP & MySQL. It includes a plug-in architecture and template system. It is mostly connected with blogging but supports another kind of web content, containing more traditional mailing lists and forums, media displays, and online stores.\nJoomla: Joomla is a free and open-source content management system (CMS) for distributing web content, created by Open Source Matters, Inc. It is based on a model-view-controller web application framework that can be used independently of the CMS.\nMagento: Magento is an open source E-trade programming, made by Varien Inc., which is valuable for online business. It has a flexible measured design and is versatile with many control alternatives that are useful for clients. Magento utilizes E-trade stage which offers organization extreme E-business arrangements and extensive support network.\nDrupal: Drupal is a CMS platform developed in PHP and distributed under the GNU (General Public License).",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "9) What are the popular frameworks in PHP?",
        "answer": "CakePHP\nCodeIgniter\nYii 2\nSymfony\nZend Framework etc.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "10) Which programming language does PHP resemble to?",
        "answer": "PHP has borrowed its syntax from Perl and C.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "Scalar type declarations\nReturn type declarations\nNull coalescing operator (??)\nSpaceship operator\nConstant arrays using define()\nAnonymous classes\nClosure::call method\nGroup use declaration\nGenerator return expressions\nGenerator delegation\nSpace ship operator",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "12) What is \"echo\" in PHP?",
        "answer": "PHP echo output one or more string. It is a language construct not a function. So the use of parentheses is not required. But if you want to pass more than one parameter to echo, the use of parentheses is required.\nSyntax:\nvoid echo ( string $arg1 [, string $... ] )  \nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "13) What is \"print\" in PHP?",
        "answer": "PHP print output a string. It is a language construct not a function. So the use of parentheses is not required with the argument list. Unlike echo, it always returns 1.\nSyntax:\nint print ( string $arg)  \nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "14) What is the difference between \"echo\" and \"print\" in PHP?",
        "answer": "Echo can output one or more string but print can only output one string and always returns 1.\nEcho is faster than print because it does not return any value.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "15) How a variable is declared in PHP?",
        "answer": "A PHP variable is the name of the memory location that holds data. It is temporary storage.\nSyntax:\n$variableName=value;  \nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "16) What is the difference between $message and $$message?",
        "answer": "$message stores variable data while $$message is used to store variable of variables.\n\n$message stores fixed data whereas the data stored in $$message may be changed dynamically.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "17) What are the ways to define a constant in PHP?",
        "answer": "PHP constants are name or identifier that can't be changed during execution of the script. PHP constants are defined in two ways:\nUsing define() function\nUsing const() function\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "18) What are magic constants in PHP?",
        "answer": "PHP magic constants are predefined constants, which change based on their use. They start with a double underscore (__) and end with a double underscore (__).\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "19) How many data types are there in PHP?",
        "answer": "PHP data types are used to hold different types of data or values. There are 8 primitive data types which are further categorized in 3 types:\nScalar types\nCompound types\nSpecial types\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "20) How to do single and multi line comment in PHP?",
        "answer": "PHP single line comment is made in two ways:\nUsing // (C++ style single line comment)\nUsing # (Unix Shell style single line comment)\nPHP multi-line comment is made by enclosing all lines within.\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "21) What are the different loops in PHP?",
        "answer": "For, while, do-while and for each.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "22) What is the use of count() function in PHP?",
        "answer": "The PHP count() function is used to count total elements in the array, or something an object.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "23) What is the use of header() function in PHP?",
        "answer": "The header() function is used to send a raw HTTP header to a client. It must be called before sending the actual output. For example, you can't print any HTML element before using this function.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "24) What does isset() function?",
        "answer": "The isset() function checks if the variable is defined and not null.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "PHP parameterized functions are functions with parameters. You can pass any number of parameters inside a function. These given parameters act as variables inside your function. They are specified inside the parentheses, after the function name. Output depends upon dynamic values passed as parameters into the function.\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "26) Explain PHP variable length argument function",
        "answer": "PHP supports variable length argument function. It means you can pass 0, 1 or n number of arguments in function. To do this, you need to use 3 ellipses (dots) before the argument name. The 3 dot concept is implemented for variable length argument since PHP 5.6.\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "PHP supports variable length argument function. It means you can pass 0, 1 or n number of arguments.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "28) What is the array in PHP?",
        "answer": "An array is used to store multiple values in a single value. In PHP, it orders maps of pairs of keys and values. It saves the collection of the data type.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "29) How many types of array are there in PHP?",
        "answer": "There are three types of array in PHP:\nIndexed array: an array with a numeric key.\nAssociative array: an array where each key has its specific value.\nMultidimensional array: an array containing one or more arrays within itself.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "30) Explain some of the PHP array functions?",
        "answer": "There are many array functions in PHP:\narray()\narray_change_key_case()\narray_chunk()\ncount()\nsort()\narray_reverse()\narray_search()\narray_intersect()\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "31) What is the difference between indexed and associative array?",
        "answer": "The indexed array holds elements in an indexed form which is represented by number starting from 0 and incremented by 1. For example:\n$season=array(\"summer\",\"winter\",\"spring\",\"autumn\");    \nThe associative array holds elements with name. For example:\n$salary=array(\"Sonoo\"=>\"350000\",\"John\"=>\"450000\",\"Kartik\"=>\"200000\");    \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "32) How to get the length of string?",
        "answer": "The strlen() function is used to get the length of the string.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "33) Explain some of the PHP string functions?",
        "answer": "There are many array functions in PHP:\nstrtolower()\nstrtoupper()\nucfirst()\nlcfirst()\nucwords()\nstrrev()\nstrlen()\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "34) What are the methods to submit form in PHP?",
        "answer": "There are two methods GET and POST.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "35) How can you submit a form without a submit button?",
        "answer": "You can use JavaScript submit() function to submit the form without explicitly clicking any submit button.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "36) What are the ways to include file in PHP?",
        "answer": "PHP allows you to include file so that page content can be reused again. There are two ways to add the file in PHP.\ninclude\nrequire\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "37) Differentiate between require and include?",
        "answer": "Require and include both are used to include a file, but if data is not found include sends warning whereas require sends Fatal error.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "38) Explain setcookie() function in PHP?",
        "answer": "PHP setcookie() function is used to set cookie with HTTP response. Once the cookie is set, you can access it by $_COOKIE superglobal variable.\nSyntax:\nbool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path     \n[, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )    \nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "39) How can you retrieve a cookie value?",
        "answer": "echo $_COOKIE [\"user\"];  \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "40) What is a session?",
        "answer": "PHP Engine creates a logical object to preserve data across subsequent HTTP requests, which is known as session.\nSessions generally store temporary data to allow multiple PHP pages to offer a complete functional transaction for the same user.\nSimply, it maintains data of an user (browser).\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "41) What is the method to register a variable into a session?",
        "answer": "<?php  \nSession_register($ur_session_var);  \n?>",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "42) What is $_SESSION in PHP?",
        "answer": "A session creates a file in a temporary directory on the server where registered session variables and their session id are stored. This data will be available to all pages on the site amid that visit.\nThe area of the temporary record is controlled by a setting in the php.ini document called session.save_path.\nAt the point when a session is begun following things happen -\nPHP first makes two duplicates of one of a kind session id for that particular session of the client which is an arbitrary string of 32 hexadecimal numbers, for example, 3c7foj34c3jjhkyepop2fc937e3443.\nOne copy of unique session id automatically sent to the user?s computer for the sake of synchronization in future ahead, and one copy is being maintained at server side till the session is running.\nWhenever you want to access the page of website or web app, then session id of the current user will be associated with the HTTP header, and that will be compared by the session id which is being maintained at the server. After completing the comparison process, you can easily access the page of the website or web app\nA session ends when the user closes the browser, or after leaving the site, the server will terminate the session after a predetermined period, commonly 30 minutes duration.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "43) What is PHP session_start() and session_destroy() function?",
        "answer": "PHP session_start() function is used to start the session. It starts new or resumes the current session. It returns the current session if the session is created already. If the session is not available, it creates and returns new sessions.\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "44) What is the difference between session and cookie?",
        "answer": "The main difference between session and cookie is that cookies are stored on user's computer in the text file format while sessions are stored on the server side.\nCookies can't hold multiple variables, on the other hand, Session can hold multiple variables.\nYou can manually set an expiry for a cookie, while session only remains active as long as browser is open.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "45) Write syntax to open a file in PHP?",
        "answer": "PHP fopen() function is used to open file or URL and returns resource. It accepts two arguments: $filename and $mode.\nSyntax:\nresource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )  \nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "46) How to read a file in PHP?",
        "answer": "PHP provides various functions to read data from the file. Different functions allow you to read all file data, read data line by line, and read data character by character.\nPHP file read functions are given below:\nfread()\nfgets()\nfgetc()\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "47) How to write in a file in PHP?",
        "answer": "PHP fwrite() and fputs() functions are used to write data into file. To write data into a file, you need to use w, r+, w+, x, x+, c or c+ mode.\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "48) How to delete file in PHP?",
        "answer": "The unlink() function is used to delete a file in PHP.\nbool unlink (string $filename)      \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "49) What is the method to execute a PHP script from the command line?",
        "answer": "You should just run the PHP command line interface (CLI) and specify the file name of the script to be executed as follows.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "50) How to upload file in PHP?",
        "answer": "The move_uploaded_file() function is used to upload file in PHP.\nbool move_uploaded_file ( string $filename , string $destination )    \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "51) How to download file in PHP?",
        "answer": "The readfile() function is used to download the file in PHP.\nint readfile ( string $filename )     \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "52) How can you send email in PHP?",
        "answer": "The mail() function is used to send email in PHP.\n\nbool mail($to,$subject,$message,$header);    \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "53) How do you connect MySQL database with PHP?",
        "answer": "There are two methods to connect MySQL database with PHP. Procedural and object-oriented style.\nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "54) How to create connection in PHP?",
        "answer": "The mysqli_connect() function is used to create a connection in PHP.\nresource mysqli_connect (server, username, password)       \nMore Details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "55) How to create database connection and query in PHP?",
        "answer": "Since PHP 4.3, mysql_reate_db() is deprecated. Now you can use the following 2 alternatives.\nmysqli_query()\nPDO::_query()\nMore details...",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "56) How can we increase execution time of a PHP script?",
        "answer": "By default, the maximum execution time for PHP scripts is set to 30 seconds. If a script takes more than 30 seconds, PHP stops the script and returns an error.\nYou can change the script run time by changing the max_execution_time directive in the php.ini file.\nWhen a script is called, set_time_limit function restarts the timeout counter from zero. It means, if default timer is set to 30 sec, and 20 sec is specified in function set_time_limit(), then script will run for 45 seconds. If 0sec is specified in this function, script takes unlimited time.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "57) What are the different types of errors in PHP?",
        "answer": "There are 3 types of error in PHP.\nNotices:These are non-critical errors. These errors are not displayed to the users.\nWarnings:These are more serious errors, but they do not result in script termination. By default, these errors are displayed to the user.\nFatal Errors:These are the most critical errors. These errors may cause due to immediate termination of script.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "58) How to stop the execution of PHP script?",
        "answer": "The exit() function is used to stop the execution of PHP script.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "59) What are the encryption functions in PHP?",
        "answer": "CRYPT() and MD5()",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "60) What is htaccess in PHP?",
        "answer": "The .htaccess is a configuration file on Apache server. You can change configuration settings using directives in Apache configuration files like .htaccess and httpd.conf.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "The PHP explode() function breaks a string into an array.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "",
        "answer": "The PHP split() function splits string into an array by regular expression.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "63) How can we get IP address of a client in PHP?",
        "answer": "$_SERVER[\"REMOTE_ADDR\"];",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "64) What is the meaning of a Persistent Cookie?",
        "answer": "A persistent cookie is permanently stored in a cookie file on the browser's computer. By default, cookies are temporary and are erased if we close the browser.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "65) What is the use of the function 'imagetypes()'?",
        "answer": "imagetypes() gives the image format and types supported by the current version of GD-PHP.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "66) What are include() and require() functions?",
        "answer": "The Include() function is used to put data of one PHP file into another PHP file. If errors occur, then the include() function produces a warning but does not stop the execution of the script, and it will continue to execute.\nThe Require() function is also used to put data of one PHP file to another PHP file. If there are any errors, then the require() function produces a warning and a fatal error and stops the script.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "67) What is Cookies? How to create cookies in PHP?",
        "answer": "A cookie is used to identify a user. A cookie is a little record that the server installs on the client's Computer. Each time a similar PC asks for a page with a program, it will send the cookie as well. With PHP, you can both make and recover cookie value.\nSome important points regarding Cookies:\nCookies maintain the session id generated at the back end after verifying the user's identity in encrypted form, and it must reside in the browser of the machine\nYou can store only string values not object because you can't access any object across the website or web apps\nScope: - Multiple pages.\nBy default, cookies are temporary and transitory cookie saves in the browser only.\nBy default, cookies are URL particular means Gmail isn't supported in Yahoo and the vice versa.\nPer site 20 cookies can be created in one website or web app\nThe Initial size of the cookie is 50 bytes.\nThe Maximum size of the cookie is 4096 bytes.",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "68) What is the Importance of Parser in PHP?",
        "answer": "PHP parser parses the PHP developed website from the opening to the closing tag. Tags indicate that from where PHP code is being started and ended. In other words, opening and closing tags decide the scope of PHP scripting syntax of closing tag in PHP\n<?php syntax of opening tag in PHP\n?> syntax of closing tag in PHP",
        "reference": "javatpoint.com",
        "role": "php"
    },
    {
        "question": "69) How can we create a database using PHP and MySQL?",
        "answer": "The necessary steps to create a MySQL database using PHP are:\nEstablish a connection to MySQL server from your PHP script.\nIf the connection is successful, write a SQL query to create a database and store it in a string variable.\nExecute the query.",
        "reference": "javatpoint.com",
        "role": "php"
    }
]