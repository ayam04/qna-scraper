[
    {
        "question": "1. What is JIRA?",
        "answer": "JIRA is used to assist you in keeping track of everything that needs to be done for your project. You are able to create issues (tasks, bugs, etc.), distribute them to team members, monitor their development, and specify deadlines.\nJIRA also comes with a number of reporting tools that may show you how your project is developing and point out any areas that need improvement.\nJIRA can be used to track the following things:\nPotential bugs or errors\nNew features that should be updated\nUser stories that need to be put into practice",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "2. What are the benefits of using JIRA?",
        "answer": "Here are a few advantages to utilizing JIRA:\nYou can monitor tasks and problems with it: JIRA makes it simple to establish issues and tasks, designate team members to complete them, and monitor their advancement. You can stay focused and organized by doing this.\nIt helps in workflow automation: JIRA’s ability to automate workflows can help you save time and effort. For instance, you may programmatically create a new issue whenever a flaw is submitted.\nReporting tools: JIRA has many reporting options that can be used to track the development of your project and help you identify any areas that need improvement.\nGet 100% Hike!\nMaster Most in Demand Skills Now!\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "3. What are the three agile methodologies supported by JIRA?",
        "answer": "JIRA, a versatile project management tool, supports three prominent Agile methodologies, enhancing project efficiency and adaptability.\nFirstly, Scrum, characterized by iterative development cycles called sprints, prioritizes tasks from a product backlog.\nSecondly, Kanban focuses on continuous flow, visualizing work on a board, and minimizing bottlenecks.\nLastly, Extreme Programming (XP) promotes frequent software releases, emphasizing customer feedback and collaboration.\nJIRA empowers teams to smoothly implement these methodologies, providing customized workflows, backlog management, and real-time tracking, thereby streamlining Agile project management and facilitating rapid, customer-centric software development.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "4. Name some of the control programs with which JIRA integrates.",
        "answer": "Here are the names of control programs with which JIRA can integrate:\nVersion control systems: JIRA is compatible with a number of version control systems, including Git, GitHub, and Bitbucket. Teams can cooperate on development projects and track changes to code and other assets because of version control systems.\nContinuous integration and continuous delivery (CI/CD) tools: JIRA may be integrated with Jenkins and Bamboo, among other CI/CD systems. Through the automation of the build and deployment processes, teams are able to produce software more quickly.\nIssue tracking systems: Other issue tracking tools like Bugzilla and MantisBT can integrate with JIRA. Teams may track issues across many platforms and work together on feature requests and bug solutions.\nProject management tools: JIRA may be integrated with additional project management applications like Asana and Trello. As a result, teams can work together on projects and monitor progress across several systems.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "5. What is the difference between JIRA and JIRA Core?",
        "answer": "Here are the differences between JIRA and JIRA Core:\nParameters JIRA JIRA Core\nPurpose Primarily for software development, including agile project management, bug tracking, and release planning. Designed for business teams and non-technical users to manage tasks, projects, and processes.\nFeatures Offers agile boards, scrum and kanban project templates, extensive integration with development tools, and reporting for software-specific tasks. Lacks agile-specific features, focusing on general project management with basic task tracking and workflow customization.\nUser Base Targeted at software development teams and IT professionals. Designed for broader use, serving business teams across various industries.\nCustomization Allows customization for software development processes, workflows, and issue types. Provides flexibility to create custom workflows and issue types for diverse business needs.\nPricing Typically more expensive due to software-specific features. Generally more cost-effective for non-technical teams with a simpler feature set.\nAdd-ons Supports a wide range of software development add-ons from the Atlassian Marketplace. Fewer add-ons are available, primarily for business process improvement.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "6. Describe the JIRA workflow and its components.",
        "answer": "An issue travels through a set of statuses and transitions known as a Jira workflow throughout its existence. Every workflow is made up of statuses and transitions that correspond to organizational work processes.\nThere are three primary categories of statuses in JIRA:\nOpen: A problem’s initial status is “open.” When a problem is first developed, it is regarded as open. Work on the issue is ongoing, as evidenced by its status.\nClosed: This status denotes the conclusion of an issue.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "7. What is a JIRA Query Language (JQL), and why is it used?",
        "answer": "JQL, or JIRA Query Language, can help you look for bugs. Issues can be located using JQL queries based on their status, priority, assignee, and other factors.\nJQL is a basic language that is straightforward to pick up. Since JQL is based on the SQL language, those who are already familiar with SQL will find it easy to learn.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "8. How do you create a sprint in JIRA?",
        "answer": "The steps for creating a sprint in JIRA are as follows:\nVisit the Backlog page for the project.\nChoose Create Sprintfrom the drop-down option.\nPlease give a name to your sprint.\nSelect the start and end dates for your sprint.\nChoose Createfrom the menu.\nOnce a sprint has been established, issues from the backlog can be dropped into it. You may also create issues by choosing the desired issue type and pressing the create issue button.\nTo start a sprint, you must click the Start Sprint button. Every issue in the sprint will now have the status In Progress.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "9. What do you mean by agile board?",
        "answer": "An agile board is generally referred to as a visual tool that is used in agile project management methodologies for tracking and monitoring work items. It is also known as a kanban or scrum board, which provides a visual representation and helps in organizing tasks throughout the project.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "10. What is an event in JIRA?",
        "answer": "In JIRA, an event gives information about the status, the default template, the notification scheme, and the workflow transition post-function associations for the event. The events are classified into the following categories:\nA System event (JIRA-defined events)\nCustom events (User-defined events)\n\nIntermediate Level JIRA Interview Questions\nNow, let’s discuss some of the JIRA admin interview questions",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "11. How can I integrate JIRA with other tools?",
        "answer": "Integrating JIRA with other tools is key for facilitating project management and enhancing productivity. To achieve this, first identify the specific tools you wish to integrate, such as Confluence, Slack, or Trello. JIRA offers a rich ecosystem of plugins and connectors, allowing smooth connectivity with these platforms.\nUtilize these plugins to sync data, automate workflows, and maintain real-time communication between systems. Also, JIRA’s robust API allows you to develop custom integrations tailored to your unique requirements. By integrating JIRA with complementary tools, you can optimize collaboration, data sharing, and overall project efficiency.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "12. What are the different types of permissions that can be assigned to users in JIRA?",
        "answer": "Global permissions, project permissions, and issue permissions are the three categories of permissions that can be given to users in JIRA.\nGlobal permissions: Global permissions are applied across the board, not only to specific projects, in the JIRA program. Users’ ability to start new projects, see the issue navigator, and manage users are all governed by these rights.\nMost common global permissions:\nAdminister JIRA\nCreate new projects.\nView other users\nManage issue security\nProject Permissions: Specific projects are subject to project permits. Who can see the project, create issues, edit issues, and assign issues is all governed by these rights.\nView project\nCreate issues\nEdit issues\nClose issues\nIssue permissions are specific to each issue. Who can read an issue, comment on it, and modify its status.\nView issue\nEdit issue\nComment on the issue\nAssign issue",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "13. Define the elements of a schema in JIRA.",
        "answer": "A JIRA schema is a group of data used to keep track of resources, configuration items, and assets. Object types, objects, attributes, icons, references, and statuses are just a few examples of the distinctive information that each schema contains.\nA schema consists of the following elements:\nObject types: The various types of entities that can be tracked in a schema are known as object types. A schema might have object types for servers, users, and apps, for instance.\nObjects: Individual entities that are tracked in a schema are referred to as objects. As an illustration, objects for Server1, User1, and Application1 might be present in a schema.\nAttributes: The properties of an object are its attributes. An object might include characteristics for its name, description, and status, for instance.\nIcons: In JIRA, objects are represented by pictures called icons. The connections between items are known as references. An object can, for instance, refer to another object that serves as its parent.\nReferences: The connections between items are known as references. An object can, for instance, refer to another object that serves as its parent.\nStatuses: Statuses refer to the various states in which an object may be. An object might have the statuses Active’,‘Inactive, and Deprecated,, for instance.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "14. What is cloning an issue in JIRA?",
        "answer": "Cloning an issue in JIRA refers to the process of creating an identical duplicate of an existing issue within the project. This feature of JIRA serves as a valuable tool for efficient project management and issue tracking. When an issue is cloned, all relevant information, including its summary, description, comments, attachments, and associated metadata, is replicated.\nThis allows teams to manage similar or recurring issues without the need to recreate them from scratch, saving time and ensuring consistency. Cloning is particularly useful for handling tasks like bug fixes, feature requests, or recurring problems, streamlining workflows and promoting organized project management within JIRA.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "15. How are user stories created in JIRA for an agile project?",
        "answer": "A common method for gathering requirements for agile projects is through user stories. Typically, they are written from the user’s point of view and focus on what the user wants to accomplish rather than how to do it.\nYou can take the following actions to create a user story in JIRA:\nNavigate to the project where the user story will be created.\nSelect Createfrom the menu.\nFrom the list of issue types, pick User Story.\nFor the user story, enter a summary.\nWrite a description of the user story in the Description field. The following details ought to be in the description:\nAs a user persona, the user narrative will benefit.\nI desire—this is the user story’s objective.\nSo that is The benefit of achieving the goal.\nSpecify the requirements that must be satisfied for the user story to be deemed complete in the acceptance criteria section.\nAdd any additional fields you believe are pertinent to the user story in the Additional Fields section.\nSelect Createfrom the menu.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "16. How can I report on issues in JIRA?",
        "answer": "There are two ways to report on issues in JIRA:\nUse the built-in reporting features:\nNavigate to JIRA’s Reports page.\nChoose the report you want to produce. By choosing the fields you want to include, the filters you want to use, and the time period you want to cover, you can personalize the report.\nPublish the report.\nUse a third-party reporting tool.\nYou have access to a variety of third-party reporting tools to create reports on issues in JIRA.\nCompared to the built-in reporting features, these tools offer more features and allow for greater customization.\nSelect a reporting solution from a third party that has the features you require.\nUse the third-party reporting tool to produce reports.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "17. What is the role of validators in JIRA?",
        "answer": "JIRA uses validators to verify that every input given to a transition is correct before the transition is carried out. The information received on the transition screen from the user might be included as input. If a validator fails, the problem is not moved to the transition’s destination status, the post functions are not run, and the failed validator’s error message is displayed.\nThere are many different things that validators can check for, including:\nIf a required field has been completed.\nIf a field’s value falls inside a predetermined range.\nIf a field’s value complies with a regular expression.\nThe uniqueness of a field’s value",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "18. Explain the three color indicators to show time spent in JIRA and their significance.",
        "answer": "JIRA uses three different colors, orange, blue, and green, to indicate how much time has been spent on a certain problem. To view this data, navigate to the ‘Time Tracking’ area.\nBlue: The Original estimate is displayed using the color blue. This is an estimation of how long it will take to solve a problem. You can see the word ‘Estimated’ in this field.\nOrange: The orange color represents the amount of time left to solve a problem. ‘Remaining’ is how this field is shown.\nGreen: The time actually invested in resolving the issue to this point is shown by the color green. You can view this field displayed as logged.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "19. What are some of the common JIRA add-ons?",
        "answer": "Here are some of the most common JIRA add-ons:\nAutomation: In JIRA, repetitive processes like adding new issues, assigning issues, and updating issue statuses may all be automated.\nScriptRunner: JIRAenables you to create personalized scripts to automate even more difficult operations.\nBigGantt: This allows you to see your JIRAissues displayed in a Gantt chart, which is useful for project planning and tracking.\neazyBI Reports and Charts for JIRAenables you to produce unique reports and graphs using data from JIRA.\nBigPicture is a project management add-on that offers a more comprehensive picture of your projects, including their dependencies, hazards, and resources. This can assist you in better comprehending your tasks and deciding how to allocate your resources.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "20. What are the issue types in a scrum project in JIRA?",
        "answer": "Here are the issue types that are commonly used in a scrum project in JIRA:\nStory: A user narrative, or requirement from the client, is represented by a story. Stories are frequently used to monitor the development of features or functionalities.\nTask: A task is an item of work that must be completed. The progress of smaller, more specific work items is often monitored using tasks.\nBug: An error in the software is referred to as a bug. Bugs are often used to monitor how well flaws are being fixed.\nSubtask: A subtask is a piece of work that must be done in order to finish a task. Subtasks are frequently used to monitor the advancement of bigger, trickier projects.\nEpic: An epic is a substantial, intricate work that is composed of numerous stories, chores, and bugs. Epics are frequently used to monitor the development of significant features or functionalities.\n\nAdvanced Level JIRA Interview Questions\nLet’s discuss some of the JIRA interview questions for experienced",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "21. How can you automate tasks and workflows in JIRA using automation rules and triggers? Provide examples of scenarios where automation can be beneficial.",
        "answer": "Automating tasks and workflows in JIRA can significantly enhance efficiency and reduce manual overhead. JIRA offers automation rules and triggers to streamline processes. Automation Rules are predefined conditions and actions that initiate when specific criteria are met. Triggers are events that prompt these rules.\nFor instance, you can automate the assignment of issues to specific team members based on issue type, priority, or project. When a high-priority bug is reported, an automation rule can assign it to the appropriate developer automatically.\nAutomation can also benefit in SLA management. If an issue is nearing its resolution deadline, a trigger can escalate it to a higher priority, ensuring timely resolution and customer satisfaction. Moreover, repetitive administrative tasks like status transitions or notifications can be automated. For example, an automation rule can transition an issue to In Review status when all subtasks are completed.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "22. How can you automate tasks and workflows in JIRA using automation rules and triggers? Provide examples of scenarios where automation can be beneficial.",
        "answer": "To set up and manage a JIRA data center, you will need to:\nSet-up JIRA on your personal servers.\nConfigure JIRA to match your unique requirements.\nMaintain ongoing control over JIRA, including security, upgrades, and backups.\nUsing a JIRA data center has a number of advantages for larger businesses::\nMore control: The environment, including the hardware, software, and configuration, is more under your control, as was already established. For businesses with particular security or compliance needs, this may be crucial.\nScalability: The JIRA Data Center was created with scalability in mind to fulfill the requirements of larger organizations. As a result, you can increase the number of users and data without worrying about performance or availability.\nSecurity: Data security is better under your control because the JIRAData Center is housed on your own infrastructure. For organizations that manage sensitive data, this may be crucial.\nPerformance: For large organizations with lots of data, JIRAData Center may perform better than the cloud-based version of JIRA.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "23. Explain the concept of JIRA gadgets and dashboards. How can you create custom dashboards and add gadgets to provide visualizations and insights?",
        "answer": "JIRA dashboards and gadgets are tools for tracking and visualizing your JIRA data. Small, standalone widgets called gadgets show data from JIRA like issue counts, charts, and tables. Dashboards are customizable pages that can present the data that is most essential to you. They can contain many gadgets.\nTo create a custom dashboard:\nGo to the Dashboards page.\nClick Create a new dashboard.\nGive your dashboard a name and description.\nAdd gadgets to your dashboard.\nSave your dashboard.\nYou must: in order to add gadgets to your dashboard.\nSelect  Add Device.\nChoose the device you want to add.\nSet the device’s settings.\nSelect Add.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "24. What considerations and steps should be taken during the migration process?",
        "answer": "Here are some considerations and steps that should be taken during the migration process from the JIRA Server to the JIRA Cloud:\nData migration: This is the most crucial factor since you need to make sure that all of your data is successfully migrated. You can use a variety of tools, like the JIRA Cloud Migration Assistant, to assist you with data migration.\nUser migration: In order to use JIRA Cloud, your users must be moved. Creating new user accounts and adding them to the appropriate groups are included in this.\nConfiguration: JIRA Cloud must be set upto correspond with your current configuration. Things such as problem categories, workflows, and permissions are included in this.\nIntegrations: You must ensure that any integrations you have with other programs are compatible with JIRA\nSteps:\nPlan the migration: This involves identifying the data that must be moved as well as the tools and materials you will require.\nBackup of your data: You must make a backup of your data in case something goes wrong during the migration process.\nData migration is the process of moving your information from JIRAServer to JIRA Cloud.\nOnce the data has been transferred, you should test the migration to ensure everything is operating as planned.\nGo live: Once the migration has been completed to your satisfaction, you can start using JIRA Cloud.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "25. How can you ensure data security and privacy in JIRA?",
        "answer": "Any organization using JIRA must prioritize data security and privacy. You may aid in defending your JIRA instance against unauthorized access, data breaches, and other security concerns by adhering to these security best practices.\nUsing two-factor authentication and strong passwords is the most fundamental security precaution you can take to safeguard your JIRA To increase security, make sure your passwords are strong and distinctive, and turn on two-factor authentication.\nUpdate your JIRA software frequently. JIRA receives security updates from Atlassian on a regular basis. In order to be protected against the most recent security flaws, it’s critical to keep your JIRA software updated.\nUse a firewall. A firewall can assist in preventing unauthorized access to your JIRA Make sure your firewall is set up to only allow traffic from trusted sources and to block all other incoming traffic.\nEncrypt your data: Your data should be encrypted if you are storing sensitive information in JIRA. This will shield your information in the event of a data breach.\nEncrypt your data: Only authorized users should be able to access JIRA, which should be restricted. JIRA’s permission system allows you to limit access to particular projects, issues, and fields.\nBackup your data: Creating a copy of your JIRA data is a smart practice at all times. This will assist you in recovering your data in the event of a disaster or data breach.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "26. State the difference between Bugzilla and JIRA?",
        "answer": "Bugzilla and JIRA are both issue-tracking systems used in software development, but they differ in several key aspects. Bugzilla is an open-source tool primarily designed for bug tracking, while JIRA, developed by Atlassian, is a commercial tool that offers broader project management capabilities, including issue tracking.\n \nParameters Bugzilla JIRA\nScope Primarily bug tracking Comprehensive project management with issue tracking\nCustomization Limited customization options Highly customizable to adapt to diverse needs\nUser-Friendly Interface Less intuitive interface More user-friendly and intuitive\nIntegration Limited integrations, requires effort Seamless integration with Atlassian products\nLicensing Open-source and free Requires a paid license, potentially costly",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "27. Explain labeling and linking issues in JIRA.",
        "answer": "Labeling, often referred to as ‘tagging’, allows users to categorize issues with descriptive keywords or phrases. These labels serve as metadata, providing a quick and efficient way to classify, search for, and organize issues. Labels can denote various attributes, such as priority, type, or department, making it easier to locate specific issues within a project or across multiple projects.\nFor example, labels like ‘high-priority’ or ‘bug’ help in swiftly identifying critical issues requiring immediate attention. Effective labeling fosters enhanced organization, communication, and prioritization within teams.\nLinking issues in JIRA establishes connections between related tasks, stories, or bugs. This functionality promotes comprehensive project traceability and helps manage complex dependencies. There are several types of issue links in JIRA, including ‘blocks’, ‘relates to’, and ‘is duplicated by’. These links enable teams to visualize and understand how different issues are interconnected, ensuring that progress on one issue doesn’t hinder or delay others. For instance, if Issue A is blocking Issue B, this linkage alerts team members to the fact that resolving Issue A is crucial before tackling Issue B.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "28. How does the service desk work?",
        "answer": "A service desk operates as a key component within an organization’s IT infrastructure, functioning as a central point of contact for addressing user issues, inquiries, and technical support needs. Its primary objective is to ensure the seamless delivery of IT services, boost productivity, and enhance user satisfaction.\nThe service desk workflow typically begins when users report their IT-related concerns, either through phone, email, or an online portal. These requests are then logged, categorized, and assigned to dedicated support personnel, commonly referred to as technicians or agents. These skilled professionals utilize a robust knowledge base and diagnostic tools to analyze and resolve issues efficiently.\nEffective communication is paramount throughout the process, as the service desk keeps users informed about the progress of their requests. Furthermore, service desks often follow Information Technology Infrastructure Library (ITIL) best practices to ensure consistent service quality and adherence to predefined service level agreements (SLAs).",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "29. How can you modify multiple bulk issues?",
        "answer": "To modify multiple bulk issues efficiently, most issue tracking systems, including JIRA, offer the following steps:\nSearch and filter: Begin by creating a search query or filter that identifies the set of issues you want to modify. This can be based on various criteria such as issue type, status, or custom fields.\nBulk edit: Use the bulk edit feature, which allows you to select multiple issues from the search results. This feature typically provides options to modify fields like assignee, status, priority, or custom fields.\nReview and confirm: Carefully review the changes you intend to make, ensuring accuracy and consistency.\nExecute: Apply the modifications to the selected issues in a single operation.\nAudit and verification: After the bulk edit, verify that the changes have been correctly applied to all relevant issues.",
        "reference": "intellipaat.com",
        "role": "jira"
    },
    {
        "question": "1. Explain the workflow of Jira.",
        "answer": "Since Jira is used to track the issue and transitions in the development life cycle of the software, the workflow is like a set of software-related activities which help in performing these operations. The link between these 2 states is called a transition. The issue moves from one transition state to another state. The status is used to define the nature of the work that is completed by the tester. In the JIRA workflow, the important phases that occur are given below: To Do\nIn progress\nFinally done To Do In progress Finally done  ",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "2. What are some of the benefits of using Jira?",
        "answer": "The following are some of the benefits of using Jira: It is easily customizable and extensible.\nIt runs almost anywhere as it is platform-independent. It is recognized by quite a few well-known companies.\nWe can get the latest update on the progress of projects via Jira.\nIt has an upfront and fair licensing policy. It is easily customizable and extensible. It runs almost anywhere as it is platform-independent. It is recognized by quite a few well-known companies. We can get the latest update on the progress of projects via Jira. It has an upfront and fair licensing policy.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "3. What is the use of a Dashboard in Jira?",
        "answer": "The dashboard is the first display that we see once we login to the Jira. The Jira admin can change the view of the dashboard. Along with this, they can also change the things that are visible on the dashboard. A dashboard shows tools and applications that assist the team members to track the progress of a project. The dashboard also contains useful information such as the issues assigned to the user that is logged in along with the user's activity information.  ",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "4. What are the agile methodologies supported by Jira?",
        "answer": "Jira Software supports the following agile methodologies: Scrum and Kanban. Scrum: Scrum is an agile methodology in which the development team works in an iterative manner to complete a given project. Every sprint or iteration has some set scope and timeline for the project. For software development projects, Scrum is most suitable.\nKanban: Kanban is an agile methodology that focuses on just-in-time delivery. It accomplishes this by visualizing the workflow and the tasks in progress. Kanban is mostly suitable for operation teams. Scrum: Scrum is an agile methodology in which the development team works in an iterative manner to complete a given project. Every sprint or iteration has some set scope and timeline for the project. For software development projects, Scrum is most suitable. Scrum: Kanban: Kanban is an agile methodology that focuses on just-in-time delivery. It accomplishes this by visualizing the workflow and the tasks in progress. Kanban is mostly suitable for operation teams. Kanban:",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "5. What do you mean by Agile board?",
        "answer": "The main user interface that an end-user will use on a daily basis for projects is called an agile board. The agile board allows us to visualize the various tasks in a project and also the available steps in the workflow of the project. Along with that, it also gives us an interactive way to transition tasks through the workflow. There are also additional features that provide a variety of functionalities depending on the type of board we are using. For instance, some boards may allow us to provide visual cues to highlight potential bottlenecks, manage a backlog of features, and a lot more.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "6. What are the issue types in a Scrum project in Jira?",
        "answer": "An individual unit of work in Jira is referred to as an issue. This issue could be a unit such as a story or an epic. Every issue has a field called issue type, which represents the type and use of the issue. For instance, in a Scrum project, one would have the following types of issues by default: Story: A story in Jira represents a single feature that is to be implemented. It is generally used in order to get the requirements from the end user's perspective. For this purpose, stories are often written in non-technical language. These are used for focusing on the end results of the feature.\nEpic: An epic means a big user story. This represents that the story has not been broken down into smaller and finer requirements. In Jira, epics are mostly used to define the \"theme\" for various stories that will be part of it, along with the modules or the major components in a big development project.\nBug: A bug in Jira represents a problem or a defect that needs to be fixed in a given product.\nTask: This represents a generic task that is neither a bug nor a story, but it needs to be completed. Story: A story in Jira represents a single feature that is to be implemented. It is generally used in order to get the requirements from the end user's perspective. For this purpose, stories are often written in non-technical language. These are used for focusing on the end results of the feature. Story Epic: An epic means a big user story. This represents that the story has not been broken down into smaller and finer requirements. In Jira, epics are mostly used to define the \"theme\" for various stories that will be part of it, along with the modules or the major components in a big development project. Epic Bug: A bug in Jira represents a problem or a defect that needs to be fixed in a given product. Bug Task: This represents a generic task that is neither a bug nor a story, but it needs to be completed. Task",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "7. Explain the configuration of project template in Jira.",
        "answer": "Project templates allow us to create new projects based on certain predefined settings. This is important so that when the project is created, it will have all the necessary configurations set for us, including the following: Issue type scheme: An issue type scheme that contains only the relevant issue types for the selected template, such as stories and epics for Scrum.\nWorkflow: A specially designed workflow that makes it easier to work with the issues on an agile board.\nScreens: A set of screens that contain the necessary fields for working with agile, such as epic links to link stories to epics, and sprint for when tasks are added to Scrum sprints.\nAgile board: If the template is either Scrum or Kanban, an agile board is dedicated to the new project. Issue type scheme: An issue type scheme that contains only the relevant issue types for the selected template, such as stories and epics for Scrum. Issue type scheme Workflow: A specially designed workflow that makes it easier to work with the issues on an agile board. Workflow Screens: A set of screens that contain the necessary fields for working with agile, such as epic links to link stories to epics, and sprint for when tasks are added to Scrum sprints. Screens Agile board: If the template is either Scrum or Kanban, an agile board is dedicated to the new project. Agile board",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "8. What are some of the popular add-ons for Jira?",
        "answer": "Following are some of the popular add-ons for JIRA: JIRA Toolkit Plugin\nJIRA Charting Plugin\nPortfolio for JIRA\nSuites utilities for JIRA\nZephyr for JIRA – Test Management\nScriptRunner for JIRA\nAtlassian REST API Browser\nTempo Timesheets for JIRA\nJIRA Misc Workflow Extensions JIRA Toolkit Plugin JIRA Charting Plugin Portfolio for JIRA Suites utilities for JIRA Zephyr for JIRA – Test Management ScriptRunner for JIRA Atlassian REST API Browser Tempo Timesheets for JIRA JIRA Misc Workflow Extensions",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "9. What is the role of validators in Jira?",
        "answer": "Validators check that any input to the transition by a user is valid before the transition is performed. The role of validators in JIRA is to verify exactly this. The issue will not progress to the destination status of the transition in case a validator fails.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "10. What is an Event in Jira?",
        "answer": "In Jira, an event gives information about the status, the default template and the notification scheme and workflow transition post function associations for the event. Basically, the events are classified into these two categories: A System event (Jira defined events)\nCustom event (User-defined events) A System event (Jira defined events) Custom event (User-defined events)",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "1. What are the report types that are generated in Jira?",
        "answer": "In Jira, there are a number of reports generated that are used to showcase different project statistics throughout the entire life cycle of the project. There are general reports available for analyzing issues in Jira. Along with this, there are also some reports for Scrum and Kanban projects. The general reports available for analyzing the issues includes: general reports Time Tracking Report\nVersion Workload Report\nWorkload Pie chart Report\nCreated vs Resolved issue Report\nAverage Age Report\nUser Workload Report\nResolution Time Report\nPie Chart Report\nRecently created Issue Report Time Tracking Report Version Workload Report Workload Pie chart Report Created vs Resolved issue Report Average Age Report User Workload Report Resolution Time Report Pie Chart Report Recently created Issue Report For Scrum projects, the following types of reports can be generated: Scrum projects Sprint Report\nVersion Report\nControl chart\nVelocity chart\nCumulative Flow diagram\nRelease Burndown\nBurndown chart\nEpic Report Sprint Report Version Report Control chart Velocity chart Cumulative Flow diagram Release Burndown Burndown chart Epic Report For Kanban projects, the following types of reports can be generated: Kanban projects Control chart\nCumulative Flow diagram Control chart Cumulative Flow diagram In order to generate reports for your project, the steps given below can be followed: Go to the desired ‘project dashboard’ for which you want to generate a report\nFrom the left-hand side click on the Reports tab to view the different types of reports.\nClick on the Switch report button to view the different reports. Go to the desired ‘project dashboard’ for which you want to generate a report From the left-hand side click on the Reports tab to view the different types of reports. Click on the Switch report button to view the different reports.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "2. How can we modify a bulk issues?",
        "answer": "In order to modify a bulk issue, we need to use the bulk change options - tool menu - then select all issues on the current page that can be used for the bulk operations. We get the following details when we perform bulk operations: Workflow transition\nDelete\nMove\nEdit Workflow transition Delete Move Edit",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "3. Explain the three colour indicators to show time spent in Jira and their significance.",
        "answer": "In Jira, for a particular issue, three colours namely Blue, Green, and Orange are used to show how much time is spent on that particular issue. You can go to the section of ‘Time Tracking’ to view this information. The significance of each colour is as follows: Blue: The blue colour is used to show the ‘Original Estimate’. This is the estimate of time to be spent in resolving an issue. You can see this field shown as ‘Estimated’.\nOrange: The orange colour is for the time left to resolve an issue. You can see this field shown as ‘Remaining’.\nGreen: The green colour shows the actual time that has been spent in solving given the issue till now. You can see this field shown as ‘logged’. Blue: The blue colour is used to show the ‘Original Estimate’. This is the estimate of time to be spent in resolving an issue. You can see this field shown as ‘Estimated’. Blue Orange: The orange colour is for the time left to resolve an issue. You can see this field shown as ‘Remaining’. Orange Green: The green colour shows the actual time that has been spent in solving given the issue till now. You can see this field shown as ‘logged’. Green  ",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "4. What are some of the configuration fields of an agile board?",
        "answer": "The following are some of the configuration fields of an agile board: Field Description\nBoard name This gives the name of the agile board.\nAdministrators Administrators are users who can configure the settings of the agile board. We can add more administrators by either selecting the users directly or by selecting a group.\nSaved Filter\nThis controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project.\nYou can select a different filter to use or click on the Edit Filter Query link to change the current filter.\nShares Access to the filter is controlled by this field. In practice, the filter should be shared with the same users who have access to the board.\nFilter Query The filter query shows us the actual filter query that is used by the Saved Filter.\nRanking This shows whether the ranking is currently enabled. We should have the ranking enabled in order to rank issues and create sprints.\nProjects in board These are the projects that are a part of the board. These projects are automatically determined on the basis of the Saved Filter that is used by the board. Field Description\nBoard name This gives the name of the agile board.\nAdministrators Administrators are users who can configure the settings of the agile board. We can add more administrators by either selecting the users directly or by selecting a group.\nSaved Filter\nThis controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project.\nYou can select a different filter to use or click on the Edit Filter Query link to change the current filter.\nShares Access to the filter is controlled by this field. In practice, the filter should be shared with the same users who have access to the board.\nFilter Query The filter query shows us the actual filter query that is used by the Saved Filter.\nRanking This shows whether the ranking is currently enabled. We should have the ranking enabled in order to rank issues and create sprints.\nProjects in board These are the projects that are a part of the board. These projects are automatically determined on the basis of the Saved Filter that is used by the board. Field Description Field Description Field Description Board name This gives the name of the agile board.\nAdministrators Administrators are users who can configure the settings of the agile board. We can add more administrators by either selecting the users directly or by selecting a group.\nSaved Filter\nThis controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project.\nYou can select a different filter to use or click on the Edit Filter Query link to change the current filter.\nShares Access to the filter is controlled by this field. In practice, the filter should be shared with the same users who have access to the board.\nFilter Query The filter query shows us the actual filter query that is used by the Saved Filter.\nRanking This shows whether the ranking is currently enabled. We should have the ranking enabled in order to rank issues and create sprints.\nProjects in board These are the projects that are a part of the board. These projects are automatically determined on the basis of the Saved Filter that is used by the board. Board name This gives the name of the agile board. Board name This gives the name of the agile board. Administrators Administrators are users who can configure the settings of the agile board. We can add more administrators by either selecting the users directly or by selecting a group. Administrators Administrators are users who can configure the settings of the agile board. We can add more administrators by either selecting the users directly or by selecting a group. Saved Filter\nThis controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project.\nYou can select a different filter to use or click on the Edit Filter Query link to change the current filter. Saved Filter This controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project.\nYou can select a different filter to use or click on the Edit Filter Query link to change the current filter. This controls which issues will be included on the agile board. If you have created your board using the agile templates, then the filter here is automatically created for you to include all issues in the project. You can select a different filter to use or click on the Edit Filter Query link to change the current filter. Shares Access to the filter is controlled by this field. In practice, the filter should be shared with the same users who have access to the board. Shares Access to the filter is controlled by this field. In practice, the filter should be shared with the same users who have access to the board. Filter Query The filter query shows us the actual filter query that is used by the Saved Filter. Filter Query The filter query shows us the actual filter query that is used by the Saved Filter. Ranking This shows whether the ranking is currently enabled. We should have the ranking enabled in order to rank issues and create sprints. Ranking This shows whether the ranking is currently enabled. We should have the ranking enabled in order to rank issues and create sprints. Projects in board These are the projects that are a part of the board. These projects are automatically determined on the basis of the Saved Filter that is used by the board. Projects in board These are the projects that are a part of the board. These projects are automatically determined on the basis of the Saved Filter that is used by the board.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "5. For an Agile project, how are user stories created in Jira?",
        "answer": "For an Agile project, the user stories are created in the following way in Jira: Issue type -> Epic and Issue type –> Story linked to it. To do so, on the ‘Create Issue’ page, go to “Configure Fields”. Then select the “Epic Link” field to be included in the issue creation screen.\nAlternatively, you can also have a product backlog by creating one main User story and having multiple sub-tasks under it. Issue type -> Epic and Issue type –> Story linked to it. To do so, on the ‘Create Issue’ page, go to “Configure Fields”. Then select the “Epic Link” field to be included in the issue creation screen. Alternatively, you can also have a product backlog by creating one main User story and having multiple sub-tasks under it.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "6. What are some ways in which you can customize the agile board?",
        "answer": "As the administrator, we can further customize the agile board in the following ways: Scope of the agile board: This signifies what issues and projects will be added on the agile board.\nPermission of the agile board: This entails who will have access to the agile board.\nLayout of the agile board: This signifies the agile board's vertical columns and horizontal swimlanes.\nCustomized filters: These provide additional ways to filter out the content on the agile board. Scope of the agile board: This signifies what issues and projects will be added on the agile board. Scope of the agile board: Permission of the agile board: This entails who will have access to the agile board. Permission of the agile board: Layout of the agile board: This signifies the agile board's vertical columns and horizontal swimlanes. Layout of the agile board: Customized filters: These provide additional ways to filter out the content on the agile board. Customized filters:",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "7. After a transition is executed, what types of Post functions are carried out?",
        "answer": "After a transition is executed, the following types of Post functions are carried out: Create an event in order to trigger email notifications.\nAdd a comment to a given issue.\nUpdate the fields of an issue.\nFor an issue, generate the change history. Create an event in order to trigger email notifications. Add a comment to a given issue. Update the fields of an issue. For an issue, generate the change history.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "8. What all are included under change history for a given issue?",
        "answer": "For a particular issue, the change history section shows various activities of modifying any records. The change history displays information about the old and new field values in the case of the change in any field. This also includes data of the particular person who has made the change and also the time at which those changes were made. The change history has these records of the changes as given below: Issue field changes\nCreation and deletion of a given comment.\nFile attachment changes\nCreation and deletion of a given issue link.\nDeletion of a Worklog. Issue field changes Creation and deletion of a given comment. File attachment changes Creation and deletion of a given issue link. Deletion of a Worklog.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "9. Why are the issues in Jira labelled?",
        "answer": "The issues in Jira are labelled in order to categorize an issue within a particular section. This can help to easily search with the help of labels. Label for a given issue can be initially set at the time of creating the issue. It can also be edited within the issue.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "10. What does the Jira Schema consist of?",
        "answer": "The Jira Schema consists of the following: Notifications: This indicates what email someone receives when an issue is changed.\nWorkflows: This indicates which workflow is used for each issue type.\nPermissions: This indicates what changes can be made to an issue by someone.\nIssue types: This indicates what issue types like Bug, New Feature etc. can be used in a given Jira project.\nScreens: This indicates where the fields are displayed in an issue’s screen.\nField configurations: This is used to define which Field Configuration is used for each issue type. Notifications: This indicates what email someone receives when an issue is changed. Notifications: Workflows: This indicates which workflow is used for each issue type. Workflows: Permissions: This indicates what changes can be made to an issue by someone. Permissions: Issue types: This indicates what issue types like Bug, New Feature etc. can be used in a given Jira project. Issue types: Screens: This indicates where the fields are displayed in an issue’s screen. Screens: Field configurations: This is used to define which Field Configuration is used for each issue type. Field configurations:",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "11. How does a service desk work in Jira?",
        "answer": "In Jira, the service desk works in the following way: The client expresses a demand for the service agents through an entryway. This can also be done via email.\nThen, a service desk sees the demand in their Jira Service Desk line. They further investigate the issue.\nThe client and different members can use the entry or email to discuss about the demand with the assigned service desk agent, who works in the Jira Service Desk.\nFinally, the specialist finishes the task and the client demand is fulfilled. The client expresses a demand for the service agents through an entryway. This can also be done via email. Then, a service desk sees the demand in their Jira Service Desk line. They further investigate the issue. The client and different members can use the entry or email to discuss about the demand with the assigned service desk agent, who works in the Jira Service Desk. Finally, the specialist finishes the task and the client demand is fulfilled.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "12. What is a Kanban board in Jira?",
        "answer": "In Jira, when the prime focus of teams is to visualize the workflow and to manage the work in progress of the projects, Kanban boards are created. An important aspect of the Kanban board is that it is given in work mode as the work planning of the projects is not done yet. Following are the steps in order to create a Kanban board: Log In to the Jira app with your credentials and go to the dashboard section.\nSelect the option of ‘Create Project’, on the Project dropdown.\nThen, select ‘Kanban Software development’. After that click the Next button. Log In to the Jira app with your credentials and go to the dashboard section. Select the option of ‘Create Project’, on the Project dropdown. Then, select ‘Kanban Software development’. After that click the Next button.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "13. What do you mean by JQL?",
        "answer": "JQL stands for Jira Query language. It is an advanced explicit way to search for issues within Jira. This consists of a field, operator, value and keyword. It is quite a flexible and powerful way to search for issues. Jira Query language",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "14. What is Jira Core?",
        "answer": "Jira Core is a workflow management system. This allows us to create unique processes that suit our needs. Workflows are the root of the system, moving packets of work from one place to another. Jira Core allows us to make our workflow as easy or as complex as we need. It does this by giving us the freedom to concentrate on the work, and not on the process. The only constraints on your workflow are your processes.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "15. What can be configured for the Jira project and issue type?",
        "answer": "For each pair of the Jira project and issue type, we can configure the following things: Project accessibility.\nWhich custom fields and system an issue can use.\nThe order of custom fields appears on an issue screen.\nThe workflow of an issue including the statuses.\nVersions and components available for an issue.\nPermissions for what a user can do with an issue. Project accessibility. Which custom fields and system an issue can use. The order of custom fields appears on an issue screen. The workflow of an issue including the statuses. Versions and components available for an issue. Permissions for what a user can do with an issue.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "16. What are the limitations when editing an active workflow in Jira?",
        "answer": "Following are the limitations when editing an active workflow in Jira: If a workflow is active, we cannot edit the workflow name, only the description can be edited.\nWe cannot delete the workflow steps.\nWe cannot edit a step associated status.\nWe cannot add a new outgoing transition in the case a step has no outgoing transitions Here, global transitions are not considered.\nWe cannot change a step’s Step ID. If a workflow is active, we cannot edit the workflow name, only the description can be edited. We cannot delete the workflow steps. We cannot edit a step associated status. We cannot add a new outgoing transition in the case a step has no outgoing transitions Here, global transitions are not considered. We cannot change a step’s Step ID.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "17. What is the difference between Jira Kanban and Jira Scrum ?",
        "answer": "For Kanban boards, the process flow is tracked. The work in progress (WIP) activities are maintained. Here, the team plans on increasing and decreasing the number of issues that are to be shown in the status of the workflow.\nIn the Scrum board, the progress of the sprints along with tracking of its work is carried out. It is the work mode, where the team decides the different types of issues that have turned backlog which is then moved to sprints as per the plan. For Kanban boards, the process flow is tracked. The work in progress (WIP) activities are maintained. Here, the team plans on increasing and decreasing the number of issues that are to be shown in the status of the workflow. In the Scrum board, the progress of the sprints along with tracking of its work is carried out. It is the work mode, where the team decides the different types of issues that have turned backlog which is then moved to sprints as per the plan.",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "18. What are some of the common Jira add-ons?",
        "answer": "Some of the common and useful Jira add-ons are as follows: Slack\nGithub\nTempo Timesheets\nPagerDuty\nJenkins-CI\nUsersnap Slack Github Tempo Timesheets PagerDuty Jenkins-CI Usersnap",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "19. What do you mean by Cloning an Issue in JIRA?",
        "answer": "Cloning an issue basically means copying an issue. This allows us to quickly make a copy of an issue inside a similar project. The clone issue is a mirror image of the original issue. It contains similar data that is put in the original issue like the Summary, Components, Affects Versions, and so on. A clone issue is a different element from the original issue. The clone issue can similarly be connected to the original issue. The tasks on the original issue have no impact on the clone issue and also the other way around. If a link is made between the original issue and the clone issue, that serves as the main connection. Cloning an issue retains the following: Project\nSummary\nIssue Links\nDescription\nAssignee\nEnvironment\nReporter\nAttachments\nComponents\nAffects Versions\nFix For Versions\nPriority\nIssue Type\nSecurity Project Summary Issue Links Description Assignee Environment Reporter Attachments Components Affects Versions Fix For Versions Priority Issue Type Security",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "20. Which issues cannot be cloned?",
        "answer": "The following are the issues that are cannot be cloned: Time tracking\nIssue history\nComments and\nLinks to Confluence pages Time tracking Issue history Comments and Links to Confluence pages Conclusion Jira is a software that allows agile project management and bug tracking. This defect tracking tool is not only used for convenience-related features like recording, reporting but it is also integrated directly with the code development environment. Jira is an efficient tool that has the capability to track any kind of issue. Agile projects are also supported by Jira. Jira helps teams report, assign, track, plan, and manage work. Thus, everything from agile software development and customer support to start-ups and enterprises is done. References and Resources: References and Resources: Jira 8 Essentials - Fifth Edition by Patrick Li\nJira Software Essentials (Second Edition) - Published by Packt Publishing\nAutomate Everyday Tasks in Jira - by Gareth Cantrell\nAgile vs Scrum\nSoftware Testing\nManual Testing Jira 8 Essentials - Fifth Edition by Patrick Li Jira Software Essentials (Second Edition) - Published by Packt Publishing Automate Everyday Tasks in Jira - by Gareth Cantrell Agile vs Scrum Agile vs Scrum Software Testing Software Testing Manual Testing Manual Testing",
        "reference": "interviewbit.com",
        "role": "jira"
    },
    {
        "question": "1) What is Jira?",
        "answer": "ADVERTISEMENT\nJira is a software testing tool developed by an Australian company, i.e., Atlassian.\nIt is a bug tracking tool used to track the issues and bugs related to your software and Mobile apps.\nThe name \"Jira\" comes from the Japanese word \"Gojira\", which means Godzilla.\nJira is based on Agile methodology, and the current version of Jira is 6.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "",
        "answer": "Jira workflow is a set of activities performed to track and transition of an issue during the lifecycle of an issue where transition represents the link between the two statuses when an issue moves from one status to another status, and status determines the impact of the work on an issue filed by the tester.\nThe following are the phases that occur in a workflow:\nTODO\nIn Progress\nDone\nThe Jira workflow is known as defect lifecycle or bug lifecycle. The bug lifecycle consists of the following phases:\nOpen issue\nWhen the issue is created by the tester, then the issue is assigned to the software developer, and they start working on it.\nIn Progress\nThis is the phase where the software developers start working on the issue.\nResolved issue\nWhen the issue is resolved by the software developer and waiting for the verification by the software tester. If the verification is successful, then the issue is closed; otherwise, the issue gets reopened.\nReopened issue\nIf the verification is unsuccessful, then the issue is reopened and assigned to the software developer.\nClose issue\nIf the verification of the fixed bug is successful, then the issue is closed by the tester.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "",
        "answer": "Jira is a defect tracking tool that creates different reports which allow you to get an overview of the current status of a project.\nJIRA report is a pictorial representation of the current status of a project in the form of charts, line-charts, bar-graphs, etc.\nThe following are the reports generated by Jira:\nAverage Age report\nThe average report is a bar chart that displays the average age of unresolved issues for a project or filter.\nThe Average Age report is generated that depends upon the selected project, the type of issue selected in the filter, and time is chosen (hours/days/week/months).\nCreated vs. Resolved Issues report\nThe created vs. resolved issues report displays the difference chart between the number of issues created and the number of issues resolved within a timeframe.\nPie chart\nThe pie chart is used to display the issues grouped by a specified field, and the specified field can be priority, assignee, project, issue type, etc.\nRecently created issue report\nThe recently created issue report represents a chart that shows the rate at which the new issues are created and how many issues are resolved during the same interval.\nResolution Time Report\nThe resolution time report determines the length of the time taken to resolve the issues for a project/filter.\nSingle Level Group by the Report\nThe single-level group by the report does not display the chart, but it categorizes the issues grouped by a particular field for a filter.\nTime Since Issue Reports\nThe time since the issue report is a bar chart that shows the number of issues of a particular data field which was set on a given date. Suppose I choose the \"Created\" as a data field then the bar chart shows the number of issues which are created.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "",
        "answer": "The following are the steps to create an issue:\nClick on the '+' button to create an issue. On clicking on the '+' button, the screen appears which is shown below:\n\nProject: It determines the name of the project.\nIssue Type: It is a dropdown which displays the lists of all the issue types. You can choose either of them such as Bug, epic, task, sub task.\nSummary: In the summary text field, you need to type the summary related to the issue that you are creating.\nPriority: You can set the priority of an issue. It can be either medium, high, low.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "",
        "answer": "An issue can also be shared with other users in Jira. The following are the steps required to share an issue with other users in Jira:\nSuppose we have an issue that already exists in Jira, i.e., the login button is not working.\n\nThe above screen shows that an issue \"TP-2 login button is not working\" has been created.\nIf we want to share the issue, then this can be achieved by using the share option available on the issue's description, it can be shown in the below screenshot:\n\nClick on the share shown in the above screenshot. On clicking on the share, the screen appears shown below:\n\n\nThe above screen shows that the dialog box appears on clicking on the share button, and in a dialog box, you need to enter the name, team or email address of a user to which you want to share your issue.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "6) What is the purpose of Dashboard?",
        "answer": "Once you log in to the Jira, Dashboard is the first display which you see. Jira admin can change the view of the dashboard, and also you can change the things that are visible on the dashboard.\nA dashboard displays gadgets and apps that help the team members to track the project's progress.\nThe dashboard contains useful information, such as the issues assigned to the logged-in user and the user's activity stream.\nOn clicking on the Dashboard link appearing at the left side of the panel, the page appears which is shown below:\n\n\nFollowing are the steps required to create a Dashboard:\nClick on the Dashboards appearing on the left side of the panel.\nClick on the (...) button appearing at the top right corner of the page.\n\nClick on the Create dashboard option appearing in the dropdown menu of (...) option.\nOn clicking on the Create dashboard, the screen appears, which is shown below:\n\nWhere,\nName: It provides the descriptive name of a dashboard.\nDescription: It is not a mandatory field. In this field, you can add the description of a dashboard that you are creating.\nStart from: Start from is a field that contains the dropdown in which you can choose either Blank Dashboard (It is a blank dashboard which does not contain any gadgets, but you can customize the dashboard according to your needs) or Default dashboard (It is pre-existing dashboard).\nShared with: Select the user and group to which you want to share your Dashboard.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "7) What do you mean by scheduling an issue?",
        "answer": "We can schedule the issues due dates which are used to track, review, and inform the team about due dates. Scheduling an issue is the most powerful feature that performs the fixed and relative date searches based on the due dates.\nAdvanced searches can also be performed by using the Jira Query Language.\nYou can schedule an issue by using the Date field. It can be done either by creating a new issue or editing an issue.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "8) Explain how project details are listed in Jira?",
        "answer": "Project in Jira comes with the main attributes, and these attributes can be a Name of the project, key, components, versions.\nWhen you log in to the Jira, the first page that appears is the Dashboard.\n\nIn the above screen, the right-hand side section represents the Activity Stream that contains all the activities which you performed on an issue or a project.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "9) What are the issue types that are created and tracked via JIRA?",
        "answer": "An issue in Jira can be a bug, feature, task, or any project work. Each Jira project comes with default issue types, and these issue types depend on the type of project that you are using.\nThere are three types of Jira projects:\nJira Core (business projects)\nJira Software (software projects)\nJira Service Desk (service desk projects)\nTwo types of issue exist in Jira Core:\nTask\nThe task is a work that needs to be completed.\nSubtask\nSubtask is a piece of work which needs to be done to complete a task.\nFive types of issue exist in Jira Software:\nBug\nA bug is a problem that exists in the functionality of a product.\nEpic\nEpic is a big user story which needs to be broken into smaller stories.\nSubtask\nSubtask is a piece of work which needs to be done to complete a task.\nTask\nTask is a work that needs to be completed.\nStory\nThe story is the smallest unit of work which needs to be completed.\nEight types of issue exist in Jira Service Desk:\nChange\nIt requests a change in a current IT profile.\nIT help\nIt requests for help related to an IT-related problem.\nIncident\nIt is used for reporting an incident.\nNew feature\nIt requests for adding a new feature or capability in software.\nProblem\nIt is used for investigating and reporting the root cause of multiple incidents.\nService request\nIt is requesting for help from an internal or customer service desk.\nService request with approval\nIt is used for requesting help that requires the approval of a manager or a board.\nSupport\nIt is used for requesting help for customer support related issues.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "10) How is sub-task created in Jira?",
        "answer": "The following are the steps required to create a sub-task:\nStep 1: Open the issue for which you want to create the sub-task.\nStep 2: Click on theicon to create a sub-task.\n\nStep 3: To create a sub task, you need to enter the following screen shown in the below screen:",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "11) Explain the term cloning an issue?",
        "answer": "Cloning an issue means creating the duplicate copy of an issue within the same project. The clone issue is basically a copy of the original issue which is pertaining to the same information stored in the original issue.\nA clone issue is a separate entity from the original issue, but it can be linked to the original issue.\nOperations applied to the original issue will not have any effect on the clone issue",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "12) Explain Kanban board?",
        "answer": "Kanban board is a tool used to visualize the work and limit work-in-progress.\nAs in scrum, we are taking some activities from a product backlog and adding in a sprint backlog. However, in Kanban, we do not have sprint, so sprint backlog activity will not be performed. This is the main difference between scrum and Kanban that scrum contains sprint backlog while kanban does not contain the sprint backlog.\nKanban board consists of three states:\nTo Do\nDoing\nDone\n\nWhen the project is started, then we put all the activities from the product backlog to the 'To Do' state. When the team member starts working on an activity, then that activity is put in a 'Doing' state, and when the activity is placed, then it is placed in a 'Done' state.\nFrom the Kanban board, one can get to know which activities have been done and which activities they need to develop.\nOne of the most important features of the Kanban board is a Limit option. In the above figure, we have eight tasks in a product backlog and limit set is 4. At a time, it will take only four tasks in a 'To Do' state, and if any of the tasks come in a 'Doing' state, then one more task from the product backlog will be placed in a 'To Do' state. In this way, we can set the limit depending on the availability of the resources.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "13) Explain Scrum board?",
        "answer": "The Scrum Board is a physical board on which the user stories present in the current sprint backlog are displayed.\n\nScrum board is divided into columns such as:\nStories: This column contains all the user stories available in the current sprint backlog.\nTODO: This state contains the subtasks of the stories on which the work has not started on.\nIn Progress: This state contains all the tasks on which the work has started.\nDone: This state contains all the tasks at which all the work have been completed.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "14) List all the reports generated by Kanban projects in Jira?",
        "answer": "The two types of reports are generated by Kanban projects:\nControl chart\nThe control chart is a useful chart which helps in measuring the team's performance. The control chart displays the average cycle time of your team over a period of time. The control chart plots the following issues on the chart:\nAny issues which are outside the standard deviation known as outliers.\nIt displays the average time taken to complete the tasks.\nIt also displays the team's rolling average.\nIt displays the average cycle time of your product, version, or a sprint.\nIt helps you to identify whether the data from the current sprint determines the future performance of a product, i.e., the less variance in the cycle time means that median or mean can determine the future performance.\nHow to create a Control flow chart\nThe following are the steps to create a control flow chart:\nGo to the Jira official website.\nClick on the project on which you are working.\nClick on the Reports appearing at the left side of the panel.\nSelect the Control chart.\nCumulative flow diagram\nCumulative flow diagram is a kanban tool that allows the team to view the effort and project's effort.\nCumulative diagram consists of two axis, i.e., X-axis and Y-axis where X-axis (horizontal axis) represents the time taken to complete a task and Y-axis (vertical axis) represents the number of issues or tasks.\nThe size of the area represents the number of work items currently involved in each state for the selected time period.\n\nFeatures of Cumulative flow diagram:\nMonitor how WIP builds over time\nIf the line goes up, which means that WIP (Work In Progress) goes up means that the team is working on more tasks than handling them at a time. Increase in WIP results in increased cycle times, and this reduces team efficiency. So, it is important to keep the line straight.\nObserve how much team delivers\nWith the help of CFD diagram, we can keep track of all the tasks which have been delivered by the team. If the bottom line of the CFD diagram represents the Done state, then the slope of the line between any two points would represent the average throughput between these two points.\nSpot bottlenecks instantly\nCumulative diagram determines the exact amount of work in each state of your project. If one or more areas represent that WIP is expanding, then CFD spots this bottleneck instantly.\nMeasure your past performance\nThe horizontal difference between the top line and bottom line at any point provides the process approximate average cycle time. The comparison between the exact cycle time and approximate cycle time provides you a good understanding of the process performance.\nMonitor your process health\nCumulative flow diagram is used to evaluate the efficiency of a process and also helps to identify the problems to achieve a stable and healthy process. The average arrival rate must be close to the average throughput to achieve a stable system, i.e., Average Cycle Time= Average Throughput.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "15) List all the reports generated by scrum projects in Jira?",
        "answer": "The following are the reports generated by scrum projects in Jira are:\nBurndown chart\nBurndown chart displays the amount of work that has been completed in a sprint, and the total work is remaining.\nBurndown chart is useful as it provides the following observations:\nIf the team finishes its work early, which means that the team is not committed with sufficient work during sprint planning.\nIf the team does not finish its work within a sprint means that they are committed with a lot of work.\nIf the burndown chart drops sharply which means that the work has not been estimated properly.\nHow to create a Burndown chart\nThe following are the steps required to create a Burndown chart:\nGo the Jira official website.\nClick on the project on which you are working.\nClick on the Reports appearing at the left side of the panel.\nSelect the Burndown chart.\nBurnup chart\nBurnup chart is the visual representation of a sprint's completed work compared with the total scope. It is used to identify problems such as deviation from the planned project path.\nHow to create a Burnup chart\nThe following are the steps required to create a Burnup chart:\nGo to the Jira official website.\nClick on the project on which you are working.\nClick on the Reports appearing at the left side of the panel.\nSelect the Burnup chart from the Reports dropdown.\nThe following are the important points related to the Burnup chart:\nThe vertical axis represents the amount of work, and it can be measured in different ways such as Story points, issues count, or estimates while the horizontal axis represents the time in days.\nThe distance between the lines on a chart is the remaining amount of work. When all the issues have been completed, the lines will meet.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "16) Define a component in Jira?",
        "answer": "Components are the subdivisions of a project and used to group the issues within a project into smaller parts.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "17) How to delete a component in Jira?",
        "answer": "Follow the below steps to delete a component in Jira:\nClick on the Components appearing at the left side of the panel.\n\nClick on the '...' icon then the dropdown appears which shows two options, i.e., Edit and Delete.\n\nClick on the Delete option to delete the component from the Jira project.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "18) What is a validator in Jira?",
        "answer": "Validators check whether the input provided by the user is valid before the transition is performed.\nIf the validation fails, then the issue does not proceed to the destination status of the transition.\nList of validators:\nRequired Field validators\nRequired field validator ensures that the field is mandatory or required. The required fields marked with the red asterisk (*) on every transition screen. In Jira, we can use the field configuration to make the fields compulsory or mandatory. With the help of Required field validators, it is possible to make the fields mandatory that makes the overall process more user-friendly.\nRegular Expression Validator\nRegular Expression Validator checks whether the input given to a certain field matches the regular expression that you define. It is a quite powerful validator, and its use cases vary from the simple validation, the user should provide the exact value that matches the use cases.\nParameters\nRegular expression: It is an expression that the input field should match.\n\nUser define message: This message appears when the validation fails.\nValidator to compare to two fields with each other\nThis validator is used to compare the two fields. To use this validator, both the fields must be of the same type.\nThe following is the list of operators that this validator supports:\n> ( greater than)\n< ( less than)\n>= (greater than or equal to)\n<= (less than or equal to)\n= (equal)\n!= (Not equal)\nDate Compare Validator\nThe Date Compare Validator is used to compare the date field with the fixed date. It can support the date field types such as Date fields (Date and date with time). We can use a fixed date in the format yyyy-mm-dd hh:mm or a pattern (days, months, weeks, years).\nField Compare Validator\nField Compare Validator is a validator that compares the fields against the fixed values.\nIt supports the following operators:\n= (equal to)\n!= (Not equal to)\n> (greater than)\n>= (greater than or equal to)\n< (less than)\n<= (less than or equal to)\nIN\nNOT IN\nCONTAINS\nIt supports the comparison types such as String, Number, and Option ID. For example, we have a field named \"Salary\", and its field value should not be less than 30,000, it can be represented as:\nSalary>=30,000;\nUser in Project Role Validator\nThis validator ensures that the currently logged in user should be in a certain specific role. For example, only a user with a role \"Developer\" can do this workflow transition.\nUser in Group Validator\nIt validates that the current user should be in any of the specified groups.\nUser in Field Validator\nThis validator ensures that the current logged in user is set on a certain field.\nThere are two options available in this validator:\nYou can set the status of a current user in a field.\nHe/she is not set in this field.\nParent Issue Type Validator\nThis validator is used to prevent creating the subtasks from the parent issue. We can achieve this by adding a validator to the \"Create\" transition from the subtask. You can also provide a custom error message for this type of validator.\nParent Issue Status Validator\nThis validator ensures that the parent issue should have some specific status. The status can be Reopened, In Progress, Backlog, etc.\nField Values Changed Validator\nField Values Changed Validator ensures that the user can change the value in a field.\nJQL Validator\nJQL (Jira Query Language) evaluates the current issue against the JQL query. In JQL Validator, the query is generated automatically related to the issue.\nJQL Validator provides some additional fields:\nValidator message: It is used to define the custom error message if the validation fails. If you do not want to provide the custom error message, then you can leave this field as empty.\nRun as user: In this field, we can define a technical user with which the JQL expression will be evaluated. If you leave this field as empty, then the current user will be considered for this transition.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "19) What is an issue collector?",
        "answer": "An issue collector allows you to gather the feedback form of any website in the form of Jira issues. It can also collect the issues who do not have a Jira account.",
        "reference": "javatpoint.com",
        "role": "jira"
    },
    {
        "question": "20) What are the differences between Scrum board and Kanban board?",
        "answer": "The following are the differences between Scrum board and kanban board:\nScrum Kanban\nPlanning It has fixed planning. It focussed on planning. It starts with the sprint planning and ends with the sprint review, retrospective. The daily meeting is held so that the team knows the next steps, priorities, and the learnings from the previous steps. It has no fixed planning, and no daily meetings are conducted. In Kanban, changes can occur at any time, i.e., frequent changes occur.\nTimeline In scrum, we work on the sprint that has the fixed-time duration means that after some fixed-time, we are delivering something to the client. Kanban does not have the concept of a sprint, so it has no fixed timeline for delivering the product to the client.\nTask estimates During sprint planning, it is decided that how many activities are to be pulled from the product backlog and add in a sprint backlog. For example, if the sprint is for two weeks, then the number of activities are selected in such a way that they can be completed within the sprint, i.e., in two weeks. It does not estimate the task.\nScrum Master In scrum methodology, we have one scrum master who handles the team and conducts the meeting on a daily basis. In Kanban methodology, we do not have any scrum master. It's the responsibility of each individual to deliver a valuable product.\nSuitability This methodology is suitable for large-sized projects as large-sized projects can be divided into multiple sprints. It is mainly suitable for small-sized projects.\nConstant changes In Scrum, constant changes can be adapted easily in shorter sprints. If any major change occurs, then Kanban methodology gets failed.\nCost In Scrum, the task is estimated, i.e., a fixed number of activities are taken in a sprint, so the total cost of the project is minimal. In Kanban, the task is not estimated, so the total cost of the project is not accurate.\nRoles and responsibilities In Scrum, a specific role is assigned to the team members by the Scrum Master while the product owner tells the objectives of the product on which team members have to work. No predefined role is assigned to the team members. It's the responsibility of all the team members to work in collaboration to deliver a valuable product.\nMeasurement of Productivity The productivity is measured by using cycle time or the time taken to complete the whole project from start to the end. Productivity is measured by using velocity through sprints.\nRelease Methodology Small release after the end of each sprint. It provides continuous delivery.",
        "reference": "javatpoint.com",
        "role": "jira"
    }
]