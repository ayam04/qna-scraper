[
    {
        "question": "1. What is jQuery?",
        "answer": "jQuery is a JavaScript library that simplifies web development. It eases tasks like HTML document traversal, event handling, and animation. With a concise syntax, it enhances the interaction and manipulation of web pages. Developers use jQuery to create dynamic and interactive websites.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "2. What is jQuery used for?",
        "answer": "jQuery is a very popular JavaScript library. It makes programming JavaScript easier by letting you select elements, handle events, and develop animations. Web developers use JQuery to build interactive websites and web applications. It helps add effects like fading, sliding, and more without writing a lot of code.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "3. What are the advantages of using jQuery?",
        "answer": "Easy to use and learn\nEasily expandable\nCross-browser support (IE 6.0+, FF 1.5+, Safari 2.0+, Opera 9.0+)\nEasy to use for DOM manipulation and traversal\nLarge pool of built-in methods\nAJAX capabilities\nMethods for changing or applying CSS and creating animations\nEvent detection and handling\nCheck and enroll in this HTML and jQuery course online provided by Intellipaat.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "4. What is the difference between an ID selector and a class selector in jQuery?",
        "answer": "In jQuery, an ID selector targets a unique element with a specific ID, starting with a hash symbol (#). A class selector, denoted by a dot (.), targets multiple elements with the same class. ID is unique, while class can be shared among elements.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "5. Difference between $(this) and this keyword in jQuery.",
        "answer": "This could be a tricky question for many jQuery beginners, but indeed, it’s a simple one.\n$(this) returns a jQuery object, on which you can call several jQuery methods, e.g., text() to retrieve text, val() to retrieve value, etc., while this represents the current element, and it’s one of the JavaScript keywords to denote the current DOM element in a context. You cannot call the jQuery method on this until it’s wrapped using the $() function, i.e., $(this).",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "6. What is the main advantage of loading jQuery library using CDN?",
        "answer": "Well, apart from many advantages, including reducing server bandwidth and faster downloads, one of the most important is that if a browser has already downloaded the same jQuery version from the same CDN, it won’t download it again. Nowadays, almost all public websites use jQuery for user interaction and animation. There is a high chance that browsers already have the jQuery library downloaded. Curious reader, please see the answer for in-depth analysis.\nCheck out our PHP Interview Questions to ace your next interview!",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "7. How do CSS precedence/cascading rules work?",
        "answer": "CSS precedence is like a ranking system for styles. Inline styles have the highest priority, followed by internal and external styles. Specificity (ID > class > tag) and order in the stylesheet matter.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "8. What is a class? What is an ID?",
        "answer": "A class is a style (i.e., a group of CSS attributes) that can be applied to one or more HTML elements. This means it can apply to instances of the same element or instances of different elements to which the same style can be attached. Classes are defined in CSS using a period followed by the class name. It is applied to an HTML element via the class attribute and the class name.The following snippet shows a class defined, and then it is applied to an HTML DIV element:\n.test {font-family: Helvetica; font-size: 20; background: black;}\ntest\nAlso, you could define a style for all elements with a defined class. This is demonstrated with the following code that selects all P elements with the column class specified.\np.column {font-color: black;}\nAn ID selector is a name assigned to a specific style. In turn, it can be associated with one HTML element with the assigned ID. Within CSS, ID selectors are defined with the # character followed by the selector name.\nThe following snippet shows the CSS example1 defined followed by the use of an HTML element’s ID attribute, which pairs it with the CSS selector.\n#example1: {background: blue;}",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "9. What is grouping?",
        "answer": "When more than one selector shares the same declaration, they may be grouped together via a comma-separated list; this allows you to reduce the size of the CSS (every bit and byte is important) and makes it more readable. The following snippet applies the same background to the first three heading elements:\nh1, h2, h3 {background: red;}",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "10. What is HTML?",
        "answer": "HTML is short for HyperText Markup Language and is the language of the World Wide Web. It is the standard text formatting language used for creating and displaying pages on the Web. HTML documents are made up of two things: the content and the tags that format them for proper display on pages.\nCheck out the Web Development Interview Questions for Freshers.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "11. What is semantic HTML?",
        "answer": "Semantic HTML is a coding style where the tags embody what the text is meant to convey. In semantic HTML, tags like <b></b> for bold and <i></i> for italic should not be used, the reason being that they just represent formatting and provide no indication of meaning or structure. The semantically correct thing to do is to use <strong></strong> and <em></em>. These tags will have the same bold and italic effects while demonstrating meaning and structure (emphasis in this case).",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "12. Compare jQuery and AngularJS",
        "answer": "Criteria jQuery AngularJS\nAvailability of RESTful API No Yes\nSupport for MVC No Yes\nTwo-way data binding No Yes",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "13. What is $() in jQuery library?",
        "answer": "The $() function is an alias of jQuery() function. At first, it looks weird and makes jQuery code cryptic, but once you get used to it, you will love its brevity. $() function is used to wrap any object into a jQuery object, which then allows you to call various method-defined jQuery objects. You can even pass a selector string to the $()function, and it will return a jQuery object containing an array of all matched DOM elements.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "14. What are the effects methods used in jQuery?",
        "answer": "The main effects methods used in jQuery are show(), hide(), toggle(), fadeIn(), fadeOut(), fadeToggle(), slideDown(), slideUp(), and slideToggle(). These methods are used to show or hide elements on a webpage with visual effects like fading and sliding. They provide an easy way to create animated transitions between visible and hidden states of elements.\nAlso, check our blog on Top 15 jQuery Project Ideas for Beginners in 2024!",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "15. How do you include jQuery on a web page?",
        "answer": "To include jQuery on a web page, you need to add the jQuery library file to the page. This is done by adding a <script> tag and referencing the jQuery file location before any other jQuery code. The script tag is usually placed in the <head> section of an HTML page so that jQuery is loaded first before the page contents.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "16. Can you provide an example of basic jQuery syntax?",
        "answer": "A basic example of jQuery syntax would be selecting an element and performing an action on it. For example, to select the paragraph with id “para” and change its color to red, the code would be:\n$(\"#para\").css(\"color\",\"red\");\nThis selects the element with id “para” and uses the .css() method to modify its color style property.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "17. Explain the concept of selectors in jQuery.",
        "answer": "Selectors in jQuery allow us to select specific elements on a webpage to perform actions on them. Selectors are used to “query” the DOM or web page structure. Common selectors include ID (#), class (.), tag name, and attribute selectors. Selectors make it easy to target elements without having to use methods like getElementById. This allows jQuery to manipulate and change elements easily.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "18. How do you hide an element in jQuery?",
        "answer": "To hide an element in jQuery, we can use the hide() method. This method is used to hide the content of the selected elements. For example, to hide a paragraph with id “para”, we can use:\n$(\"#para\").hide();\nThis hides the paragraph by setting its display property to none.\n\nIntermediate jQuery Interview Questions and Answers",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "19. What's the difference between $(document).ready() and $(window).load()?",
        "answer": "The main difference between $(document).ready() and $(window).load() is the timing of when the code inside their functions runs. The $(document).ready() function runs when the HTML document is fully loaded and processed. The $(window).load() function runs later when all assets like images have been fully loaded. $(document).ready() is faster as it doesn’t wait for images/assets.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "20. Explain the concept of chaining in jQuery.",
        "answer": "Chaining in jQuery allows us to link together multiple jQuery methods or actions in a single statement. This is possible because most jQuery methods return the jQuery object itself. For example, we can select an element, add a class, and show it with:\n$(\"#id\").addClass(\"blue\").show();\nChaining helps reduce code and perform multiple operations with a single jQuery selection, making code more compact and readable.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "21. How can you create animations using jQuery?",
        "answer": "jQuery provides various animation effects and methods to create animations on web pages. Common animation methods include slide, fade, and show/hide with durations. For example, to fade an element slowly, we can use fadeIn(1000), which fades over 1 second (1000ms). We can also create custom animations using animate() method by modifying CSS properties like width, height, and opacity over time.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "22. What is AJAX in jQuery?",
        "answer": "AJAX stands for Asynchronous JavaScript and XML. It is a technique used in jQuery to request data from a web server asynchronously in the background without interfering with the display or behavior of the existing page. This allows updating parts of a web page dynamically without reloading the entire page. Common AJAX methods in jQuery are load(), get(), post(), etc.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "23. How do you add or remove classes in jQuery?",
        "answer": "jQuery provides easy methods to add and remove classes from elements. To add a class, we use the addClass() method and pass the class name. To remove a class, we use the removeClass() method and pass the class name.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "24. What is event delegation in jQuery?",
        "answer": "Event delegation in jQuery allows attaching a single event handler to a parent element instead of multiple handlers to children. When a child element event occurs, it bubbles up to the parent and is handled there. This improves performance as fewer handlers are required.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "25. How do you get and set text content in jQuery?",
        "answer": "To get or retrieve the text content of an element in jQuery, we use the text() method. To set or update the text content, we use the text() method along with a parameter specifying the new text. For example, to get text from a paragraph, use $(“p”).text(); and to set new text, use $(“p”).text(“Hello World”);. This allows for easily working with an element’s text.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "26. How do you check if an element has a particular class?",
        "answer": "To check if an element has a particular class in jQuery, we can use the hasClass() method. It accepts a class name as a parameter and returns a boolean true/false. For example, to check if a div has class “active”, we can use:\nvar hasClass = $(\"div\").hasClass(\"active\");\nThis returns true if the div has the “active” class, and false otherwise.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "27. What is the purpose of ‘each()’ function in jQuery?",
        "answer": "The each() function in jQuery is used to iterate over elements in a jQuery collection and perform actions on each element. It allows running the same code for each matched element. For example, we can use each() to add a class to every <p> tag on a page. Inside each(), we have access to the current element using this keyword. This makes it easy to repeat tasks over multiple elements.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "28. Explain the difference between ‘prop()’ and ‘attr()’ in jQuery.",
        "answer": "The main difference between prop() and attr() is that prop() works for properties and attr() works for attributes. Properties are the internal state of elements, like checked, disabled, etc., while attributes are present in HTML, like id, class, etc.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "29. How can you create a slide toggle effect in jQuery?",
        "answer": "To create a slide toggle effect in jQuery, we can use the slideToggle() method. This method toggles the height of the element smoothly from 0 to the current height, or vice versa, with a sliding animation. For example, to toggle the height of a div on a button click:\n$(\"button\").click(function(){\n$(\"div\").slideToggle();\n});\nThis creates a smooth sliding effect to show/hide the div content on each click.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "30. How can you create a fade effect using jQuery?",
        "answer": "To create a fade effect in jQuery, we can use fadeIn(), fadeOut(), and fadeToggle() methods. fadeIn() fades in the element by increasing its opacity from 0 to 1. fadeOut() does the reverse by decreasing opacity from 1 to 0. fadeToggle() toggles between these effects on successive clicks. We can also control the fade duration. For example, $(“div”).fadeIn(1000) fades in over 1 second.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "31. What is the difference between ‘empty()’ and ‘remove()’ in jQuery?",
        "answer": "The empty() and remove() methods in jQuery are used to remove elements, but they work in different ways. The empty() method removes all child elements from the set of matched elements. It keeps the elements but removes the content. For example, $(“p”).empty() removes all <p> elements content.\nThe remove() method removes the set of matched elements from the DOM. It removes the element and its data/eventhandlers completely. For example, $(“p”).remove() removes all <p> elements.\nIn short, empty() removes child elements, and remove() removes the element itself.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "32. How do you handle multiple AJAX requests in jQuery?",
        "answer": "To handle multiple AJAX requests in jQuery, you can make different requests using the $.ajax() function. Give each request a unique ID or name. In the success callback of each request, check the ID to know which request finished, and do the next steps for that request only.\n\nAdvanced jQuery Interview Questions and Answers",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "33. What is the purpose of ‘serialize()’ in jQuery?",
        "answer": "The serialize() method in jQuery is used to encode a set of form elements into a serialized string that can be submitted to the server. It collects the form data and converts it into a URL-encoded string, like name=value&name=value format. This format is typically used by AJAX requests to submit form data to the server without reloading the page.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "34. What is event stopPropagation()?",
        "answer": "The stopPropagation() method in jQuery prevents further propagation of the current event in the bubbling phase. When an event happens on an element, it bubbles up the DOM tree. stopPropagation() stops the bubbling to parent elements. This is useful when an inner element’s click should not trigger the parent’s click handler.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "35. How do you delay execution in jQuery?",
        "answer": "To delay the execution of code in jQuery, we can use the setTimeout() function. It allows specifying code to execute after a delay of milliseconds. For example, to fade an element in after 2 seconds, we can use:\nsetTimeout(function(){ $(\"div\").fadeIn(); }, 2000);\nThis delays the fadeIn animation by 2 seconds before executing.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "36. What is the purpose of ‘unbind()’ in jQuery?",
        "answer": "The unbind() method in jQuery is used to remove event handlers that were bound using bind(), live(), or on(). When we no longer need an event handler, we use unbind() to remove it. This avoids multiple handlers getting attached to the same events. For example, unbinding a click handler on an element removes the handler and prevents it from executing on future clicks.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "37. How do you get the index of an element in a set using jQuery?",
        "answer": "To get the index of an element within a jQuery selection set, we can use the index() method. It returns the position of the element relative to its siblings. For example, to get the index of a clicked paragraph, we can do:\n$(\"p\").click(function(){\nvar index = $(\"p\").index(this);\nconsole.log(index);\n});",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "38. What is the role of the ‘data()’ method in jQuery?",
        "answer": "The data() method in jQuery allows adding, retrieving, and deleting custom data attached to DOM elements. It is used to store arbitrary data associated with elements without modifying the HTML. This provides a way to include additional information about elements that can be used later.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "39. How do you handle mouse events like click and double-click in jQuery?",
        "answer": "jQuery provides .click(), .dblclick(), and other methods to easily handle mouse events. To attach a click handler, use .click(function(){ /* code here / }). For double click, use .dblclick(function(){ / code */ }). The function will execute whenever the event occurs. We can identify the clicked/double-clicked element using this keyword.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "40. What is the difference between ‘find()’ and ‘filter()’ in jQuery?",
        "answer": "The main difference between find() and filter() is that find() searches for descendants of elements in the DOM tree, while filter() filters the current selection set itself. Find() looks inside elements for descendant matches and returns a new set. Filter() looks at each element in the current selection set and returns a new set matching the filter criteria.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "41. What is the purpose of the ‘serializeArray()’ method in jQuery?",
        "answer": "The serializeArray() method in jQuery is used to serialize form elements into an array of names and values. It collects the form elements data and generates a JSON array, which can be sent to the server via AJAX. This is useful for sending form data to the server without a page refresh.\nFor example, serializeArray() on a form can stringify the form data into an array like [{“name”:”field1″,”value”:”value1″},..] which can then be sent to the server via AJAX.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "42. What is the purpose of the ‘fadeIn()’ function?",
        "answer": "The fadeIn() function in jQuery is used to gradually increase the opacity of an element to make it visible with a fading effect. It animates the opacity from 0 to 1 within a given duration to create a smooth fade in transition. This is commonly used to display hidden elements on a page with a nice visual effect.\nFor example, $(“p”).fadeIn(1000) will make the <p> element fade in from invisible to visible over 1 second.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "43. What is the role of the ‘next()’ method in jQuery?",
        "answer": "The next() method in jQuery gets the immediately following sibling element of each element in the matched set. It returns a new jQuery object containing the next siblings. This is useful when we need to access or manipulate the element following the current one.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "44. What is the difference between ‘before()’ and ‘prepend()’ in jQuery?",
        "answer": "The main difference between before() and prepend() is their position in inserting content. The before() method inserts content before the selected elements only, while prepend() inserts content as the first child of each element.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "45. What is the purpose of the ‘mouseleave()’ function in jQuery?",
        "answer": "The mouseleave() function in jQuery is used to detect when the mouse pointer leaves an element. It attaches an event handler to the element that will run if the mouse leaves the element by moving to an area outside of it. This is useful for things like hiding a tooltip when the mouse exits an element.\nFor example,\n$(“p”).mouseleave(function(){ $(this).hide(); }) would hide any <p> element when the mouse leaves it.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "46. How can you change the HTML content of an element in jQuery?",
        "answer": "To change HTML content in jQuery, use html(). For example: $(“#element”).html(“<p>New content</p>”);. This method sets the HTML content of an element. It’s an easy way to update what’s inside an element using jQuery.",
        "reference": "intellipaat.com",
        "role": "jquery"
    },
    {
        "question": "1. What are the advantages of jQuery?",
        "answer": "Most popular and open source\nVery fast and easily extensible\nUsed to develop cross-browser compatible web applications as jQuery works in almost the same manner for different kinds of browsers.\nImproves the performance of an application when using the minimised version of the jQuery library. The size of the minimized js file is almost 50% less than the normal js file. A reduction in the file size makes the web page load and work faster.\nCommonly implemented UI-related functionalities are written using minimal lines of code. Most popular and open source Very fast and easily extensible Used to develop cross-browser compatible web applications as jQuery works in almost the same manner for different kinds of browsers. Improves the performance of an application when using the minimised version of the jQuery library. The size of the minimized js file is almost 50% less than the normal js file. A reduction in the file size makes the web page load and work faster. Commonly implemented UI-related functionalities are written using minimal lines of code.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "2. How is jQuery different from other javascript frameworks?",
        "answer": "There are a few differences between jQuery and other libraries. The following makes jQuery lightweight and easier to understand, integrate, and use. jQuery is much smaller than other libraries.\njQuery does not have any dependencies on other libraries or frameworks. (Like babel).\njQuery is not as complex as other libraries. This makes it easier to use and understand.\njQuery is not as heavy as other frameworks, It only uses the predefined javascript to make web apps interactive. Learn More. jQuery is much smaller than other libraries. jQuery does not have any dependencies on other libraries or frameworks. (Like babel). jQuery is not as complex as other libraries. This makes it easier to use and understand. jQuery is not as heavy as other frameworks, It only uses the predefined javascript to make web apps interactive. Learn More. Learn More Learn More",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "3. List some Features of jQuery.",
        "answer": "jQuery includes the following features: DOM element choices utilizing the multi-browser open source selector engine Sizzle, a jQuery project spin-off.\nDOM manipulation is based on CSS selectors that employ element names and characteristics, such as id and class, as criteria to pick nodes in the DOM.\nEvents\nAnimations and effects.\nAJAX.\nDeferred and Promise objects are used to govern asynchronous processing.\nJSON parsing\nExtensibility through plugins\nUtilities such as feature detection\nCompatibility methods that are natively present in newer browsers but require fallbacks for older ones, such as inArray() and each ().\nSupport for many browsers (not cross-browser). jQuery 1.x and 2.x both support \"current-1 versions\" (that is, the current stable version of the browser and the version that came before it) of Firefox, Google Chrome, Safari, and Opera. Version 1.x also works with Internet Explorer 6 and above. However, jQuery version 2.x abandoned support for Internet Explorer 6-8 (which accounts for less than 2% of all browsers in use) and now only supports IE 9 and subsequent versions. DOM element choices utilizing the multi-browser open source selector engine Sizzle, a jQuery project spin-off. DOM manipulation is based on CSS selectors that employ element names and characteristics, such as id and class, as criteria to pick nodes in the DOM. Events Animations and effects. AJAX. Deferred and Promise objects are used to govern asynchronous processing. JSON parsing Extensibility through plugins Utilities such as feature detection Compatibility methods that are natively present in newer browsers but require fallbacks for older ones, such as inArray() and each (). Support for many browsers (not cross-browser). jQuery 1.x and 2.x both support \"current-1 versions\" (that is, the current stable version of the browser and the version that came before it) of Firefox, Google Chrome, Safari, and Opera. Version 1.x also works with Internet Explorer 6 and above. However, jQuery version 2.x abandoned support for Internet Explorer 6-8 (which accounts for less than 2% of all browsers in use) and now only supports IE 9 and subsequent versions.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "4. Is jQuery a JavaScript or JSON library file?",
        "answer": "jQuery is said to be a library of single JavaScript files which consists of DOM/CSS manipulations, event effects or animations, AJAX functions and various commonly used plugins.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "5. Does jQuery work for both HTML and XML documents?",
        "answer": "No. jQuery works only for HTML documents.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "6. What is jQuery Mobile?",
        "answer": "Query Mobile is a JavaScript library that enables developers to create mobile-first applications. It is a lightweight framework that allows developers to create rich, touch-first interfaces that are optimized for touch devices. jQuery Mobile is a mobile-first JavaScript library that aims to provide a modern and easy-to-use framework for developing mobile apps. It was originally developed by Facebook to improve the performance of its iOS and Android apps. Since then, it has been adopted by many other companies, including Google, Yahoo, and Mozilla. When using jQuery Mobile, you can use the library to create a mobile-first app that is faster and easier to maintain than traditional web apps. It also makes it easier to add new features to your app without having to rewrite your code. JQuery Mobile is built on top of the jQuery JavaScript library. It works by using the same techniques that are used when you are developing a traditional web app. However, instead of using JavaScript, jQuery Mobile uses HTML5 and CSS3 to create a modern and easy-to-use framework for developing mobile apps.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "7. What is the $() function in the jQuery library?",
        "answer": "The $() function is used to access the properties of elements in the DOM (Document Object Model). $() is similar to javascript’s selector functions, but it is more powerful and has more options.\n$() can be used to access attributes, classes, id, data-* attributes, and more.\nExample - Suppose you want to change the colour of all the heading1 (h1) to green, then you can do this with the help of jQuery as - The $() function is used to access the properties of elements in the DOM (Document Object Model). $() is similar to javascript’s selector functions, but it is more powerful and has more options. $() can be used to access attributes, classes, id, data-* attributes, and more. Example - Suppose you want to change the colour of all the heading1 (h1) to green, then you can do this with the help of jQuery as - Example - $(document).ready(function() {  \n   $(\"h1\").css(\"background-color\", \"green\");  \n}); $(document).ready(function() {  \n   $(\"h1\").css(\"background-color\", \"green\");  \n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "8. Explain $(document).ready() function?",
        "answer": "The $(document).ready() function is a jQuery extension that allows you to immediately run code when the document is ready. It's most commonly used to initialize a new page or to load scripts or styles into the document. However, it can also be used to load a script or style into the document at any time. The $(document).ready() function is useful for loading scripts or styles into the document at any time. It's not useful for loading scripts or styles into the document when the document is already loaded.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "9. What is the exact difference between the methods onload() and document.ready()?",
        "answer": "The onload() and document.ready() methods are used to load and render the HTML and JavaScript code that is needed to display the page.  However, they are different methods in that they use different approaches to loading the HTML and JavaScript code. The exact differences are - onload() document.ready() onload() document.ready()\nThe onload() method is used to load the HTML code. The document.ready() method is used to load the JavaScript code.\nThe onload() method loads the HTML code using a pre-compiled object that is passed to the onload event handler The document.ready() method loads the JavaScript code using a pre-compiled object that is passed to the document.ready event handler. onload() document.ready()\nThe onload() method is used to load the HTML code. The document.ready() method is used to load the JavaScript code.\nThe onload() method loads the HTML code using a pre-compiled object that is passed to the onload event handler The document.ready() method loads the JavaScript code using a pre-compiled object that is passed to the document.ready event handler. onload() document.ready() onload() document.ready() onload() document.ready() The onload() method is used to load the HTML code. The document.ready() method is used to load the JavaScript code.\nThe onload() method loads the HTML code using a pre-compiled object that is passed to the onload event handler The document.ready() method loads the JavaScript code using a pre-compiled object that is passed to the document.ready event handler. The onload() method is used to load the HTML code. The document.ready() method is used to load the JavaScript code. The onload() method is used to load the HTML code. The document.ready() method is used to load the JavaScript code. The onload() method loads the HTML code using a pre-compiled object that is passed to the onload event handler The document.ready() method loads the JavaScript code using a pre-compiled object that is passed to the document.ready event handler. The onload() method loads the HTML code using a pre-compiled object that is passed to the onload event handler The document.ready() method loads the JavaScript code using a pre-compiled object that is passed to the document.ready event handler.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "10. Describe jQuery Connect in brief. Also, list its uses.",
        "answer": "JQuery connect is a JavaScript library that provides a declarative API for binding data to elements. It allows you to specify the data source, the element that should be bound to the data, and the callback function that will be invoked when the element is bound. The most common use case for jQuery connect is binding data to an element using an attribute or value. However, it can also be used to bind data to elements dynamically or to bind data to an element based on a condition.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "11. What are the jQuery functions used to provide effects?",
        "answer": "Some of the methods are listed below which provide the effect: 1. toggle() : 1. toggle() This function is used to check the visibility of selected elements to toggle between hide() and show() for the selected elements where:\nshow() is run when the element is hidden.\nhide() is run when the element is visible.\nSyntax: $(selector).toggle(speed, easing, callback) This function is used to check the visibility of selected elements to toggle between hide() and show() for the selected elements where:\nshow() is run when the element is hidden.\nhide() is run when the element is visible. toggle hide() show() show() is run when the element is hidden.\nhide() is run when the element is visible. show() is run when the element is hidden. show() hide() is run when the element is visible. hide() Syntax: $(selector).toggle(speed, easing, callback) Syntax $(selector).toggle(speed, easing, callback) 2. slideDown() : 2. slideDown() This function is used to either check the visibility of selected elements or to show the hidden elements. We can use this function on the following types of hidden elements:\nElements that are hidden using jQuery methods.\nElements that are hidden using display: none in the element’s CSS properties.\nSyntax: $(selector).slideDown( speed, easing, callback ) This function is used to either check the visibility of selected elements or to show the hidden elements. We can use this function on the following types of hidden elements:\nElements that are hidden using jQuery methods.\nElements that are hidden using display: none in the element’s CSS properties. Elements that are hidden using jQuery methods.\nElements that are hidden using display: none in the element’s CSS properties. Elements that are hidden using jQuery methods. Elements that are hidden using display: none in the element’s CSS properties. display: none Syntax: $(selector).slideDown( speed, easing, callback ) Syntax $(selector).slideDown( speed, easing, callback ) 3. fadeOut(): 3. fadeOut() This function is used to change the level of opacity for element of choice from visible to hidden. When used, the fadded element will not occupy any space in DOM.\nSyntax: $(selector).fadeOut( speed, easing, callback ) This function is used to change the level of opacity for element of choice from visible to hidden. When used, the fadded element will not occupy any space in DOM. change the level of opacity Syntax: $(selector).fadeOut( speed, easing, callback ) Syntax $(selector).fadeOut( speed, easing, callback ) 4. fadeToggle(): 4. fadeToggle() This is used for toggling between the fadeIn() and fadeOut() methods.\nIf elements are faded in state, fadeToggle() will fade out those elements.\nIf elements are faded out, fadeToggle() will fade in those elements.\nSyntax: $(selector).fadeToggle(speed, easing, callback) This is used for toggling between the fadeIn() and fadeOut() methods.\nIf elements are faded in state, fadeToggle() will fade out those elements.\nIf elements are faded out, fadeToggle() will fade in those elements. fadeIn() fadeOut() If elements are faded in state, fadeToggle() will fade out those elements.\nIf elements are faded out, fadeToggle() will fade in those elements. If elements are faded in state, fadeToggle() will fade out those elements. If elements are faded out, fadeToggle() will fade in those elements. Syntax: $(selector).fadeToggle(speed, easing, callback) Syntax $(selector).fadeToggle(speed, easing, callback) 5. animate(): 5. animate(): The method performs custom animation of a set of CSS properties. This method changes an element from one state to another with CSS styles.\nThe CSS property value is changed gradually, to create an animated effect.\nSyntax: (selector).animate({styles},speed,easing,callback) where “styles” is a required field that specifies one or more CSS properties/values to animate. The properties need to be mentioned in camel casing style.\nThe parameters “speed”, “easing” and “callback” in the syntaxes of the above methods represent:\nspeed: Optional parameter and used for specifying the speed of the effect. The default value is 400 milliseconds. The possible value of speed are “slow”, “fast” or some number in milliseconds.\neasing: Again optional parameter is used for specifying the speed of elements to different types of animation. The default value is “swing”. The possible value of easing are “swing” and “linear”.\ncallback: Optional parameter. The callback function specified here is executed after the effect method is completed. The method performs custom animation of a set of CSS properties. This method changes an element from one state to another with CSS styles. The CSS property value is changed gradually, to create an animated effect. Syntax: (selector).animate({styles},speed,easing,callback) where “styles” is a required field that specifies one or more CSS properties/values to animate. The properties need to be mentioned in camel casing style. (selector).animate({styles},speed,easing,callback) The parameters “speed”, “easing” and “callback” in the syntaxes of the above methods represent:\nspeed: Optional parameter and used for specifying the speed of the effect. The default value is 400 milliseconds. The possible value of speed are “slow”, “fast” or some number in milliseconds.\neasing: Again optional parameter is used for specifying the speed of elements to different types of animation. The default value is “swing”. The possible value of easing are “swing” and “linear”.\ncallback: Optional parameter. The callback function specified here is executed after the effect method is completed. speed: Optional parameter and used for specifying the speed of the effect. The default value is 400 milliseconds. The possible value of speed are “slow”, “fast” or some number in milliseconds.\neasing: Again optional parameter is used for specifying the speed of elements to different types of animation. The default value is “swing”. The possible value of easing are “swing” and “linear”.\ncallback: Optional parameter. The callback function specified here is executed after the effect method is completed. speed: Optional parameter and used for specifying the speed of the effect. The default value is 400 milliseconds. The possible value of speed are “slow”, “fast” or some number in milliseconds. speed easing: Again optional parameter is used for specifying the speed of elements to different types of animation. The default value is “swing”. The possible value of easing are “swing” and “linear”. easing callback: Optional parameter. The callback function specified here is executed after the effect method is completed. callback after",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "12. What is the use of css() method in jQuery?",
        "answer": "The css() method is used to change the style property of the selected element.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "13. Which jquery method is used to hide selected elements?",
        "answer": "The hide() function in jQuery is used to try and hide the chosen element. \nFor Example - Suppose we need to hide a division tag, that consists of id = “ib”. Then the jQuery code will be - $(“#ib”).hide(); The hide() function in jQuery is used to try and hide the chosen element. For Example - Suppose we need to hide a division tag, that consists of id = “ib”. Then the jQuery code will be - $(“#ib”).hide(); For Example - $(“#ib”).hide();",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "14. What are events in jQuery?",
        "answer": "User actions on a webpage are called events and handling responses to those is called event handling. jQuery provides simple methods for attaching event handlers to selected elements. When an event occurs, the provided function is executed.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "15. How to iterate/loop through all p elements in jquery.",
        "answer": "$.each() is an object iterator tool provided by jQuery, as is.each(), a jQuery collection iterator(). So for traversing all the p elements, the sample code is - $.each() $(\"p\").each(function() { \n   console.log( $(this).attr('id')); \n}); $(\"p\").each(function() { \n   console.log( $(this).attr('id')); \n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "16. What is the significance of jQuery.length?",
        "answer": "jQuery.length property is used to count the number of the elements of the jQuery object. jQuery.length count the number of the elements",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "17. What is jQuery click event?",
        "answer": "jQuery click event happens when we click on an HTML element.\njQuery provides a method click() method that aids to trigger the click event.\nFor example, $(“p”).click() will trigger the click event whenever the elements with paragraph tag are clicked on a browser page. jQuery click event happens when we click on an HTML element. jQuery provides a method click() method that aids to trigger the click event. click() For example, $(“p”).click() will trigger the click event whenever the elements with paragraph tag are clicked on a browser page. $(“p”).click() Syntax: Syntax: $(selector).click(function(){\n //code that runs when the click event is triggered\n}); $(selector).click(function(){\n //code that runs when the click event is triggered\n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "18. What is the purpose of JQuery's delay() method? Can you use this for different types of browsers like (Internet Explorer)?",
        "answer": "The delay() method is used to set the delay between two events, such as a click or a change in state. The delay can be set to a number of different values, including milliseconds, seconds, and even hours. This can be useful when you want to wait for an event to occur before doing something else. For example - you could use a delay of 5 minutes to wait for a user to click on your button before moving on to the next step in your workflow. For example Although the delay() method is not available in all browsers. In order to use it in Internet Explorer, you will need to add the following line of code: window.addEventListener('click', function() { delay(5000); }); window.addEventListener('click', function() { delay(5000); }); But the latest Microsoft browser (Microsoft Edge) that replaces the internet explorer has support for the jQuery delay() method. In addition, the delay() method is not available in some browsers, such as Firefox and Safari. To work around this issue, you can use the setTimeout() method instead.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "19. Can you explain about ajaxStart() functions?",
        "answer": "The ajaxStart() event is a global event that occurs when an Ajax request begins, assuming no other Ajax requests are presently active. The ajaxStart() event can also be used to cancel a previously called Ajax callback or to start a new one. ajaxStart() For example, suppose you have an online shopping cart application that allows customers to add items to their shopping cart when they are ready to checkout. An ajaxStart() event could be used to trigger a shopping cart initialization routine when the user first visits the application, or any time a new shopping cart is about to be initialized. For example ajaxStart() Similarly, a shopping cart termination routine could be triggered when the user is finished shopping, or whenever a shopping cart is no longer needed.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "20. Can you explain about ajaxComplete() function?",
        "answer": "The ajaxComplete() is called regardless of whether the request is successful or fails, and a complete callback is returned, even for synchronous queries. ajaxComplete() This is very useful for error handling. If a request fails but the result is not needed immediately, it is transferred to a cache, and then called later. This is especially useful if you want to keep track of failed requests and retry those that were not successful. A typical scenario is the case of an AJAX request but no data is returned, or the data is returned but not as intended. In this case, you can call ajaxComplete() to get a new set of data and continue with your business logic. A successful AJAX request is not necessarily a reason to call ajaxComplete(). you can still do other stuff while the data is being transferred from the server to the browser. For example, you can scroll, pause the video, or show a loading indicator. ajaxComplete() For example",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "21. Describe the benefits of jQuery Ajax techniques.",
        "answer": "With the aid of DOM and JavaScript, There is a great advantage of AJAX. Ajax can request and receive data from the server without requiring a page reload. jQuery Ajax methods are a powerful way to make your web applications more responsive. They enable you to take advantage of the power of Ajax by using JavaScript to make your web pages load faster and more efficiently. By using jQuery Ajax methods, you can take advantage of the power of Ajax by using JavaScript to make your web pages load faster and more efficiently. The following advantages of the AJAX Methods are - It allows us to eliminate the complete page reload and instead load only a portion of the page.\nAPI that is simple.\nCross-browser compatibility.\nPOST and GET are supported.\nUpload a JSON, XML, HTML, or script file. It allows us to eliminate the complete page reload and instead load only a portion of the page. API that is simple. Cross-browser compatibility. POST and GET are supported. Upload a JSON, XML, HTML, or script file.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "22. Can you tell something about jQuery each() method?",
        "answer": "The each() method in jQuery allows us to loop through different datasets such as arrays or objects (even DOM objects).\nIt can be used to loop through a number of DOM objects from the same selectors.\nFor example, if you want to add a width=“600” to all the images in a page then we select all images and loop through each of them and add width = \"600\" to each tag. We can write the code as below: The each() method in jQuery allows us to loop through different datasets such as arrays or objects (even DOM objects). It can be used to loop through a number of DOM objects from the same selectors. For example, if you want to add a width=“600” to all the images in a page then we select all images and loop through each of them and add width = \"600\" to each tag. We can write the code as below: $(\"img\").each(function(im){\n    $(this).attr(\"width\",\"600\")\n}); $(\"img\").each(function(im){\n    $(this).attr(\"width\",\"600\")\n}); $ is a jQuery object definer. In the above syntax, “this” is a DOM object and we can apply jQuery functions to only jQuery objects which is why we convert the DOM object to jQuery object by wrapping it inside the $ definer.\nWe can also use each() to loop through the arrays of data and get the index and the value of the position of data inside the array.\nFor example, $ is a jQuery object definer. In the above syntax, “this” is a DOM object and we can apply jQuery functions to only jQuery objects which is why we convert the DOM object to jQuery object by wrapping it inside the $ definer. $ We can also use each() to loop through the arrays of data and get the index and the value of the position of data inside the array. For example, var list = [\"InterviewBit\", \"jQuery\", \"Questions\"];\n$.each(list, function(index, value){\n    console.log(index + \" \"+ value);\n}) var list = [\"InterviewBit\", \"jQuery\", \"Questions\"];\n$.each(list, function(index, value){\n    console.log(index + \" \"+ value);\n}) The above code prints The above code prints 0 InterviewBit\n1 jQuery\n2 Questions 0 InterviewBit\n1 jQuery\n2 Questions You can also use each() to loop through objects.\nFor example: You can also use each() to loop through objects. For example: var obj = {\"name\":\"InterviewBit\",\"type\": \"jQuery\"};\n$.each(obj, function(key,value){\n   console.log(key + \" - \" + value);\n}) var obj = {\"name\":\"InterviewBit\",\"type\": \"jQuery\"};\n$.each(obj, function(key,value){\n   console.log(key + \" - \" + value);\n}) The above code prints: The above code prints: name - InterviewBit\ntype - jQuery name - InterviewBit\ntype - jQuery",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "23. What is CDN?",
        "answer": "CDN is an acronym that stands for Content Delivery Network or Content Distribution Network. It is a big distributed system of servers spread throughout the internet in many data centres. It downloads content from servers at a greater bandwidth, resulting in speedier loading times. Several firms offer free public CDNs, including Google, Amazon, Microsoft, Yahoo, etc.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "24. What is the difference between javascript and jquery?",
        "answer": "JavaScript is an interpreted language written in C and is a combination of ECMAScript and DOM whereas jQuery is a JavaScript library developed to run things faster and make things simplified for JavaScript. jQuery doesn't have the ECMAScript.\nJavaScript requires long lines of code to code a functionality whereas in the case of jQuery, just import the library and call the functions which would reduce the programmer’s effort in coding.\nJavaScript doesn't have cross-browser compatible functionality which is why a developer has to write code manually to implement the functionality. Whereas the cross-browser code compatibility is inbuilt in jQuery. JavaScript is an interpreted language written in C and is a combination of ECMAScript and DOM whereas jQuery is a JavaScript library developed to run things faster and make things simplified for JavaScript. jQuery doesn't have the ECMAScript. JavaScript requires long lines of code to code a functionality whereas in the case of jQuery, just import the library and call the functions which would reduce the programmer’s effort in coding. JavaScript doesn't have cross-browser compatible functionality which is why a developer has to write code manually to implement the functionality. Whereas the cross-browser code compatibility is inbuilt in jQuery.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "25. In jQuery, what is the difference between the $(window).load and $(document).ready functions?",
        "answer": "$(window).load $(document).ready\n$(window).load is an event that occurs when the DOM and another page's contents are fully loaded. This event occurs following the ready event. In most circumstances, the script may be run as soon as the DOM has finished loading. The ready() method is typically the ideal location to write JavaScript code\nHowever, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture.\nOnce the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything.\nWhen a function needs to be made available after the document has loaded, use the ready() method. Whatever code you include in the $(document).ready() method will be executed once the DOM of the page is prepared to run JavaScript code. $(window).load $(document).ready\n$(window).load is an event that occurs when the DOM and another page's contents are fully loaded. This event occurs following the ready event. In most circumstances, the script may be run as soon as the DOM has finished loading. The ready() method is typically the ideal location to write JavaScript code\nHowever, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture.\nOnce the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything.\nWhen a function needs to be made available after the document has loaded, use the ready() method. Whatever code you include in the $(document).ready() method will be executed once the DOM of the page is prepared to run JavaScript code. $(window).load $(document).ready $(window).load $(document).ready $(window).load $(document).ready $(window).load is an event that occurs when the DOM and another page's contents are fully loaded. This event occurs following the ready event. In most circumstances, the script may be run as soon as the DOM has finished loading. The ready() method is typically the ideal location to write JavaScript code\nHowever, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture.\nOnce the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything.\nWhen a function needs to be made available after the document has loaded, use the ready() method. Whatever code you include in the $(document).ready() method will be executed once the DOM of the page is prepared to run JavaScript code. $(window).load is an event that occurs when the DOM and another page's contents are fully loaded. This event occurs following the ready event. In most circumstances, the script may be run as soon as the DOM has finished loading. The ready() method is typically the ideal location to write JavaScript code $(window).load is an event that occurs when the DOM and another page's contents are fully loaded. This event occurs following the ready event. In most circumstances, the script may be run as soon as the DOM has finished loading. The ready() method is typically the ideal location to write JavaScript code However, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture.\nOnce the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything.\nWhen a function needs to be made available after the document has loaded, use the ready() method. Whatever code you include in the $(document).ready() method will be executed once the DOM of the page is prepared to run JavaScript code. However, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture.\nOnce the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything. However, there may be times when you need to write scripts in the load() method. For instance, to determine the true width and height of a picture. Once the DOM, CSS, pictures, and frames are entirely loaded, the $(window).load event is called. As a result, it is the optimal area to write jQuery code to determine the real picture size or to obtain information about anything. When a function needs to be made available after the document has loaded, use the ready() method. Whatever code you include in the $(document).ready() method will be executed once the DOM of the page is prepared to run JavaScript code.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "26. What exactly is a jQuery Data Table plug-in? Also, explain the uses with examples.",
        "answer": "A data table plug-in is a jQuery plugin that can be used to create custom tables. It allows you to create a table with a custom layout, without having to write any code. It can be used to create tables with different layouts, or even to create tables with custom columns. The data table plug-in is a great way to add extra functionality to your websites, especially if you want to add a table to your website that is not included in the default layout. Some of the uses for data tables are listed below - Some of the uses for data tables are listed below - Data tables are great for displaying a lot of data at once. For example, you could display a list of products on your website. You could also display the same data in a table in your blog.\nData tables are also great for displaying information that you want your visitors to see. For example, you could display a list of products that you're selling on your website. You could also display the same information in a table in your blog.\nData tables are great for showing a lot of information in one place. For example, you could display a list. of products on your website and then add additional information about each product in the table. Data tables are great for displaying a lot of data at once. For example, you could display a list of products on your website. You could also display the same data in a table in your blog. For example Data tables are also great for displaying information that you want your visitors to see. For example, you could display a list of products that you're selling on your website. You could also display the same information in a table in your blog. For example Data tables are great for showing a lot of information in one place. For example, you could display a list. of products on your website and then add additional information about each product in the table. For example",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "27. What is the purpose of JQuery's serialize() method?",
        "answer": "The serialize() method is a utility method of the jQuery library that allows you to serialize data from a DOM element and return it in a format that can be used by other libraries. This is useful when you want to pass data between different libraries or frameworks, or if you want to create a custom API that can be used by other developers. For example - if you want to pass JSON data from your application to a third-party API, you can use the serialize() method to serialize the data and then pass it to the API. This way, the API knows how to handle the data, and you don't have to worry about the format of the data. For example The serialize() method is also useful when you need to send data between different browsers. For example - if you want to send JSON data from one browser to another, you can use the serialize() method to serialize the data and then send it using a custom HTTP request. For example If you're not sure what data you need to serialize, there's an easy way to find out: Just type \"serialize\" into the console. You'll see a list of all the methods that are available on your element. ul> li>serialize/li> li>unserialize/li> /ul> div id=\"example\"> ul> li>serialize/li> li>unserialize/li> /ul> /div>",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "28. What are the selectors in jQuery? How many types of selectors in jQuery?",
        "answer": "In order to work with any element on the web page, we would first need to find it. Selectors find the HTML elements in jQuery. Some of the most commonly used and basic selectors are: Name: Used to select all elements which match the given element Name.\n#ID: Used to select a single element which matches with the given ID\n.Class: Used to select all elements which match with the given Class.\nUniversal (*): Used to select all elements available in a DOM.\nMultiple Elements E, F, G: Used to select the combined results of all the specified selectors E, F or G.\nAttribute Selector: Used to select elements based on their attribute value. Name: Used to select all elements which match the given element Name. #ID: Used to select a single element which matches with the given ID .Class: Used to select all elements which match with the given Class. Universal (*): Used to select all elements available in a DOM. Multiple Elements E, F, G: Used to select the combined results of all the specified selectors E, F or G. Attribute Selector: Used to select elements based on their attribute value.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "29. Explain how CSS classes can be manipulated in HTML using jQuery.",
        "answer": "Query provides several methods to manipulate the CSS classes assigned to HTML elements. The most important methods are addClass(), removeClass() and toggleClass(). addClass(): This method adds one or more classes to the selected elements.\nSyntax: $(selector).addClass(className);\nYou can also add multiple classes to the selector. Syntax:$(selector).addClass(class1, class2);\nremoveClass(): Similar to adding class, you can also remove the classes from the elements by using this method.\nThe removeClass() method can remove a single class, multiple classes, or all classes at once from the selected elements.\nSyntax:\nFor removing one class: $(selector).removeClass(class1);\nFor removing multiple class: $(selector).removeClass(class1, class2, class 3);\nFor removing all classes at once: $(selector).removeClass()\ntoggleClass(): This method is used for adding or removing one or more classes from the selected elements in such a way that if the selected element already has the class, then it is removed. Else if an element does not have the specified class, then it is added i.e. it toggles the application of classes.\nSyntax: $(selector).toggleClass(className); addClass(): This method adds one or more classes to the selected elements.\nSyntax: $(selector).addClass(className);\nYou can also add multiple classes to the selector. Syntax:$(selector).addClass(class1, class2); addClass() Syntax: $(selector).addClass(className);\nYou can also add multiple classes to the selector. Syntax:$(selector).addClass(class1, class2); Syntax: $(selector).addClass(className); $(selector).addClass(className); You can also add multiple classes to the selector. Syntax:$(selector).addClass(class1, class2); $(selector).addClass(class1, class2); removeClass(): Similar to adding class, you can also remove the classes from the elements by using this method.\nThe removeClass() method can remove a single class, multiple classes, or all classes at once from the selected elements.\nSyntax:\nFor removing one class: $(selector).removeClass(class1);\nFor removing multiple class: $(selector).removeClass(class1, class2, class 3);\nFor removing all classes at once: $(selector).removeClass() removeClass() The removeClass() method can remove a single class, multiple classes, or all classes at once from the selected elements.\nSyntax:\nFor removing one class: $(selector).removeClass(class1);\nFor removing multiple class: $(selector).removeClass(class1, class2, class 3);\nFor removing all classes at once: $(selector).removeClass() The removeClass() method can remove a single class, multiple classes, or all classes at once from the selected elements. Syntax:\nFor removing one class: $(selector).removeClass(class1);\nFor removing multiple class: $(selector).removeClass(class1, class2, class 3);\nFor removing all classes at once: $(selector).removeClass() For removing one class: $(selector).removeClass(class1);\nFor removing multiple class: $(selector).removeClass(class1, class2, class 3);\nFor removing all classes at once: $(selector).removeClass() For removing one class: $(selector).removeClass(class1); $(selector).removeClass(class1); For removing multiple class: $(selector).removeClass(class1, class2, class 3); $(selector).removeClass(class1, class2, class 3); For removing all classes at once: $(selector).removeClass() $(selector).removeClass() toggleClass(): This method is used for adding or removing one or more classes from the selected elements in such a way that if the selected element already has the class, then it is removed. Else if an element does not have the specified class, then it is added i.e. it toggles the application of classes.\nSyntax: $(selector).toggleClass(className); toggleClass() toggles Syntax: $(selector).toggleClass(className); Syntax: $(selector).toggleClass(className); $(selector).toggleClass(className);",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "30. State some different types of jQuery Methods.",
        "answer": "jQuery provides a variety of methods for doing various tasks, such as manipulating the DOM, events, and ajax. The table below covers many technique categories. Essential Methods Characterization Classification\nafter(), append(), attr(), before(), etc. These methods alter DOM elements in some way, such as modifying attributes, style attributes, adding and deleting elements, and so on. DOM Manipulation\naddClass(), CSS(), hasClass(), removeClass(), toggleClass(), etc. These methods retrieve and set CSS attributes of elements. CSS\nattr(), html(), HTMLremoveAttr(), prop(), val(), etc. These methods retrieve and set element DOM properties. Attributes\nbind(), blur(), change(), click(), focus(), keyup(), keydown(), etc. These methods deal with DOM or JavaScript events. Events\nanimate(), fadeIn(), fadeOut(), hide(), show(), stop(), etc. These techniques are used to provide elements of animation. Effects\nget(), getJson(), post(), load(), etc. These techniques provide Ajax functionality with jQuery. AJAX\nchildren(), closest(), each(), first(), next(), filter(),\nparent(), siblings(), etc.\nThese methods assist in traversing from one DOM element to another in a parent-child hierarchy, such as locating ancestors, descendants, or sister elements of a specific element. Traversing\nblur(), change(), val(), submit(), etc. Forms and their many components are handled by these methods and event handlers. Forms\ninArray(), isArray(), isFunction(), isNumeric(), isWindow(), isXmlDoc(), etc. Utility methods are useful for obtaining information about various objects, such as a browser, function, array, or window. Utilities Essential Methods Characterization Classification\nafter(), append(), attr(), before(), etc. These methods alter DOM elements in some way, such as modifying attributes, style attributes, adding and deleting elements, and so on. DOM Manipulation\naddClass(), CSS(), hasClass(), removeClass(), toggleClass(), etc. These methods retrieve and set CSS attributes of elements. CSS\nattr(), html(), HTMLremoveAttr(), prop(), val(), etc. These methods retrieve and set element DOM properties. Attributes\nbind(), blur(), change(), click(), focus(), keyup(), keydown(), etc. These methods deal with DOM or JavaScript events. Events\nanimate(), fadeIn(), fadeOut(), hide(), show(), stop(), etc. These techniques are used to provide elements of animation. Effects\nget(), getJson(), post(), load(), etc. These techniques provide Ajax functionality with jQuery. AJAX\nchildren(), closest(), each(), first(), next(), filter(),\nparent(), siblings(), etc.\nThese methods assist in traversing from one DOM element to another in a parent-child hierarchy, such as locating ancestors, descendants, or sister elements of a specific element. Traversing\nblur(), change(), val(), submit(), etc. Forms and their many components are handled by these methods and event handlers. Forms\ninArray(), isArray(), isFunction(), isNumeric(), isWindow(), isXmlDoc(), etc. Utility methods are useful for obtaining information about various objects, such as a browser, function, array, or window. Utilities Essential Methods Characterization Classification Essential Methods Characterization Classification Essential Methods Characterization Classification after(), append(), attr(), before(), etc. These methods alter DOM elements in some way, such as modifying attributes, style attributes, adding and deleting elements, and so on. DOM Manipulation\naddClass(), CSS(), hasClass(), removeClass(), toggleClass(), etc. These methods retrieve and set CSS attributes of elements. CSS\nattr(), html(), HTMLremoveAttr(), prop(), val(), etc. These methods retrieve and set element DOM properties. Attributes\nbind(), blur(), change(), click(), focus(), keyup(), keydown(), etc. These methods deal with DOM or JavaScript events. Events\nanimate(), fadeIn(), fadeOut(), hide(), show(), stop(), etc. These techniques are used to provide elements of animation. Effects\nget(), getJson(), post(), load(), etc. These techniques provide Ajax functionality with jQuery. AJAX\nchildren(), closest(), each(), first(), next(), filter(),\nparent(), siblings(), etc.\nThese methods assist in traversing from one DOM element to another in a parent-child hierarchy, such as locating ancestors, descendants, or sister elements of a specific element. Traversing\nblur(), change(), val(), submit(), etc. Forms and their many components are handled by these methods and event handlers. Forms\ninArray(), isArray(), isFunction(), isNumeric(), isWindow(), isXmlDoc(), etc. Utility methods are useful for obtaining information about various objects, such as a browser, function, array, or window. Utilities after(), append(), attr(), before(), etc. These methods alter DOM elements in some way, such as modifying attributes, style attributes, adding and deleting elements, and so on. DOM Manipulation after(), append(), attr(), before(), etc. These methods alter DOM elements in some way, such as modifying attributes, style attributes, adding and deleting elements, and so on. DOM Manipulation addClass(), CSS(), hasClass(), removeClass(), toggleClass(), etc. These methods retrieve and set CSS attributes of elements. CSS addClass(), CSS(), hasClass(), removeClass(), toggleClass(), etc. These methods retrieve and set CSS attributes of elements. CSS attr(), html(), HTMLremoveAttr(), prop(), val(), etc. These methods retrieve and set element DOM properties. Attributes attr(), html(), HTMLremoveAttr(), prop(), val(), etc. These methods retrieve and set element DOM properties. Attributes bind(), blur(), change(), click(), focus(), keyup(), keydown(), etc. These methods deal with DOM or JavaScript events. Events bind(), blur(), change(), click(), focus(), keyup(), keydown(), etc. These methods deal with DOM or JavaScript events. Events animate(), fadeIn(), fadeOut(), hide(), show(), stop(), etc. These techniques are used to provide elements of animation. Effects animate(), fadeIn(), fadeOut(), hide(), show(), stop(), etc. These techniques are used to provide elements of animation. Effects get(), getJson(), post(), load(), etc. These techniques provide Ajax functionality with jQuery. AJAX get(), getJson(), post(), load(), etc. These techniques provide Ajax functionality with jQuery. AJAX children(), closest(), each(), first(), next(), filter(),\nparent(), siblings(), etc.\nThese methods assist in traversing from one DOM element to another in a parent-child hierarchy, such as locating ancestors, descendants, or sister elements of a specific element. Traversing children(), closest(), each(), first(), next(), filter(),\nparent(), siblings(), etc. children(), closest(), each(), first(), next(), filter(), parent(), siblings(), etc. These methods assist in traversing from one DOM element to another in a parent-child hierarchy, such as locating ancestors, descendants, or sister elements of a specific element. Traversing blur(), change(), val(), submit(), etc. Forms and their many components are handled by these methods and event handlers. Forms blur(), change(), val(), submit(), etc. Forms and their many components are handled by these methods and event handlers. Forms inArray(), isArray(), isFunction(), isNumeric(), isWindow(), isXmlDoc(), etc. Utility methods are useful for obtaining information about various objects, such as a browser, function, array, or window. Utilities inArray(), isArray(), isFunction(), isNumeric(), isWindow(), isXmlDoc(), etc. Utility methods are useful for obtaining information about various objects, such as a browser, function, array, or window. Utilities",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "31. Explain jQuery no-conflict.",
        "answer": "jQuery no-conflict is a jQuery option that allows you to avoid conflicts between various javascript frameworks or libraries. When you utilize jQuery's no-conflict mode, you substitute the $ variable with a new variable and assign jQuery to other JavaScript libraries. In addition, the $ symbol is utilized as a function or variable name in jQuery. $ $ When no conflict is enabled, the $ symbol in jQuery becomes the global function name and not the library name. For example, you may use the $ function to access other libraries' data, but not their code. You can also use this option to avoid conflicts between various jQuery plugins. For example",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "32. In jQuery, distinguish between the bind(), live(), and delegate() functions.",
        "answer": "The bind() function does not connect events to items added after loading the DOM. In contrast, the live() and delegate() methods also attach events to future items. bind() live() delegate() The distinction between live() and delegate() methods is that live() does not support chaining. It will only function on a selection or an element. However, the delegate() function supports chaining. live() delegate() live() delegate() The bind() method works only within a dom element. If you want to bind events to items in a different element, you can use the delegate() function. The bind() method is not recommended for use in JavaScript. It is a best practice to call event handlers on items as they are added to the DOM. The bind() method is only used to control the order in which items are displayed. If you need to add items to a different order, you can use the delegate() function. The bind() method is not intended to be used in a production environment. It does not offer the same performance benefits as the delegate() method. bind() delegate() bind() bind() delegate() bind() delegate() For Example - Consider the below code - For Example - $(document).ready(function(){\n    $(\"#interviewbit\").find(\"p\").live(\"click\", function(){\n      alert(\"Welcome to InterviewBit jQuery Interview Questions\");\n    });\n}); $(document).ready(function(){\n    $(\"#interviewbit\").find(\"p\").live(\"click\", function(){\n      alert(\"Welcome to InterviewBit jQuery Interview Questions\");\n    });\n}); The live() method does not work in the given code, but we can easily do this using the delegate() function. So the code will be like this - $(document).ready(function(){\n    $(\".interviewbit\")children(\"p\").delegate(\"a\",\"click\", function(){\n      alert(\"you clicked on a link to jQuery interview questions.\");\n    });\n}); $(document).ready(function(){\n    $(\".interviewbit\")children(\"p\").delegate(\"a\",\"click\", function(){\n      alert(\"you clicked on a link to jQuery interview questions.\");\n    });\n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "1. Would you still favor jQuery in a case when things can be done simply using javascript?",
        "answer": "No. If we can accomplish our goals using simple JavaScript, then we should avoid using jQuery. It is because the jQuery library is always xx kilobytes in size, thus there is no use in wasting bandwidth. And because jQuery is built on top of javascript, it has numerous functions that are more complicated than the simple job you can accomplish with javascript. jQuery will also load all dependencies. It will have some speed issues as compared to the javascript code.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "2. Is it possible to pause or postpone the execution of the document.ready for a period of time?",
        "answer": "Yes, that is possible. With the release of jQuery 1.6, a new method called \"jQuery.holdReady(hold)\" was added. This function allows you to postpone the execution of the document.ready() event. The document.ready() event is triggered as soon as your DOM is ready, however, there may be occasions when you wish to load extra JavaScript or plugins that you have referenced. document.ready()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "3. What is event.stopPropagation()?",
        "answer": "event.stopPropagation() stops the event from propagating up the DOM tree, preventing any parent handlers from being notified of the event. For example, if a link with a click method is linked inside of a DIV or FORM that also has a click method attached, the DIV or FORM click method will not fire. event.stopPropagation()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "4. What Are the Benefits of Using Jquery Instead of Javascript in an Asp.net Web Application?",
        "answer": "Below are some of the benefits of using jQuery instead of javascript in ASP.net Web Application - Jquery is well-written optimized javascript code, thus it will execute quicker until we create the same standard optimized javascript code.\nJquery is javascript code that is succinct, which implies that it requires the least amount of code to do the same functionality as javascript.\nJquery makes Javascript development faster since much of the functionality is already provided in the library and we only need to access it.\nBecause Jquery supports cross-browser compatibility, we save time on supporting all browsers. Jquery is well-written optimized javascript code, thus it will execute quicker until we create the same standard optimized javascript code. Jquery is javascript code that is succinct, which implies that it requires the least amount of code to do the same functionality as javascript. Jquery makes Javascript development faster since much of the functionality is already provided in the library and we only need to access it. Because Jquery supports cross-browser compatibility, we save time on supporting all browsers.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "5. Explain the use of event.preventDefault() method.",
        "answer": "Event.PreventDefault is a jQuery event that stops an event from firing when the user clicks on a link or other trigger. It basically stops the default behaviour of the triggers and allows any other event to occur. It is useful for preventing unwanted events from firing when a user clicks on a link or other trigger. This can be useful when you want to prevent users from accidentally clicking on links that open up new windows or tabs. Event.PreventDefault When you use an event like click or keypress, you can prevent the event from firing by adding the event.preventDefault() method to the event object. When you use event.preventDefault(), the event will not fire unless the user clicks on a link or other trigger. event.preventDefault() event.preventDefault() Event.preventDefault() is only available in jQuery 1.7 and later versions of jQuery. Event.preventDefault() Example - Assume you're developing an AJAX-based application in which you need to submit form data through AJAX when a button in the form is clicked. So, if you click on a button without preventing it, the button behaves normally and the website reloads. As a result, the other event will not occur when you click the button. So, if we use prevent default there, we can skip the button's default behaviour and instead perform the AJAX event and alter the HTML DOM accordingly. Example - -",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "6. Can you describe the various methods for extracting a query text using regular expressions?",
        "answer": "There are two methods for obtaining a query string using regular expressions. String-based approach: This method aids in the generation of Strings by comparing similar regular expressions using the.replace() function.\nRegular Express Based Approach: When compared to strings in JavaScript, the regular expression technique is the most powerful method for extracting a query string and pattern. Using the.exec() and.test() methods to compare against patterns. Other String methods include match(), matchAll(), replace(), search(), and split(). String-based approach: This method aids in the generation of Strings by comparing similar regular expressions using the.replace() function. String-based approach: the.replace() Regular Express Based Approach: When compared to strings in JavaScript, the regular expression technique is the most powerful method for extracting a query string and pattern. Using the.exec() and.test() methods to compare against patterns. Other String methods include match(), matchAll(), replace(), search(), and split(). Regular Express Based Approach: regular expression technique",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "7. In jQuery, what is the difference between $(this) and this.",
        "answer": "$(this) is a jQuery object, whereas this is a JavaScript global object reference. We may refer to DOM elements in HTML documents using this.\n$(this) refers to the parent object, whereas this is a DOM element that, in the case of an array, represents an object with the .each() method, which shows the current iteration. $(this) is a jQuery object, whereas this is a JavaScript global object reference. We may refer to DOM elements in HTML documents using this. $(this) this this $(this) refers to the parent object, whereas this is a DOM element that, in the case of an array, represents an object with the .each() method, which shows the current iteration. $(this) this .each() We use this as an alternative to this.parent() to refer to the parent object in JavaScript. This is more convenient than using this.parent(). We can also use this to refer to other elements in HTML, as in an ul element: this.parent() this.parent(). ul var myElement = $('ul').each(function() { \n    var childElement = this.parent().nextSibling(); \n}); var myElement = $('ul').each(function() { \n    var childElement = this.parent().nextSibling(); \n}); This is useful when you need to iterate over a list of elements and their children, but you do not want to reference the parent object.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "8. Explain the benefits of using a CDN for the jQuery files.",
        "answer": "Hosting jQuery on a Content Delivery Network (CDN) improves availability and performance at a reduced cost and with less network traffic, improves latency (the time it takes to send and receive a data packet from the server), and provides a device-specific version of the contents. CDNs are a great way to host your JavaScript and CSS files. By caching these files, you can reduce the amount of time it takes for your site to load, making it faster and more responsive. This is especially important for sites that serve large amounts of content, such as blogs or e-commerce sites. By using a CDN, you can also reduce the number of load times that occur when visitors access your site. In addition, by hosting your JavaScript and CSS files on a CDN, you can also reduce the amount of bandwidth that is consumed by your site. Example - It makes it simple to maintain responsiveness for mobile screen sizes, as well as safe storage space for important data or files. Example - Caching JavaScript and CSS files on a CDN is an important optimization that should be considered when building a site with a lot of JavaScript and CSS files.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "9. Distinguish between jquery.min.js and jquery.js.",
        "answer": "The functionality of jquery.min.js and jquery.js is the same. However, If you are serving a page that contains a lot of JavaScript, it is a good idea to minify it. Minifying JavaScript (jquery.min.js) reduces the size of your file and makes it faster to load on all platforms. Minifying your code also reduces the chances that erroneous code will be rendered as a malicious attack because it makes it more difficult to test. With minified JavaScript, you will get better page performance, faster loading, and shorter wait times for your visitors. (jquery.min.js) There are also some of the major advantages of the jquery.min.js. - jquery.min.js. When JS files are minified in a production environment, they load faster and provide faster and better page performance.\nMinifying a script also reduces the size of the file in the server’s temporary directory and browser cache, which results in a faster download and a smaller server response.\nAnother advantage of using minified JS is that it removes the need to include any external JS files in the HTML document. This makes it easier to structure the code and easier to edit the code. When JS files are minified in a production environment, they load faster and provide faster and better page performance. Minifying a script also reduces the size of the file in the server’s temporary directory and browser cache, which results in a faster download and a smaller server response. Another advantage of using minified JS is that it removes the need to include any external JS files in the HTML document. This makes it easier to structure the code and easier to edit the code.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "10. Explain the operation of the jQuery connect() method.",
        "answer": "The connect() method of jQuery is a utility function that allows you to create a new jQuery object and pass it to the jQuery object's constructor. This allows you to create a new object with the same functionality as the original object, but without having to manually set up the object's properties. For example, you can pass in an existing jQuery object and it will be automatically set up to use the same properties as the original object.\nWhen using connect() method, you can pass in a callback function that will be called when the new object is ready. The callback function can be used to perform any additional setup that needs to be done before the new object can be used. \nFor example - you can set up a data source using the data() method of jQuery. When using connect() method, you can pass in a callback function that will be called when the new object is ready. The connect() method of jQuery is a utility function that allows you to create a new jQuery object and pass it to the jQuery object's constructor. This allows you to create a new object with the same functionality as the original object, but without having to manually set up the object's properties. For example, you can pass in an existing jQuery object and it will be automatically set up to use the same properties as the original object. connect() When using connect() method, you can pass in a callback function that will be called when the new object is ready. The callback function can be used to perform any additional setup that needs to be done before the new object can be used. connect() For example - you can set up a data source using the data() method of jQuery. When using connect() method, you can pass in a callback function that will be called when the new object is ready. For example connect()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "1. Can you tell the difference between prop() and attr()s?",
        "answer": "Both prop() and attr() can be used to get or set the value of the specified property of an element attribute.\nThe attr() gives the default value of a property whereas prop() returns its current value. Both prop() and attr() can be used to get or set the value of the specified property of an element attribute. prop() attr() The attr() gives the default value of a property whereas prop() returns its current value. attr() default value prop() current value Conclusion A JavaScript library called jQuery makes it simple to construct dynamic web pages. It contributes to the efficiency and interactivity of web applications. It also facilitates the usage of a number of functions that may be used to alter data, which speeds up the development process. JQuery has some important uses like - DOM manipulations, Availability of different plugins according to the work, Animation and AJAX Support, Support for Cross browsers, etc. jQuery is a lightweight library that can be easily integrated into any website. We have seen all the most frequently asked questions related to jquery in the interview. Additional Interview Resources https://www.interviewbit.com/html-interview-questions/\nhttps://www.interviewbit.com/javascript-interview-questions/\nhttps://www.interviewbit.com/technical-interview-questions/\nhttps://www.interviewbit.com/blog/top-javascript-libraries/\nhttps://www.interviewbit.com/blog/best-front-end-frameworks/\nhttps://www.interviewbit.com/blog/javascript-projects/\nhttps://www.interviewbit.com/javascript-mcq/\nhttps://www.interviewbit.com/blog/javascript-vs-jquery/ https://www.interviewbit.com/html-interview-questions/ https://www.interviewbit.com/html-interview-questions/ https://www.interviewbit.com/javascript-interview-questions/ https://www.interviewbit.com/javascript-interview-questions/ https://www.interviewbit.com/technical-interview-questions/ https://www.interviewbit.com/technical-interview-questions/ https://www.interviewbit.com/blog/top-javascript-libraries/ https://www.interviewbit.com/blog/top-javascript-libraries/ https://www.interviewbit.com/blog/best-front-end-frameworks/ https://www.interviewbit.com/blog/best-front-end-frameworks/ https://www.interviewbit.com/blog/javascript-projects/ https://www.interviewbit.com/blog/javascript-projects/ https://www.interviewbit.com/javascript-mcq/ https://www.interviewbit.com/javascript-mcq/ https://www.interviewbit.com/blog/javascript-vs-jquery/",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "2. Can you provide an example of chaining using a code snippet?",
        "answer": "Old Code: Old Code: $(document).ready(function(){\n    $('#id').addClass('ib);\n    $('#id').css('color', 'blue);\n    $('#id').fadeIn('slow');\n}); $(document).ready(function(){\n    $('#id').addClass('ib);\n    $('#id').css('color', 'blue);\n    $('#id').fadeIn('slow');\n}); New Code after Chaining: New Code after Chaining: $(document).ready(function(){\n    $('#id').addClass('ib)\n    .css('color', 'blue')\n    .fadeIn('slow); \n}); $(document).ready(function(){\n    $('#id').addClass('ib)\n    .css('color', 'blue')\n    .fadeIn('slow); \n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "3. Consider the below code snippet and assume that there are 5 <div> elements on the page. What is the difference between the start and end times displayed?",
        "answer": "function getMinsSeconds() {\n  var dt = new Date();\n  return dt.getMinutes()+\":\"+dt.getSeconds();\n}\n\n$( \"input\" ).on( \"click\", function() {\n  $( \"p\" ).append( \"Start: \" + getMinsSeconds() + \"<br />\" );\n  $( \"div\" ).each(function( i ) {\n        $( this ).fadeOut( 1000 * ( i * 2 ) );\n  });\n  $( \"div\" ).promise().done(function() {\n        $( \"p\" ).append( \"End: \" + getMinsSeconds() + \"<br />\" );\n  });\n}); function getMinsSeconds() {\n  var dt = new Date();\n  return dt.getMinutes()+\":\"+dt.getSeconds();\n}\n\n$( \"input\" ).on( \"click\", function() {\n  $( \"p\" ).append( \"Start: \" + getMinsSeconds() + \"<br />\" );\n  $( \"div\" ).each(function( i ) {\n        $( this ).fadeOut( 1000 * ( i * 2 ) );\n  });\n  $( \"div\" ).promise().done(function() {\n        $( \"p\" ).append( \"End: \" + getMinsSeconds() + \"<br />\" );\n  });\n}); For the above code, the difference between the start and end times will be 10 seconds.\nThis is because .promise() will wait for all <div> animations (here, all fadeOut() calls) to complete, the last one will complete 10 seconds (i.e. 5 * 2 = 10 seconds) after the fadeOut() starts. For the above code, the difference between the start and end times will be 10 seconds. 10 seconds This is because .promise() will wait for all <div> animations (here, all fadeOut() calls) to complete, the last one will complete 10 seconds (i.e. 5 * 2 = 10 seconds) after the fadeOut() starts. .promise() <div> fadeOut() fadeOut()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "4. Write A Jquery Code Snippet To Sort A String Array?",
        "answer": "$(document).ready(function(){\n    var arr = [ \"jQuery\",\"Interview\",\"Questions\",\"By\",\"InterviewBit\"];\n    sortedArr = arr.sort();\n    $(\"#elementId\").html(sortedArr.join(\"\"));\n}); $(document).ready(function(){\n    var arr = [ \"jQuery\",\"Interview\",\"Questions\",\"By\",\"InterviewBit\"];\n    sortedArr = arr.sort();\n    $(\"#elementId\").html(sortedArr.join(\"\"));\n}); The Output will be [\"By\",\"InterviewBit\",\"Interview\",\"jQuery\",\"Questions\"] [\"By\",\"InterviewBit\",\"Interview\",\"jQuery\",\"Questions\"]",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "5. Explain the .promise() method in jQuery.",
        "answer": "The .promise() method returns a dynamically generated promise that is resolved when all actions of a certain type bound to the collection, queued or not, have ended.\nThe method takes two optional arguments:\ntype - The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed.\ntarget - If a target object is specified, .promise() will attach to promise to that specified object and then return it rather than creating a new one. The .promise() method returns a dynamically generated promise that is resolved when all actions of a certain type bound to the collection, queued or not, have ended. .promise() all actions have ended. The method takes two optional arguments:\ntype - The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed.\ntarget - If a target object is specified, .promise() will attach to promise to that specified object and then return it rather than creating a new one. type - The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed.\ntarget - If a target object is specified, .promise() will attach to promise to that specified object and then return it rather than creating a new one. type - The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed. type target - If a target object is specified, .promise() will attach to promise to that specified object and then return it rather than creating a new one. target .promise()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "6. Can you write a jQuery code selector that needs to be used for querying all elements whose ID ends with string “IB”?",
        "answer": "We can use the following selector: $(\"[id$='IB']\") $(\"[id$='IB']\")",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "7. How do you disable elements in Jquery Using \"attr\"?",
        "answer": "$('class_or_id_of_element_to_disable').attr('disabled', true);\n$('class_or_id_of_element_to_disable').attr('disabled', false); $('class_or_id_of_element_to_disable').attr('disabled', true);\n$('class_or_id_of_element_to_disable').attr('disabled', false);",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "8. Which of the two lines of code below is more efficient and why?",
        "answer": "document.getElementById(\"interviewBit\"); OR $(\"#interviewBit\"); document.getElementById(\"interviewBit\"); $(\"#interviewBit\"); The code document.getElementById( \"interviewBit\" ); is more efficient because its the pure JavaScript version.\nThe reason being jQuery is built on top of JavaScript and internally uses its methods to make DOM manipulation easier. This introduces some performance overhead. We need to remember that jQuery is not always better than pure JavaScript and we need to use it only if it adds advantage to our project. The code document.getElementById( \"interviewBit\" ); is more efficient because its the pure JavaScript version. The reason being jQuery is built on top of JavaScript and internally uses its methods to make DOM manipulation easier. This introduces some performance overhead. We need to remember that jQuery is not always better than pure JavaScript and we need to use it only if it adds advantage to our project.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "9. Write a code snippet for preventing the default behavior of the submit button for performing another event.",
        "answer": "<script> \n    $(document).ready(function(){ \n        $(\"#submitButton\").click(function(event){ \n           event.preventDefault(); \n        }); \n    }); \n</script> <script> \n    $(document).ready(function(){ \n        $(\"#submitButton\").click(function(event){ \n           event.preventDefault(); \n        }); \n    }); \n</script>",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "10. Can you explain the difference between jQuery.get() and jQuery.ajax()?",
        "answer": "jQuery.ajax() allows the creation of highly-customized AJAX requests, with options for how long to wait for a response, what to do once the request is successful, how to handle a failure scenarios, whether the request to be sent is blocking (synchronous) or non-blocking (asynchronous), what format to expect as the response, and many more customizable options.\njQuery.get() is uses jQuery.ajax() underneath to create an AJAX request typically meant for simple retrieval of information.\nThere are various other pre-built AJAX requests given by jQuery such as:\njQuery.post() for performing post requests\njQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request.\njQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. jQuery.ajax() allows the creation of highly-customized AJAX requests, with options for how long to wait for a response, what to do once the request is successful, how to handle a failure scenarios, whether the request to be sent is blocking (synchronous) or non-blocking (asynchronous), what format to expect as the response, and many more customizable options. jQuery.ajax() jQuery.get() is uses jQuery.ajax() underneath to create an AJAX request typically meant for simple retrieval of information.\nThere are various other pre-built AJAX requests given by jQuery such as:\njQuery.post() for performing post requests\njQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request.\njQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. jQuery.get() jQuery.ajax() There are various other pre-built AJAX requests given by jQuery such as:\njQuery.post() for performing post requests\njQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request.\njQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. There are various other pre-built AJAX requests given by jQuery such as:\njQuery.post() for performing post requests\njQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request.\njQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. jQuery.post() for performing post requests\njQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request.\njQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. jQuery.post() for performing post requests jQuery.post() jQuery.getScript() meant for loading and then executing a JavaScript file from the server using GET request. jQuery.getScript() jQuery.getJSON() for loading JSON-encoded data from the server using a GET HTTP request. jQuery.getJSON()",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "11. What does the following code do?",
        "answer": "$( \"div\" ).css( \"width\", \"500px\" )\n          .add( \"p\" )\n          .css( \"background-color\", \"yellow\" ); $( \"div\" ).css( \"width\", \"500px\" )\n          .add( \"p\" )\n          .css( \"background-color\", \"yellow\" ); The given code first selects all the <div> elements and applies width of 500px to them and adds all the <p> elements to the elements selection after which the code can finally change the background color to yellow for all the <div> and <p> elements\nThe given code is an example of method chaining in jQuery which is used to accomplish a couple of things in one single instruction. The given code first selects all the <div> elements and applies width of 500px to them and adds all the <p> elements to the elements selection after which the code can finally change the background color to yellow for all the <div> and <p> elements <div> <p> <div> <p> The given code is an example of method chaining in jQuery which is used to accomplish a couple of things in one single instruction.",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "12. Consider the following code that exists in following HTML with the CSS:",
        "answer": "<div id=\"expand\"></div>\n\n<style>\n  div#expand{\n    width: 50px;\n    height: 50px;\n    background-color: gray;\n  }\n</style> <div id=\"expand\"></div>\n\n<style>\n  div#expand{\n    width: 50px;\n    height: 50px;\n    background-color: gray;\n  }\n</style> Write jQuery code to animate the #expand div, expanding it from 50 * 50 pixels to 300 * 300 pixels within five seconds. We can do this by using the animate() function. We first need to have access to the div element which has id value of expand and then apply animate function on the element as follows: $(\"#expand\").animate(\n {\n   width: \"300px\",\n   height: \"300px\",\n },\n 5000 \n); $(\"#expand\").animate(\n {\n   width: \"300px\",\n   height: \"300px\",\n },\n 5000 \n);",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "13. Write a jQuery code to create and delete cookies from the browser.",
        "answer": "There is no direct way to access the cookies using jquery. We can easily do this with the help of pure javascript. To work with cookies in jQuery, you must install the Dough cookie plugin or any other cookies plugins. The dough is simple to use and offers a number of useful capabilities. Creating a cookies - $.dough(\"cookieName\", \"cookieValue\");\nReading a cookies - $.dough(\"cookieName\");\nDeleting a cookies - $.dough(\"cookieName\", \"remove\"); Creating a cookies - $.dough(\"cookieName\", \"cookieValue\"); Creating a cookies - Creating a cookies - $.dough(\"cookieName\", \"cookieValue\"); Reading a cookies - $.dough(\"cookieName\"); Reading a cookies - Reading a cookies - $.dough(\"cookieName\"); Deleting a cookies - $.dough(\"cookieName\", \"remove\"); Deleting a cookies - Deleting a cookies - $.dough(\"cookieName\", \"remove\");",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "14. What does the following code do?",
        "answer": "$( \"div#firstDiv, div.firstDiv, ol#items > [name$='firstDiv']\" ) $( \"div#firstDiv, div.firstDiv, ol#items > [name$='firstDiv']\" ) $( \"div#firstDiv, div.firstDiv, ol#items > [name$='firstDiv']\" ) The given code is an example of getting elements that satisfy multiple selectors at once. The function returns a jQuery object having the results of the query.\nThe given code does a query to retrieve those <div> element with the id value firstDiv along with all <div> elements that has the class value firstDiv and all elements that are children of the <ol id=\"items\"> element and whose name attribute ends with the string firstDiv. The given code is an example of getting elements that satisfy multiple selectors at once. The function returns a jQuery object having the results of the query. The given code does a query to retrieve those <div> element with the id value firstDiv along with all <div> elements that has the class value firstDiv and all elements that are children of the <ol id=\"items\"> element and whose name attribute ends with the string firstDiv. <div> firstDiv <div> firstDiv <ol id=\"items\"> firstDiv",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "15. How to perform jQuery AJAX requests?",
        "answer": "jQuery provides the ajax() method to perform an AJAX (asynchronous HTTP) request.\nSyntax: $.ajax({name:value, name:value, ... }). The parameters specify one or more values of name-value pairs.\nurl: this name specifies the URL to send the request to. Default is the current page.\nsuccess(result,status,xhr): success callback function which runs when the request succeeds\nerror(xhr,status,error): A function to run if the request fails.\nasync: Boolean value that indicates whether the request should be handled asynchronous or not. The default value is true.\ncomplete(xhr,status): A function to run when the request is completed (after success and error functions are handled)\nxhr: A function used for creating the XMLHttpRequest object\nExample: jQuery provides the ajax() method to perform an AJAX (asynchronous HTTP) request. ajax() Syntax: $.ajax({name:value, name:value, ... }). The parameters specify one or more values of name-value pairs.\nurl: this name specifies the URL to send the request to. Default is the current page.\nsuccess(result,status,xhr): success callback function which runs when the request succeeds\nerror(xhr,status,error): A function to run if the request fails.\nasync: Boolean value that indicates whether the request should be handled asynchronous or not. The default value is true.\ncomplete(xhr,status): A function to run when the request is completed (after success and error functions are handled)\nxhr: A function used for creating the XMLHttpRequest object $.ajax({name:value, name:value, ... }) url: this name specifies the URL to send the request to. Default is the current page.\nsuccess(result,status,xhr): success callback function which runs when the request succeeds\nerror(xhr,status,error): A function to run if the request fails.\nasync: Boolean value that indicates whether the request should be handled asynchronous or not. The default value is true.\ncomplete(xhr,status): A function to run when the request is completed (after success and error functions are handled)\nxhr: A function used for creating the XMLHttpRequest object url: this name specifies the URL to send the request to. Default is the current page. url success(result,status,xhr): success callback function which runs when the request succeeds success(result,status,xhr) error(xhr,status,error): A function to run if the request fails. error(xhr,status,error) async: Boolean value that indicates whether the request should be handled asynchronous or not. The default value is true. async complete(xhr,status): A function to run when the request is completed (after success and error functions are handled) complete(xhr,status) xhr: A function used for creating the XMLHttpRequest object xhr XMLHttpRequest Example: Example: $.ajax({\n  url: \"resourceURL\", \n  async: false, \n  success: function(result){\n    $(\"div\").html(result);\n  },  \n  error: function(xhr){\n    alert(\"An error occured: \" + xhr.status + \" \" + xhr.statusText);\n  }\n}); $.ajax({\n  url: \"resourceURL\", \n  async: false, \n  success: function(result){\n    $(\"div\").html(result);\n  },  \n  error: function(xhr){\n    alert(\"An error occured: \" + xhr.status + \" \" + xhr.statusText);\n  }\n});",
        "reference": "interviewbit.com",
        "role": "jquery"
    },
    {
        "question": "1) What is jQuery?",
        "answer": "jQuery is a fast, lightweight, feature-rich client-side JavaScript library. It is cross-platform and supports different types of browsers. It has provided a much-needed boost to JavaScript. Before jQuery, JavaScript codes were lengthy and bigger, even for smaller functions. It makes a website more interactive and attractive.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "2) Is jQuery a programming language?",
        "answer": "jQuery is not a programming language but a well-written JavaScript code. It is used to traverse documents, event handling, Ajax interaction, and Animation.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "3) What is the difference between JavaScript and jQuery?",
        "answer": "The simple difference is that JavaScript is a language while jQuery is a built-in library built for JavaScript. jQuery simplifies the use of JavaScript language.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "4) Is jQuery replacement of JavaScript?",
        "answer": "No, jQuery is not the replacement of JavaScript. jQuery is written on the top of JavaScript, and it is a different library. jQuery is a lightweight JavaScript library which is used to interact with JavaScript and HTML.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "5) Why do we use jQuery?",
        "answer": "ADVERTISEMENT\nIt is very easy to learn and use.\nIt is used to develop browser compatible web applications.\nIt improves the performance of an application.\nIt is very fast and extensible.\nIt facilitates you to write minimal lines of codes for UI related functions.\nIt provides cross-browser support.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "6) What is $() in jQuery library?",
        "answer": "The $() function is an alias of jQuery() function. It is used to wrap any object into jQuery object which later facilitates you to call the various method defined jQuery object. You can pass a selector string to $() function, and it returns a jQuery object which contains an array of all matched DOM elements.\nSyntax:\n$(document).ready(function() {  \n$(\"p\").css(\"background-color\", \"pink\");  \n});",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "7) What are the effects methods used in jQuery?",
        "answer": "These are some effects methods used in jQuery:\nshow() - It displays or shows the selected elements.\nhide() - It hides the matched or selected elements.\ntoggle() - It shows or hides the matched elements. In other words, it toggles between the hide() and shows() methods.\nfadeIn() - It shows the matched elements by fading it to opaque. In other words, it fades in the selected elements.\nfadeOut() - It shows the matched elements by fading it to transparent. In other words, it fades out the selected elements.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "8) What is the use of toggle() method in JQuery?",
        "answer": "The jQuery toggle() is a particular type of method which is used to toggle between the hide() and show() method. It shows the hidden elements and hides the shown element.\nSyntax:\n$(selector).toggle();  \n$(selector).toggle(speed, callback);  \n$(selector).toggle(speed, easing, callback);  \n$(selector).toggle(display);  \nspeed: It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.\neasing: It specifies the easing function to be used for transition.\ncallback: It is also an optional parameter. It specifies the function to be called after completion of toggle() effect.\ndisplay: If true, it displays an element. If false, it hides the element.\nFor more: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "9) What is the purpose of fadeToggle() method in JQuery?",
        "answer": "The jQuery fadeToggle() method is used to toggle between the fadeIn() and fadeOut() methods. If the elements are faded in, it makes them faded out, and if they are faded out, it makes them faded in.\nSyntax:\n$(selector).fadeToggle();  \n$(selector).fadeToggle(speed,callback);   \n$(selector).fadeToggle(speed, easing, callback);  \nspeed: It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.\neasing: It specifies the easing function to be used for transition.\ncallback: It is also an optional parameter. It specifies the function to be called after completion of fadeToggle() effect.\nFor more: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "10) What is the use of delay() method in JQuery?",
        "answer": "The jQuery delay() method is used to delay the execution of functions in the queue. It is the best method to make a delay between the queued jQuery effects. The jQUery delay () method sets a timer to delay the execution of the next item in the queue.\nSyntax:\n$(selector).delay (speed, queueName)    \nspeed: It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.\nqueueName: It is also an optional parameter. It specifies the name of the queue. Its default value is \"fx\" the standard queue effect.\nFor more: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "11) Is it possible that jQuery HTML work for both HTML and XML document?",
        "answer": "No, jQuery HTML only works for HTML document. It doesn't work for XML documents.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "12) What is the use of html() method in JQuery?",
        "answer": "The jQuery html() method is used to change the entire content of the selected elements. It replaces the selected element content with new contents.\nSyntax:\n$(document).ready(function(){    \n    $(\"button\").click(function(){    \n        $(\"p\").html(\"Hello <b>Javatpoint.com</b>\");    \n    });    \n});    \nFor complete example: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "13) What is the use of css() method in JQuery?",
        "answer": "The jQuery CSS() method is used to get (return)or set style properties or values for selected elements. It facilitates you to get one or more style properties. The jQuery CSS() provides two ways:\nReturn a CSS property\nIt is used to get the value of a specified CSS property.\n$(document).ready(function(){    \n    $(\"button\").click(function(){    \n        alert(\"Background color = \" + $(\"p\").css(\"background-color\"));    \n    });    \n});    \nSet a CSS property\nThis property is used to set a specific value for all matched element.\n$(document).ready(function(){    \n    $(\"button\").click(function(){    \n        $(\"p\").css(\"background-color\", \"violet\");    \n    });    \n});  \n\nFor more: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "14) Is jQuery library used for server scripting or client scripting?",
        "answer": "It is a library for client-side Scripting.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "15) Is jQuery a W3C standard?",
        "answer": "No, jQuery is not a W3C standard.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "16) What is the starting point of code execution in jQuery?",
        "answer": "$(document).ready() function is the starting point of jQuery code. It is executed when DOM is loaded.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "17) What is the basic requirement to start with the jQuery?",
        "answer": "You need refer to its library to start with jQuery. You can download the latest version of jQuery from jQuery.com.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "18) Can you use any other name in place of $ (dollar sign) in jQuery?",
        "answer": "Yes, instead of $ (dollar sign) we can use jQuery as a function name. For example:\njQuery(document).ready(function() {    \njQuery(\"p\").css(\"background-color\", \"pink\");    \n});",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "ready() function on the same page?",
        "answer": "Yes. You can use any number of document.ready() function on the same page. For example:\n$(document).ready(function() {    \n$(\"h1\").css(\"background-color\", \"red\");    \n });    \n$(document).ready(function() {    \n$(\"p\").css(\"background-color\", \"pink\");    \n });",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "20) What is the difference between find and children methods?",
        "answer": "Find method is used to find all levels down the DOM tree while children method is used to find single level down the DOM tree.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "21) What is a CDN?",
        "answer": "CDN stands for Content Delivery Network or Content Distribution Network. It is a large distributed system of servers deployed in multiple data centers across the internet. It provides the files from servers at a higher bandwidth that leads to faster loading time. These are several companies that provide free public CDNs:\nGoogle\nMicrosoft\nYahoo",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "22) What is the goal of CDN and what are the advantages of using CDN?",
        "answer": "The primary goal of the CDN is to provide content to the end-users with high availability and high performance.\nAdvantages of using CDN:\nIt reduces the load from the server.\nIt saves bandwidth. jQuery framework is loaded faster from these CDN.\nIf a user regularly visits a site which is using jQuery framework from any of these CDN, it will be cached.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "23) How can you use a jQuery library in your project?",
        "answer": "You can use a jQuery library in the ASP.Net project from downloading the latest jQuery library from jQuery.com and include the references to the jQuery library file in your HTML/PHP/JSP/Aspx page.\n<script src=\"_scripts/jQuery-1.2.6.js\" type=\"text/javascript\"></script>   \n<script language=\"javascript\">   \n$(document).ready(function() {   \nalert('test');   \n});   \n</script>",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "24) What are the selectors in jQuery? How many types of selectors in jQuery?",
        "answer": "If you want to work with an element on the web page, first you need to find it. Selectors find the HTML elements in jQuery. There are many types of selectors. Some basic selectors are:\nName: It is used to select all elements which match with the given element Name.\n#ID: It is used to select a single element which matches with the given ID\n.Class: It is used to select all elements which match with the given Class.\nUniversal (*): It is used to select all elements available in a DOM.\nMultiple Elements E, F, G: It is used to selects the combined results of all the specified selectors E, F or G.\nAttribute Selector: It is used to select elements based on its attribute value.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "25) What is a use of jQuery filter?",
        "answer": ": jQuery filter is used to filter the specific values from the object. It filters the result of your original query into specific elements.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "26) What are the different types of selectors in jQuery?",
        "answer": "There are three types of selectors in jQuery:\nCSS Selector\nCustom Selector\nXPath Selector",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "27) What is the difference between the ID selector and class selector in jQuery?",
        "answer": "ID selector and class selector are the same as they are in CSS. ID selector uses ID while class selector uses a class to select elements.\nYou use an ID selector to select just one element. If you want to select a group of elements, having the same CSS class, use class selector.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "28) What is the use of serialize() method in JQuery?",
        "answer": "The jQuery serialize() method is used to create a text string in standard URL-encoded notation. It serializes the form values so that its serialized values can be used in the URL query string while making an AJAX request.\nSyntax:\n$(document).ready(function(){    \n    $(\"button\").click(function(){    \n        $(\"div\").text($(\"form\").serialize());    \n    });    \n});     \nFor complete example: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "29) What is the use of val() method in JQuery?",
        "answer": "The jQuery val() method is used:\nTo get the current value of the first element in the set of matched elements.\nTo set the value of every matched element.\nSyntax:\n$(selector).val()  \nFor complete example: Click here",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "30) How to add and remove CSS classes to an element using jQuery?",
        "answer": "You can use addclass() jQuery method to add CSS class to an element and removeclass() jQuery method to remove CSS class from an element.\nCSS addClass() Example\n<!DOCTYPE html>    \n<html>    \n<head>    \n <title>jQuery Example</title>    \n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\">    \n </script>    \n <script type=\"text/javascript\" language=\"javascript\">    \n$(document).ready(function()  \n{  \n$(\"#btn\").click(function()  \n{  \n    $(\"#para\").addClass(\"change\");  \n});  \n});  \n </script>    \n<style>  \n    .change  \n    {  \n        color:blue;  \n    }  \n</style>  \n </head>    \n<body>    \n<p id=\"para\">This method adds CSS class from an element</p>    \n<input type=\"button\" id=\"btn\" value=\"Click me\">   \n</body>    \n</html>    \nCSS removeClass() Example\n<!DOCTYPE html>    \n<html>    \n<head>    \n <title>jQuery Example</title>    \n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\">    \n </script>    \n <script type=\"text/javascript\" language=\"javascript\">    \n$(document).ready(function()  \n{  \n$(\"#btn\").click(function()  \n{  \n    $(\"p\").removeClass(\"change\");  \n});  \n});  \n </script>    \n<style>  \n    .change  \n    {  \n        color:blue;  \n    }  \n</style>  \n </head>    \n<body>    \n<p class=\"change\">This method removes CSS class to an element</p>    \n<input type=\"button\" id=\"btn\" value=\"Click me\">   \n</body>    \n</html>",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "31) Can you write a jQuery code to select all links inside the paragraph?",
        "answer": "Yes. You can use <a> tag nested inside paragraph <p> tag to select all links. For example:\n<!DOCTYPE html>    \n<html>    \n<head>    \n <title>jQuery Example</title>    \n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\">    \n </script>    \n <script type=\"text/javascript\" language=\"javascript\">    \n$(document).ready(function()  \n{  \n    $(\"p a\").attr(\"href\", \"https://www.javatpoint.com\");  \n});  \n </script>    \n </head>    \n<body>    \n    <p><a>Learn JavaScript</a></p>  \n    <p><a>Learn jQuery</a></p>   \n</body>     \n</html>",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "32) What is the difference between prop and attr?",
        "answer": "attr(): It gets the value of an attribute for the first element in the set of matched element.\nprop(): it gets the value of a property for the first element in the set of matched elements. It is introduced in jQuery 1.6.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "33) What are the two types of CDNs?",
        "answer": "There are two types of CDN:\nMicrosoft: It loads jQuery from AJAX CDN.\nGoogle: It loads jQuery from Google libraries API.",
        "reference": "javatpoint.com",
        "role": "jquery"
    },
    {
        "question": "34) What is the use of the animate() method in jQuery?",
        "answer": "The animate function is used to apply the custom animation effect to elements. Syntax:\n$(selector).animate({params}, [duration], [easing], [callback])  \nHere,\n\"param\" defines the CSS properties on which you want to apply the animation.\n\"duration\" specify how long the animation run. It can be one of the following values: \"slow,\" \"fast,\" \"normal\" or milliseconds\n\"easing\" is the string which specifies the function for the transition.\n\"callback\" is the function which we want to run once the animation effect is complete.",
        "reference": "javatpoint.com",
        "role": "jquery"
    }
]