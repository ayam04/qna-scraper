[
    {
        "question": "1) What is GWT?",
        "answer": "Google Web Toolkit (GWT) is a development toolkit for building ajax application using Java. GWT insist on reusable approaches to common web-app tasks such as bookmarking, UI abstraction, cross-browser portability, etc.\nGWT provides two modes:\nDevelopment Mode: It allows debugging the Java code of the application directly via the standard Java debugger.\nWeb mode: In this, the application is translated into HTML and JavaScript code. It can be deployed to a web server.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "2) What are the components of GWT?",
        "answer": "ADVERTISEMENT\nGWT Java-to-JavaScript Compiler: It translates all the Java written code into JavaScript.\nGWT Development Mode: It allows the developers to run the application in development mode, i.e., app run in Java without compiling JavaScript. Development mode allows native mode plug-in called Google Web Toolkit Developer Plug-in.\nJRE emulation library: GWT includes a library that follows the Java runtime library i.e. java.lang, java.lang.annotation, java.math, java.io, java.sql, java.util etc.\nGWT Web UI class library: For creating a widget GWT consist of the set of interface and classes.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "3) What is a module descriptor in GWT?",
        "answer": "A module descriptor is a configuration file used to set-up a GWT application. Its file extension is *.gwt.xml, where * is the name of the application and this file should reside in the project's root.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "4) What is a GWT module?",
        "answer": "A GWT module is simply an encapsulation of functionality. It shares some similarities with a Java package but is not similar.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "5) How do I enable assertions?",
        "answer": "The GWT compiler recognizes the -ea flag to generate code for assertions in the compiled JavaScript. Only use assertions for debugging purposes, not production logic because assertions will only work under GWT's development mode.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "6) What is the default style name of any GWT widget?",
        "answer": "By default, the class name for each component is gwt-. For example, the Button widget has a default style of gwt-Button, and similar way TextBox widget has a default style of gwt-TextBox.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "7) What is internationalization?",
        "answer": "Internationalization is changing the language of the text based on the locale. For example, the browser should display the website content in Hindi for a user sitting in India and French for the user accessing the website from France.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "8) What is the purpose of Host Page?",
        "answer": "The most important public resource is host page which is used to invoke actual GWT application. A typical HTML host page for an application might not include any visible HTML body content at all, but it is always expected to include GWT application via a <script.../> tag.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "9) What is RPC?",
        "answer": "RPC (Remote Procedure Call) helps in client communication with the server. RPC is a process of calling a method from a class; however, in this process, the only difference is that the class is located on a server but not the part of the client program.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "10) What is GWT ClientBundle?",
        "answer": "The ClientBundle interface moves entries from the everything-else category into the cache-forever category.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "11) What are the types of panels in GWT?",
        "answer": "Root Panel: It is the topmost panel where all other widgets are attached to it.\nFlow Panel: It is the simplest panel which provides a basic HTML layout.\nHTML Panel: It is enclosed with specified HTML contents.\nForm Panel: It specifies that any widget declared in this would be wrapped in HTML form element.\nScroll Panel: It puts all the content in the scrollable area.\nGrid: It helps to create an HTML table.\nFlex Table: It extends HTML table like a GRID, but here we can create a table on demand.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "12) What are the Layout Panels?",
        "answer": "Layout Panels can contain other widgets. These panels control the way widget is displayed on User Interface. Every Panel widget inherits properties from Panel class which in turn inherits properties from Widget class and which in turn inherits properties from UIObject class.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "13) Define GWT JSON?",
        "answer": "JSON(JavaScript Object Notation) is a language-independent format for data. It is similar to XML as XML uses tags JSON uses Object-Literal notation of JavaScript.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "14) Define Parsing in GWT XML?",
        "answer": "To parse the XML, we have to first parse the raw XML text into XML DOM structure. DOM structure helps in the navigation of the data. XML parser is located under XMLParser class. XMLParser class consists of parse(String) static method which is called to parse the XML and return a Document object.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "",
        "answer": "Element - represents DOM elements, which are specified by tags in XML: <someElement></someElement>.\nText - represents the text between the opening and closing tag of an element: <someElement>Here is some text.</someElement>.\nComment - represents an XML comment: <!-- notes about this data -->.\nAttr - represents an attribute of an element: <someElement myAttribute=\"123\" />.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "16) Enlist the dependencies required for database in GWT",
        "answer": "Common: hsqldb, Common-lang , log4j .\nJDO: datanucleus, showfiles, jdo.\nHibernate: hibernate.\nMyBatis: mybatis.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "",
        "answer": "History mechanism is similar to the Ajax history implementations such as RSH (Really Simple History). The Basic idea is to track the internal application state in the URL fragment identifier. Main advantages of this mechanism are:\nIt provides browser history reliable.\nIt provides useful feedback to the user.\nIt is bookmarkable, i.e., the user can create a bookmark to the current state and save it or can email it, etc.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "",
        "answer": "A token is simply a string that the application can parse to return to a particular state. This token will be saved in browser history as a URL fragment (in the location bar, after the \"#\"), and this fragment is passed back to the application when the user goes back or forward in history or follows a link.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "19) How to create the custom widget?",
        "answer": "Google Web Toolkit offers a variety of ways for creating the custom widgets. The easiest way is to develop composite widgets by grouping existing basic widgets and adding some interaction logic to them.\nTo create a Custom Widget, it has three general concepts which are as follows:\nBuilding Composite Widgets.\nCreate the Java Code for the new widget.\nWrap JavaScript using JSNI methods.",
        "reference": "javatpoint.com",
        "role": "gwt"
    },
    {
        "question": "20) What is JSNI?",
        "answer": "JSNI (JavaScript Native Interface) is used to solve problems such as when we need to integrate GWT with existing handwritten JavaScript or with a third-party JavaScript library. Occasionally we need to access low-level browser functionality which is not exposed by the GWT class API's.",
        "reference": "javatpoint.com",
        "role": "gwt"
    }
]