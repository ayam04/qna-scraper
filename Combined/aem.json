[
    {
        "question": "1. What exactly is resource mapping?",
        "answer": "Redirects, vanity URLs, and virtual hosts are all defined via resource mapping in AEM. To obscure the internal structure of the AEM site from visitors, utilise resource mapping to prefix all requests with \"/content.\" You can also create a redirect using resource mapping, which will send all requests to your site's doorway page to some other site.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "2. In AEM, what design patterns are used?",
        "answer": "Many of the OSGI design patterns are relevant to AEM because it is built on OSGi. Design patterns include Singleton (Service), Adapter Service, Resource Adapter Service, and Whiteboard. Because AEM is modular, you should be able to utilise any design pattern in your project.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "3. What is the distinction between bundle and package?",
        "answer": "A bundle is a collection of tightly coupled, dynamically loadable classes, jars, and configuration files that specifically indicate their external dependencies (if any). A Java archive file containing Java code, resources, and a manifest that identifies the bundle and its dependencies is known as an OSGi bundle. A bundle is the smallest unit of modularization. Along with out-of-the-box bundles, we can easily install our own custom bundles in AEM.\nA Package is a zip file that contains content in the form of a file-system serialisation (also termed as \"vault\" serialisation) that displays content from the repository as a simple-to-use-and- modify the representation of the filesystem. Packages can contain content as well as project-related information. A bundle is a collection of tightly coupled, dynamically loadable classes, jars, and configuration files that specifically indicate their external dependencies (if any). A Java archive file containing Java code, resources, and a manifest that identifies the bundle and its dependencies is known as an OSGi bundle. A bundle is the smallest unit of modularization. Along with out-of-the-box bundles, we can easily install our own custom bundles in AEM. A Package is a zip file that contains content in the form of a file-system serialisation (also termed as \"vault\" serialisation) that displays content from the repository as a simple-to-use-and- modify the representation of the filesystem. Packages can contain content as well as project-related information.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "4. Distinguish between parsys and iparsys.",
        "answer": "parsys: It's known as the \"Paragraph System\" component, and it allows you to add other components to a page.\niparsys: It's an inherited paragraph system that takes after the \"paragraph system\" of the parent page. parsys: It's known as the \"Paragraph System\" component, and it allows you to add other components to a page. parsys iparsys: It's an inherited paragraph system that takes after the \"paragraph system\" of the parent page. iparsys",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "5. What is Sling in AEM?",
        "answer": "In AEM, Sling is used to create web applications. Web applications that are mostly content-oriented can be developed using the framework. It is built on top of the JCR and is based on REST concepts (Java Content Repository). It's used to store and manage the Java Repository's content.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "6. What is the definition of a replication agent?",
        "answer": "Replication agents are central to AEM. These are the mechanisms used by Adobe Experience Manager (AEM) to: Activate (publish) content from an author to a publish environment.\nFlush content from the Dispatcher cache deliberately.\nDeliver user input from the publish environment to the author environment (for example, form input) (under control of the author environment). Activate (publish) content from an author to a publish environment. Flush content from the Dispatcher cache deliberately. Deliver user input from the publish environment to the author environment (for example, form input) (under control of the author environment).",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "7. In AEM, what is a workflow and a workflow model?",
        "answer": "The workflow feature in AEM allows users to automate tasks in the CMS (Content Management System) instance. A workflow is a well-defined series of actions that include participants, a process, and possibly certain tools. When many procedures can execute simultaneously, they might be either sequential or parallel. In AEM, a workflow is similar to a flowchart in that it outlines a series of procedures that must be completed by various participants in order to produce the desired result. A workflow model is a container or template for the workflow that logically connects the workflow steps. By default, it has a start and an end node (along with an optional participant step).\nIt can contain a variety of nodes as well as the transitions that connect them. The workflow nodes can receive any type of input from the author and process it using Java code or ECMA scripts.\nWorkflow payload is a term that refers to a resource that the workflow will use to carry out its tasks. By default, it has a start and an end node (along with an optional participant step). It can contain a variety of nodes as well as the transitions that connect them. The workflow nodes can receive any type of input from the author and process it using Java code or ECMA scripts. Workflow payload is a term that refers to a resource that the workflow will use to carry out its tasks.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "8. Explain the difference between CQ5.4 and CQ5.5.",
        "answer": "Before version 5.5, CQ was built on a servlet container (CQSE by default, but others may be used) that ran multiple web applications: one for the CRX content repository and another for the OSGi container, which contained Sling and AEM. The majority of the request processing was handled by the Sling web app, which was connected to the root. The following are some points to remember for CQ5.5: The OSGi container is at the root of CQ 5.5 and AEM, with the OSGi HTTP service, supported by Sling, acting as the only request handling endpoint.\nAlong with the many services that make up the rest of the AEM functionality, the CRX content repository is now just another OSGi service. These modifications have no impact on AEM or Sling-based apps.\nBecause of the new design, AEM's quickstart jar installation can no longer enable the use of other web applications alongside AEM.\nThe war version of AEM, on the other hand, is designed to be installed in an application server alongside other web applications.\nThree new connectors for Adobe products – Creative Suite, Scene7, and Search&Promote – have been added.\nThe authors will be able to work directly on mobile applications.\nHybrid software was partnered with to give some wonderful eCommerce functionality.\nUndo(Ctrl+z) and Redo(Ctrl+y) functions have been added. The OSGi container is at the root of CQ 5.5 and AEM, with the OSGi HTTP service, supported by Sling, acting as the only request handling endpoint. Along with the many services that make up the rest of the AEM functionality, the CRX content repository is now just another OSGi service. These modifications have no impact on AEM or Sling-based apps. Because of the new design, AEM's quickstart jar installation can no longer enable the use of other web applications alongside AEM. The war version of AEM, on the other hand, is designed to be installed in an application server alongside other web applications. Three new connectors for Adobe products – Creative Suite, Scene7, and Search&Promote – have been added. The authors will be able to work directly on mobile applications. Hybrid software was partnered with to give some wonderful eCommerce functionality. Undo(Ctrl+z) and Redo(Ctrl+y) functions have been added.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "9. What is AEM Testing?",
        "answer": "For automated tests for your AEM UI, AEM provides the Bobcat testing framework. This framework, which provides a Javascript API for generating tests, allows you to write and run UI tests directly in a web browser. It also makes use of Hobbes.js, a Javascript-based testing package. The Hobbes.js framework was created as part of the development process for testing AEM and is now available for public usage for testing your AEM apps. It's an open-source test automation framework for web application functional testing.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "10. What is AEM Explorer?",
        "answer": "AEM Explorer is an acronym for Application Explorer Missions, which is developed for readers with low eyesight, physical limitations, learning and attentional impairments who might benefit from larger, spoken, highlighted, or re-formatted text. It makes no mention of Braille, and the Explorer presumes that the guide who is using the program has a vision.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "11. In AEM, what is a component?",
        "answer": "In AEM, components are reusable modules that execute specific application logic to generate our website's content. The material available on your web pages is held, formatted, and rendered using AEM components. The components allow authors to change and configure content while creating pages. A JSP (Java Server Pages) or HTML file is frequently included in a component. HTML files provide the component's HTML markup as well as some business logic. A typical AEM page is made up of a lot of different elements. To put it another way, Components are the basic building blocks of AEM pages.  ",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "12. In AEM, what is a template?",
        "answer": "A Template helps you to set a uniform style for your application's pages. It also specifies which components (reusable modules) are permitted to be used within the scope chosen. It's a tree of nodes with the same structure as the page you're going to make. It is devoid of any actual content. AEM offers static as well as editable templates. Templates are used in AEM at several points: When building a new page, you would first choose a template that will serve as the foundation for the new page. The template specifies the structure of the final page, as well as any starting content and possible components (design properties).\nYou would also choose a template when generating a Content Fragment. The structure, basic elements, and variants are all defined in this template. When building a new page, you would first choose a template that will serve as the foundation for the new page. The template specifies the structure of the final page, as well as any starting content and possible components (design properties). You would also choose a template when generating a Content Fragment. The structure, basic elements, and variants are all defined in this template.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "13. What are AEM Connectors?",
        "answer": "The AEM Connector works with a wide range of search systems, from open-source like Elasticsearch and Solr to commercial solutions like Azure Search, SharePoint Search, Endeca, and others, similar to our search engine independent connectors. The AEM connector allows businesses to scan and publish their websites and digital assets from within an AEM server to their existing search engines. This allows all search tasks to be completed within the search engine, minimising the AEM server's processing burden and offering a variety of search capabilities, from basic to advanced. It has throttling tools and procedures to control the number of requests made in a given time period, allowing the connector to send many queries to the AEM server without affecting its performance or availability. It allows exclusive individuals and groups to securely view the documents meant for them.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "14. What is the definition of a content repository? What exactly is JCR (Java Content Repository)?",
        "answer": "A content repository is essentially a storage location for digital content. The content repository's structure is often hierarchical and represented as a tree structure, with each node of the tree serving as a storage location for content. Java Content Repository is a Java community specification for accessing content repositories in a consistent manner (platform-independent and vendor-independent way). JSR-170(JCR 1.0) was the first version of the specification, and version 2 was released subsequently (JCR-283). The javax.JCR API gives access to a content repository through multiple classes and interfaces. Java Content Repository",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "15. What is the foundation of CQ5's technology stack?",
        "answer": "Three technologies make up the CQ5 technological stack. Apache Sling, OSGi (Apache Felix), and the Java Content Repository (JCR) are the technologies in the discussion. Apache Sling is a RESTful framework for interacting with a JCR via the HTTP protocol. The request URL will then be mapped to the JCR node. OSGi is a Java framework that allows for the construction of modular applications. During runtime, each module, referred to as a bundle, can be stopped and started individually. The JSR-170 API is used by the Java Content Repository to access the content repository using Java, regardless of the physical implementation. CQ5 uses CRX, which is its own JCR implementation.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "16. What is sightly in AEM?",
        "answer": "In AEM 6.0, Sightly was introduced as an HTML templating language. It is intended to replace JSP files and is the primary HTML templating solution. The word \"sightly\" implies \"pleasant to the eye,\" and its goal is to make your markup look nice and tidy. The following benefits of using Sightly: Lightweight — There are no dependencies, thus it is quick and lean.\nSecure - Contextual XSS (Cross-site scripting) prevention and URL externalisation are both automatic.\nPowerful – A simple logic API that allows you to perform almost anything.\nIntuitive - A feature set that is clear, basic, and limited. Lightweight — There are no dependencies, thus it is quick and lean. Lightweight Secure - Contextual XSS (Cross-site scripting) prevention and URL externalisation are both automatic. Secure Powerful – A simple logic API that allows you to perform almost anything. Powerful Intuitive - A feature set that is clear, basic, and limited. Intuitive",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "17. What is the need for a Content Management System (CMS)?",
        "answer": "A content management system (CMS) is a chunk of software for creating and managing files and Web sites. Since a lot of websites and web applications are dynamic, their content must be updated on a regular basis. It is advised that you use a content management system to effectively handle these modifications. Adobe Content Management System is one of the numerous CMS suppliers accessible.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "18. Why is AEM preferable over other Content Management Systems (CMS)? What level of control does AEM provide you with?",
        "answer": "The capacity to build custom digital experiences that are customised to the particular user is AEM's major benefit. AEM lets customers manage digital content efficiently by providing best-in-class features such as content workflows, digital asset management, social, and multi-channel collaboration. AEM is an amazing solution for managing mobile applications, mobile websites, eCommerce, and marketing campaigns, in addition to simple website management. AEM provides a road ahead for digital marketing when combined with other Adobe Marketing Cloud tools. Without having to work on numerous sets of assets, AEM allows you to create unlimited customizable variations of your website, including the format, distribution method, styles, and more. By connecting with Adobe Creative Cloud to develop and modify assets, AEM makes it simple to connect your creative and marketing workflows. With straightforward content authoring, AEM enables your team to design, build, and manage interactive and responsive digital experiences. An easy-to-use interface can be used to handle images, videos, content, and any other content components. Adobe Analytics data can help you create tailored and targeted experiences. Examine your customers' habits and make the required changes to your website to boost engagement and income.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "19. What is RESTful?",
        "answer": "REST (Representational State Transfer) is an architectural style and communication strategy that is frequently utilised in the creation of web services. It uses a client-server communications protocol that is stateless and cacheable. HTTP requests are used by RESTful apps to post, read, and wipe out data. Uniform interface, stateless, cacheable, client-server, layered system, and code on demand are the six architectural constraints of REST.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "20. What are the advantages of utilising OSGi (Open Service Gateway Initiative)?",
        "answer": "OSGi (Open Service Gateway Initiative) is a Java platform for creating and deploying modular software. The following are the key advantages of utilising OSGI: Applications are more adaptive to changing requirements, more portable, and easier to re-engineer.\nThe framework delivers the Spring Framework's declarative assembly and simplified unit testing in a standardised version that is given as part of the application server runtime rather than as a third-party library installed as part of the application.\nThe framework is compatible with the Java EE programming model, allowing you to deploy a web application as a collection of versioned OSGi bundles with a dynamic lifespan.\nIt simplifies and standardizes third-party library integration by allowing administrators to manage application bundle dependencies and versions.\nEnterprise applications made out of several, versioned bundles with dynamic lifecycles benefit from the framework's separation.\nIt comes with a built-in bundle repository that can store common and versioned bundles that are shared among several applications, preventing each application from deploying its own copy of each common library.\nExternal bundle repositories are accessible to OSGi apps.\nAt the module level, the framework encourages service-oriented design.\nIt makes the components straightforward to handle since the components can be added, deleted, updated, launched, and terminated at run time.\nIt improves the system's performance because components of the application that aren't in use don't have to be loaded into memory. Applications are more adaptive to changing requirements, more portable, and easier to re-engineer. The framework delivers the Spring Framework's declarative assembly and simplified unit testing in a standardised version that is given as part of the application server runtime rather than as a third-party library installed as part of the application. The framework is compatible with the Java EE programming model, allowing you to deploy a web application as a collection of versioned OSGi bundles with a dynamic lifespan. It simplifies and standardizes third-party library integration by allowing administrators to manage application bundle dependencies and versions. Enterprise applications made out of several, versioned bundles with dynamic lifecycles benefit from the framework's separation. It comes with a built-in bundle repository that can store common and versioned bundles that are shared among several applications, preventing each application from deploying its own copy of each common library. External bundle repositories are accessible to OSGi apps. At the module level, the framework encourages service-oriented design. It makes the components straightforward to handle since the components can be added, deleted, updated, launched, and terminated at run time. It improves the system's performance because components of the application that aren't in use don't have to be loaded into memory.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "21. Explain the life cycle of OSGI bundle.",
        "answer": "Bundles that can be dynamically installed, started, paused, updated, and deleted are added by the OSGi Life-Cycle layer. The security architecture protects all aspects of the life cycle. The OSGi lifecycle can be broken down into the following steps:   INSTALLED- The bundle has been installed in the OSGi container, but some of its dependencies have still to be satisfied. The bundle requires packages that haven't been exported by any of the other bundles that are presently installed.\nRESOLVED- The bundle has been installed, and the OSGi system has connected and resolved all of the dependencies at the class level. The bundle is now ready to use. When a bundle is started, it skips this state if all of the bundle's dependencies are met.\nSTARTING -It is the temporary state in which the bundle exists while it is being loaded after all dependencies have been resolved. The BundleActivator.start method will be invoked, but it hasn't returned yet.\nACTIVE - The bundle is active, however, it is disabled while Spring is working. Spring examines the Spring setup and creates the context before passing it on to the plugin. In order to make instances of each plugin module, the plugin requires context.\nSTOPPING - It is a brief state in which the bundle is in when it is stopping. Although the BundleActivator.stop function has been called, it has yet to return.\nUNINSTALLED - The bundle has been removed from the OSGi container. INSTALLED- The bundle has been installed in the OSGi container, but some of its dependencies have still to be satisfied. The bundle requires packages that haven't been exported by any of the other bundles that are presently installed. INSTALLED RESOLVED- The bundle has been installed, and the OSGi system has connected and resolved all of the dependencies at the class level. The bundle is now ready to use. When a bundle is started, it skips this state if all of the bundle's dependencies are met. RESOLVED STARTING -It is the temporary state in which the bundle exists while it is being loaded after all dependencies have been resolved. The BundleActivator.start method will be invoked, but it hasn't returned yet. STARTING ACTIVE - The bundle is active, however, it is disabled while Spring is working. Spring examines the Spring setup and creates the context before passing it on to the plugin. In order to make instances of each plugin module, the plugin requires context. ACTIVE STOPPING - It is a brief state in which the bundle is in when it is stopping. Although the BundleActivator.stop function has been called, it has yet to return. STOPPING UNINSTALLED - The bundle has been removed from the OSGi container. UNINSTALLED",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "22. In AEM, what are client libraries?",
        "answer": "Client-side processing, aided by advanced JavaScript and CSS code, is used widely on modern websites. Organizing and improving the code's servicing can be a difficult task. AEM includes Client-side Library Folders to help with this problem. These folders allow you to store client-side code in the repository, organise it into categories, and determine when and how each category of code is given to the client. The client-side library system then creates the appropriate links in your final webpage to load the appropriate code. The AEM client library is responsible for managing all Javascript, client-side code, and CSS resources such as pictures and fonts. It aids in resource and code maintenance, debugging, merging, and minimization.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "23. What's the best way to get digital assets loaded into the DAM (Digital Asset Management)?",
        "answer": "One can add digital assets to the DAM by using the graphical user interface or WebDav (Web Distributed Authoring and Versioning) access. If you're using the graphical user interface, all you have to do is browse for the files you want to add, and CQ will build metadata for them in the DAM folder. When you need to upload a big number of assets at once, you'll most likely use WebDav which is essentially a set of extensions to the Hypertext Transfer Protocol (HTTP) that allow user agents to collaboratively write contents straightforwardly in an HTTP web server by offering concurrency control and namespace operations, letting the Web to be seen as as an editable, collaborative medium rather than a read-only medium.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "24. What do you understand about a CQ5 overlay/override component?",
        "answer": "When you wish to work with an out-of-the-box component (Each out-of-the-box component is a set of scripts that completely perform a particular task in order to achieve the desired functionality) in AEM as well as wish to incorporate more functionality to it and change it overall instances of that component, you use the overlay/override component. If you want to incorporate functionality to the out-of-the-box \"text\" component but don't want to develop a new one, you can copy the \"text\" component to \"apps/foundation/components\" from \"libs/foundation/components\" while maintaining the same folder structure. Any modifications made to this new component will be mirrored in the out-of-the-box \"text\" component, without requiring any changes to the existing code under \"libs\". Modifying the original code is often not a smart idea, therefore, CQ allows you to utilise overlays.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "25. What's the distinction between a dialog and a design dialog?",
        "answer": "Dialogs & Design Dialogs are the group of widgets employed to obtain input from the author. These are the most important parts of a component since they allow the author to communicate with the CQ5 component. It indicates that values entered by the author in these dialogs are used as input for a CQ5 component. Criteria Dialog Design Dialog\nDefinition Dialog modifies the content at the page level. Design dialog modifies the content at the template level.\nAvailability authored in edit mode authored in design mode\nValue Storage stored under the pages jcr:content node stored under the design page located under /etc/design\nAccessing Values in CQ5 JSPs through properties object through currentStyle object. Criteria Dialog Design Dialog\nDefinition Dialog modifies the content at the page level. Design dialog modifies the content at the template level.\nAvailability authored in edit mode authored in design mode\nValue Storage stored under the pages jcr:content node stored under the design page located under /etc/design\nAccessing Values in CQ5 JSPs through properties object through currentStyle object. Criteria Dialog Design Dialog Criteria Dialog Design Dialog Criteria Dialog Design Dialog Definition Dialog modifies the content at the page level. Design dialog modifies the content at the template level.\nAvailability authored in edit mode authored in design mode\nValue Storage stored under the pages jcr:content node stored under the design page located under /etc/design\nAccessing Values in CQ5 JSPs through properties object through currentStyle object. Definition Dialog modifies the content at the page level. Design dialog modifies the content at the template level. Definition Dialog modifies the content at the page level. Design dialog modifies the content at the template level. Availability authored in edit mode authored in design mode Availability authored in edit mode authored in design mode Value Storage stored under the pages jcr:content node stored under the design page located under /etc/design Value Storage stored under the pages jcr:content node stored under the design page located under /etc/design /etc/design Accessing Values in CQ5 JSPs through properties object through currentStyle object. Accessing Values in CQ5 JSPs through properties object properties object through currentStyle object. currentStyle object",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "26. What are xtypes and how can they help you in AEM?",
        "answer": "An xtype is a metaphorical name for a class in the ExtJS language. These xtypes are widgets in AEM that are used to create components. AEM offers a number of widgets that are ready to use right now. You may also utilise AEM to develop and define your custom xtype. When establishing a dialog for your component, for example, if you want that the author should be able to provide/enter text, you would add a “cq:Widget” with the xtype property of “textfield.”",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "27. What are the basic SCR Annotations for OSGI component creation?",
        "answer": "The following are the basic SCR annotations for constructing an OSGi component or service: @Component — this attribute indicates that the class is a component. @Service – specifies the service interface that the component provides. @Reference — injects a reference to service into a component. @Property — defines a class property.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "28. What is the distinction between the Author environment and the Publish environment?",
        "answer": "AEM is normally running in two different instances in a production environment. The author instance is one, and the publish instance is another. These two instances are typically kept in separate locations. You'll enter and administer content for your website in the author instance. This is also where you are going to manage your website. Typically, the author's environment is kept behind a firewall. You'll make your content available to your selected audience in the publish instance. In most cases, the publishing environment is preserved in a Demilitarized Zone (DMZ).",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "1. What is AEM Brackets Extension?",
        "answer": "The AEM Brackets Extension streamlines the editing of AEM components and client libraries by leveraging the Brackets code editor's ability to access Photoshop files and layers from within the code editor. The extension's simple synchronisation (no Maven or File Vault required) boosts development efficiency while also allowing front-end developers with limited AEM experience to participate in projects. This extension also includes partial support for the HTML Template Language (HTL), which simplifies and secures component creation by removing the complexity of JSP. AEM Brackets Extension front-end developers",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "2. What is reverse replication, and how does it work?",
        "answer": "The process of copying content from the publish environment to the author environment is known as reverse replication. You'll need a reverse replication agent on your author instance that's enabled to get content from the publish environment outbox to achieve this. Publish instance is used in reverse replication. User data is stored in the \"outbox\" by the reverse replication agent (A repository location where data is temporarily held). Another agent matching agent exists in the author instance, and it polls data from publish on a regular basis. If data is found in the publish instance's outbox, it is synchronised with the author instance. This way, data synchronisation from publisher to author can be managed.  ",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "3. What exactly is the distinction between par base and parsys?",
        "answer": "par base: Similar to subclasses in object-oriented languages like Java, C++, and others, the par base allows components to inherit properties from other components. When you open the CRX Explorer and look at the /libs/foundation/components/text node, you'll notice that it includes a property entitled sling:resourceSuperType, which refers to the par base component. The par base defines tree scripts to render pictures, titles, and other elements, which can be used by all components subclassed from this par base.\nparsys: The paragraph system (parsys) is a compound component that enables authors to add various types of components to a page while also including all other paragraph components. Every form of the paragraph is represented by a component. The paragraph system is a component in and of itself, as are the other paragraph components. par base: Similar to subclasses in object-oriented languages like Java, C++, and others, the par base allows components to inherit properties from other components. When you open the CRX Explorer and look at the /libs/foundation/components/text node, you'll notice that it includes a property entitled sling:resourceSuperType, which refers to the par base component. The par base defines tree scripts to render pictures, titles, and other elements, which can be used by all components subclassed from this par base. par base parsys: The paragraph system (parsys) is a compound component that enables authors to add various types of components to a page while also including all other paragraph components. Every form of the paragraph is represented by a component. The paragraph system is a component in and of itself, as are the other paragraph components. parsys:",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "4. What is the purpose of the Multi-Site Manager?",
        "answer": "MSM (Multi-Site Manager) makes it simple to administer many websites that share content. MSM allows you to build site relationships so that content updates on one site are automatically reproduced on others. For foreign audiences, websites, for example, are frequently supplied in different languages. A manual approach for synchronising content across sites is viable when the number of sites in the same language is small (three to five). However, as the number of sites expands or when many languages are involved, automating the process becomes more efficient.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "5. What do you understand about extending a component?",
        "answer": "Extending a component occurs when you want to construct a new component that does not override a base component but has the same characteristics as the original so that you may build upon it. When extending a component, you must set the component's \"sling: resourceSuperType\" to the base component you want to keep.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "6. In AEM, what is the listener property?",
        "answer": "In AEM, the listener attribute for a component is used to define what happens before or after a component activity. This is done by using the \"cq:listeners\" node with the \"cq:EditListenersConfig\" node type. Any widget in AEM can have a listener property attached to it. To add a listener to that widget, simply add a node called \"listeners\" of the type \"nt:unstructured\" to the widget. Then all you have to do is add the widget's events as child nodes to the \"listeners\" node. In the CQ Widget API documentation, you can discover a list of events for each widget.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "7. What is AEM's FileVault Tool (VLT)?",
        "answer": "VLT stands for the Jackrabbit FileVault tool. The Apache Foundation created a utility that transfers the content of a Jackrabbit/AEM instance to your file system. It performs comparable functions to a Subversion (SVN) client, which is a source control system client. It includes standard check-in, check-out, and management features, as well as configuration choices for displaying project content in a variety of ways. The vault sync service is often used to synchronise repository content with a local file system representation, as well as the other way around. Installing an OSGi service that monitors repository updates and analyses the filesystem contents on a regular basis does this. For mapping repository contents to disc, it employs the same serialisation format as a vault. It's worth noting that the service can only sync with the local filesystem and isn't suitable for remote development.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "8. What exactly are DAM Renditions?",
        "answer": "You can use the DAM to produce image renditions that comprise many sizes and versions of the same content. You can incorporate those renditions into your website's content, which is useful when creating thumbnails or smaller views of enormous, high-resolution photographs. This capability is even more crucial when designing multi-device websites when Internet speed is a variable issue. After all, you want any files a site visitor must download to view your site to be as small as possible. Improve your search engine performance and user experience by making your site load faster.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "9. In CQ5, what is clustering?",
        "answer": "Clustering is a feature that allows two or more AEM instances to share the same repository view, whether they are running on the same machine or on different machines. All cluster instances should, in theory, have the same content, and requests to any node in the cluster should yield the same result. Even when operating a single instance, CQ5 CRX is pre-loaded to run in a cluster. As a result, CQ5 facilitates the deployment of multi-node clusters with minimal effort. Clustering in CQ has the following advantages: High Availability - Clustering helps to ensure high availability in the event of a server or repository failure.\nImprove Performance - To improve performance, the load can be balanced between cluster nodes.\nBackup - If one of the nodes is serving as a passive node, real-time backup is feasible through clustering. High Availability - Clustering helps to ensure high availability in the event of a server or repository failure. Improve Performance - To improve performance, the load can be balanced between cluster nodes. Backup - If one of the nodes is serving as a passive node, real-time backup is feasible through clustering.   Every repository (or instance) in CQ is referred to as a node. In a Cluster, there is always one master, and the other nodes are referred to as slaves. TCP/IP is used to communicate between the slave and the master. If one of the instances fails, another node takes over as master and the cluster continues to function.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "10. What role does the Servlet Engine play in CQ5?",
        "answer": "Servlet Engine acts as a server for each CQ (and CRX, if applicable) instance. Even though CQ WCM can be launched without an application server, a Servlet Engine is always required. Servlets exist in the Application Server and are controlled by the servlet engine. All servlet meta functions are handled by the servlet engine, which is an internal object. Instantiation, initialization, deletion, access from other components, and configuration management are among these functions. The servlet engine invokes the servlet's init() method to execute any necessary initialization after the servlet is instantiated. You can override this method to conduct a servlet life initialization function, such as setting a counter. When a servlet is decommissioned, the servlet engine invokes the destroy() method in the servlet to allow the servlet to complete any remaining tasks and deallocate resources. This method can be overridden to write log messages or to wipe up any remaining connections that aren't picked up via garbage collection. The Application Server passes the incoming data to the servlet engine when a request is made. The servlet engine converts the request's input data into a HttpServletRequest request object type, which includes form data, cookies, session information, and URL name-value pairs. The HttpServletResponse response object type is also created by the servlet engine. Both are then passed as parameters to the servlet's service() procedure by the engine.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "11. What are the two roles of the CQ5 Dispatcher?",
        "answer": "There are two key functions within CQ5 dispatcher that should be highlighted: Caching: The content on the website is cached as much as feasible in this role so that it can be used as a static website. It will lessen the layout engine's need to run repeatedly. The Dispatcher caches static items in a Cache Directory. The cached documents are created in the web server's root directory. For caching, Dispatcher employs the following techniques:\nContent Updates invalidates pages with updated content and replaces them with fresh content.\nWithout physically removing any files, auto-invalidation automatically invalidates out-of-date content portions.\nLoad balancing: Load balancing is the process of dividing the website's computational load across many instances of AEM. This is used to improve the website's performance. This is how Dispatcher performs load balancing:\nPerformance Statistics — Dispatcher keeps track of how quickly each instance of cq responds to a given url. Using these metrics, dispatcher determines which instance of cq will fetch the fastest response for any request and forwards the request to that instance.\nSticky Connections — Once a user session has been established, all incoming requests from that user should be serviced by the same cq instance, as other cq instances will not be able to identify the user session and provide personalised pages for him. The dispatcher ensures that all user session requests are served from the same cq instance.\nIncreased fail-safe coverage: If an instance does not respond, the Dispatcher will immediately relay requests to one of the other instances (s)\nIncreased processing power: In reality, this means that the Dispatcher distributes document requests over multiple CQ instances. You get faster response times since each instance has fewer documents to process. Caching: The content on the website is cached as much as feasible in this role so that it can be used as a static website. It will lessen the layout engine's need to run repeatedly. The Dispatcher caches static items in a Cache Directory. The cached documents are created in the web server's root directory. For caching, Dispatcher employs the following techniques:\nContent Updates invalidates pages with updated content and replaces them with fresh content.\nWithout physically removing any files, auto-invalidation automatically invalidates out-of-date content portions. Caching: Content Updates invalidates pages with updated content and replaces them with fresh content.\nWithout physically removing any files, auto-invalidation automatically invalidates out-of-date content portions. Content Updates invalidates pages with updated content and replaces them with fresh content. Without physically removing any files, auto-invalidation automatically invalidates out-of-date content portions. Load balancing: Load balancing is the process of dividing the website's computational load across many instances of AEM. This is used to improve the website's performance. This is how Dispatcher performs load balancing:\nPerformance Statistics — Dispatcher keeps track of how quickly each instance of cq responds to a given url. Using these metrics, dispatcher determines which instance of cq will fetch the fastest response for any request and forwards the request to that instance.\nSticky Connections — Once a user session has been established, all incoming requests from that user should be serviced by the same cq instance, as other cq instances will not be able to identify the user session and provide personalised pages for him. The dispatcher ensures that all user session requests are served from the same cq instance.\nIncreased fail-safe coverage: If an instance does not respond, the Dispatcher will immediately relay requests to one of the other instances (s)\nIncreased processing power: In reality, this means that the Dispatcher distributes document requests over multiple CQ instances. You get faster response times since each instance has fewer documents to process. Load balancing: Performance Statistics — Dispatcher keeps track of how quickly each instance of cq responds to a given url. Using these metrics, dispatcher determines which instance of cq will fetch the fastest response for any request and forwards the request to that instance.\nSticky Connections — Once a user session has been established, all incoming requests from that user should be serviced by the same cq instance, as other cq instances will not be able to identify the user session and provide personalised pages for him. The dispatcher ensures that all user session requests are served from the same cq instance.\nIncreased fail-safe coverage: If an instance does not respond, the Dispatcher will immediately relay requests to one of the other instances (s)\nIncreased processing power: In reality, this means that the Dispatcher distributes document requests over multiple CQ instances. You get faster response times since each instance has fewer documents to process. Performance Statistics — Dispatcher keeps track of how quickly each instance of cq responds to a given url. Using these metrics, dispatcher determines which instance of cq will fetch the fastest response for any request and forwards the request to that instance. Sticky Connections — Once a user session has been established, all incoming requests from that user should be serviced by the same cq instance, as other cq instances will not be able to identify the user session and provide personalised pages for him. The dispatcher ensures that all user session requests are served from the same cq instance. Increased fail-safe coverage: If an instance does not respond, the Dispatcher will immediately relay requests to one of the other instances (s) Increased processing power: In reality, this means that the Dispatcher distributes document requests over multiple CQ instances. You get faster response times since each instance has fewer documents to process.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "12. What is an Adaptive Form and an Adaptive Document?",
        "answer": "Adaptive forms are used to divide a form into logical portions, allowing end-users to concentrate solely on filling out the form. When we need to collect data from a user, we employ an adaptive form. You may develop forms that are interesting, responsive, dynamic, and adaptive with adaptive forms. For designing and dealing with adaptable forms, AEM Forms provides an easy user interface and out-of-the-box components. You have the option of creating an adaptive form with or without a form model or schema. It's critical to pick a form model that not only meets your needs but also extends your existing infrastructure investments and assets. The output of the adaptive form is shown to the end-user via an Adaptive Document. A bank statement, for example, is an adaptive document because all of its content remains the same save for the name and amount. In an Adaptive Document, we basically set placeholder text that is filled dynamically at run time.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "13. In AEM, what is the benefit of using a tag?",
        "answer": "A tag is a piece of metadata that is attached to a piece of content. Tags can be used on pages as well as assets. Tags can be thought of as keywords or labels that an author assigns to content to make it simpler to locate, utilise, or comprehend.\nAuthors can use tagging to add keywords to their writing. Tags in AEM can be categorised into \"namespaces,\" which are groups of tags. These namespaces are usually associated with a specific department's website. Each new site is given its own domain, but an institution-wide namespace is also utilised for categorising global assets like photographs and icons that are often used.\nTags are a useful way to organise your AEM pages and assets. You may make your assets (PDF documents, photos, etc.) easier to find with AEM's Content Finder by labelling them. As an author types a keyword into the Content Finder, a drop-down menu of suggested tags appears. After that, the author can pick that tag to see a list of all assets containing that tag. A tag is a piece of metadata that is attached to a piece of content. Tags can be used on pages as well as assets. Tags can be thought of as keywords or labels that an author assigns to content to make it simpler to locate, utilise, or comprehend. Authors can use tagging to add keywords to their writing. Tags in AEM can be categorised into \"namespaces,\" which are groups of tags. These namespaces are usually associated with a specific department's website. Each new site is given its own domain, but an institution-wide namespace is also utilised for categorising global assets like photographs and icons that are often used. Tags are a useful way to organise your AEM pages and assets. You may make your assets (PDF documents, photos, etc.) easier to find with AEM's Content Finder by labelling them. As an author types a keyword into the Content Finder, a drop-down menu of suggested tags appears. After that, the author can pick that tag to see a list of all assets containing that tag.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "14. Is it possible to prevent certain users from accessing certain digital assets?",
        "answer": "You may always restrict who has access to certain folders in CQ Digital Assets by adding them to a CUG (closed user group). To make a folder a part of a CUG, follow these steps: Right-click the folder for which you wish to add closed user group properties in CQ DAM and choose Properties.\nSelect CUG from the drop-down menu.\nTo make the folder and its assets available only to a closed user group, use the Enabled checkbox.\nTo add that information, go to the login page, if one exists. By selecting Add item, you can add admitted groups. Add the realm if necessary. To save your changes, click OK. Right-click the folder for which you wish to add closed user group properties in CQ DAM and choose Properties. Select CUG from the drop-down menu. To make the folder and its assets available only to a closed user group, use the Enabled checkbox. To add that information, go to the login page, if one exists. By selecting Add item, you can add admitted groups. Add the realm if necessary. To save your changes, click OK.",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "15. You have a lot of brands – AND, ONLY, etc. – and a lot of pages for these brands in your AEM content structure. The site hierarchy for these brands cannot be segregated. For each of these brands, the client expects a particular theme.",
        "answer": "I'd address the situation with the following suggestions: Global Configuration Page: Make a Global Configuration Page (assuming Dynamic CSS) where consumers may specify which brand has which CSS/theme included. This configuration page can be used to select a specific brand, its CSS (either a set path or a zip package), its logo, and any other adjustments specific to that brand. The CSS file from this global configuration page would be picked up by all pages, which would then apply the theme based on the brand. Tags on the page, selectors for specific brands, or a pre-specified path could all be used to identify the brand.\nConsider Fixed CSS: If we have a fixed CSS file, we may map the Tags on the page directly to it. If a specific Tag (e.g. AND, ONLY) is present on the page, the CSS will be applied directly to that page. Tags could be created by CQ authors using Page attributes. Selectors can also be used to solve the problem.\nSegregation: A better and ideal case would be to separate the brands in a site hierarchy so that a single theme could be applied to all pages under a node for a certain brand. Global Configuration Page: Make a Global Configuration Page (assuming Dynamic CSS) where consumers may specify which brand has which CSS/theme included. This configuration page can be used to select a specific brand, its CSS (either a set path or a zip package), its logo, and any other adjustments specific to that brand. The CSS file from this global configuration page would be picked up by all pages, which would then apply the theme based on the brand. Tags on the page, selectors for specific brands, or a pre-specified path could all be used to identify the brand. Global Configuration Page Consider Fixed CSS: If we have a fixed CSS file, we may map the Tags on the page directly to it. If a specific Tag (e.g. AND, ONLY) is present on the page, the CSS will be applied directly to that page. Tags could be created by CQ authors using Page attributes. Selectors can also be used to solve the problem. Consider Fixed CSS Segregation: A better and ideal case would be to separate the brands in a site hierarchy so that a single theme could be applied to all pages under a node for a certain brand. Segregation",
        "reference": "interviewbit.com",
        "role": "aem"
    },
    {
        "question": "16. You're probably aware that anytime we upload a DAM asset to AEM, a back-end workflow is started. Now we need to upload approx 3000 dam assets of varying sizes to our AEM instance, and don't want to overload it with thousands of operations all at once.",
        "answer": "The solution is discussed as follows: Transfer from FileSystem to CQ instance: WebDAV (Web Distributed Authoring and Versioning)  is commonly used to upload a huge number of digital assets. WebDAV is a set of Hypertext Transfer Protocol (HTTP) extensions. It allows user agents to collaboratively write content straightforwardly in an HTTP web server by offering concurrency control and namespace operations. WebDAV is a protocol that allows users to create, edit, and move documents on a server.\nTransfer from one CQ instance to another: To move content from one CQ instance to another, CQ provides a number of alternatives. \"Replication\" (author->publish) and \"create package->export->install somewhere\" are two examples. The File Vault (vlt) tool also offers a Remote Copy (rcp) feature, which comes in handy when moving GB or TB of digital assets (JCR node type dam:Asset) from DEV to STAGING to PRODUCTION. When transferring DAM assets from one instance to another, be careful to disable DAM workflow. Transfer from FileSystem to CQ instance: WebDAV (Web Distributed Authoring and Versioning)  is commonly used to upload a huge number of digital assets. WebDAV is a set of Hypertext Transfer Protocol (HTTP) extensions. It allows user agents to collaboratively write content straightforwardly in an HTTP web server by offering concurrency control and namespace operations. WebDAV is a protocol that allows users to create, edit, and move documents on a server. Transfer from FileSystem to CQ instance: Transfer from one CQ instance to another: To move content from one CQ instance to another, CQ provides a number of alternatives. \"Replication\" (author->publish) and \"create package->export->install somewhere\" are two examples. The File Vault (vlt) tool also offers a Remote Copy (rcp) feature, which comes in handy when moving GB or TB of digital assets (JCR node type dam:Asset) from DEV to STAGING to PRODUCTION. When transferring DAM assets from one instance to another, be careful to disable DAM workflow. Transfer from one CQ instance to another: Conclusion: Digitization has become a necessity for organisations to stay afloat in the long run. As a result, digital content management solutions like AEM are in high demand. The widespread adoption of AEM tools has resulted in additional employment openings for trained individuals. I hope you found this blog post on AEM to be helpful. We recommend reading, Interview questions on Adobe Adobe AEM Download AEM Download",
        "reference": "interviewbit.com",
        "role": "aem"
    }
]