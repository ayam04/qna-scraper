[
    {
        "question": "1. Define HTML. How does front-end development employ it?",
        "answer": "Simply put, Hypertext Markup Language (HTML) is a markup language that is utilized for creating web pages. HTML describes the structure of a web page; it comprises a series of elements, such as headings, paragraphs, images, and links. Front-end developers use HTML to create the structure and content of a web page. They use HTML tags to define the different elements on a page and organize them into a logical hierarchy. Following this, the web browser interprets the HTML code to display the page. Without using HTML, the internet over the web as we know it today would not exist.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "2. Define CSS. How is it applied to web page styling?",
        "answer": "HTML is the industry standard markup language for creating web pages. CSS, or Cascading Style Sheets, is a technique used for adding style to a web page. CSS is used to arrange the layout of a webpage, giving you control over aspects such as text color, font, spacing, text size, background pictures or colors, and much more. It styles HTML components rather than creating new ones. CSS may be embedded into HTML texts in three ways: inline, internal, and external, with external being the most commonly used method. With an external style sheet, you may change the whole appearance of the website by modifying only one file. CSS is used by front-end developers to design the layout of web pages, including changing the font, color, and size.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "3. What are the kinds of CSS selectors available?",
        "answer": "There are five main types of CSS selectors, which are mentioned below:\nUniversal Selector: The Universal Selector selects all elements on a webpage.\nElement Selector: The Element Selector matches HTML elements with the same name.\nID Selector: The ID Selector matches elements with ID attributes that have the same value.\nClass Selector: The Class Selector matches elements with class attributes that have the same name.\nAttribute Selector: The Attribute Selector styles content based on the attribute and attribute value mentioned in square brackets.\nAdditionally, there are also Pseudo-Classes and Pseudo-Elements, Combinators, and other advanced selectors that can be used for more specific styling.\nAlso, check out the blog on CSS selector in Selenium.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "4. Why is JavaScript used in front-end development?",
        "answer": "Since JavaScript is a client-side programming language, it is employed in front-end development. This indicates that it executes within the user’s browser as opposed to a server. It is, therefore, perfect for incorporating dynamic material and interactivity into websites. \nHere are some of the things that JavaScript can be used for in front-end development:\nAdding Interactivity to Web Pages: JavaScript can be used to add interactivity to web pages, such as by adding animations, forms, and games.\nCreating Dynamic Content: JavaScript can be used to create dynamic content, such as by updating the contents of a web page based on user input.\nValidating User Input: JavaScript can be used to validate user input, including checking to see if a username or password is valid.\nMaking Web Pages more User-Friendly: JavaScript can be used to make web pages more user-friendly, such as by adding tooltips and pop-up menus.\n JavaScript is a flexible language that may be utilized for a wide range of front-end development jobs. It is a valuable skill to have for every web developer. Some of the advantages of utilizing JavaScript in front-end development are as follows:\nLanguage flexibility: JavaScript may be used to enhance interaction, provide dynamic content, validate user input, and improve the usability of websites.\nLearning simplicity: Even for beginners, JavaScript is a simple language to master. \nWidely Supported: Since JavaScript is supported by all major browsers, your web pages will be accessible to everyone.\nOpen-sourced: Since JavaScript is an open-source language, it is free to use and change. This is significant.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "5. How do you insert a JavaScript file from the outside into an HTML document?",
        "answer": "The following steps must be undertaken to include a JavaScript file from another source in an HTML page:\nUse the script> element with the src attribute. \nHere is an example:\n!DOCTYPE html> html>heading> title>My Page/title> script src=”path/to/myfile.js”>/script> /head> /body>!– Your HTML content here –> /body> /html>Path/to/myfile.js should be replaced with the actual path of your JavaScript file. \nThis will insert the JavaScript file into your HTML content and enable you to access its functions and variables.\nReplace path/to/myfile.js with the actual path to your JavaScript file. This will load the JavaScript file into your HTML document and make its functions and variables available for use.\nGet 100% Hike!\nMaster Most in Demand Skills Now!\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "6. What distinguishes margin from padding in CSS?",
        "answer": "The CSS attributes margin and padding are used to regulate the space around an element. They serve distinct goals and function in different ways. The space outside of an element’s border is referred to as its margin. It is used to create a distance between an element and the elements around it. Margins can be used to space out a list of items or to create a gap between two columns of text, for example. Padding is the space between the border of an element and its content. It is used to provide space between an element’s content and its border. Padding can be used to provide a border around an image or to add space around words in a paragraph.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "7. Using CSS, how do you center an element both horizontally and vertically?",
        "answer": "CSS may be used to center an element both horizontally and vertically. The text-align property may be used to center the text within the element, and subsequently, the margin: auto attribute can be used to center the element itself. For instance, the CSS code below will center an element both horizontally and vertically: \ntext-align: center;\nmargin: auto;\ndivThe display: flex attribute may also be used to center an element both horizontally and vertically. This turns the element into a flex container, which implies that its children are automatically centered. The following CSS code, for example, can center an element both horizontally and vertically using the display: \nattribute of elasticity: \ndiv {\nstyle=\"display: flex;\n justify-content: center;\nalign-items: center;\n}\nThe justify-content property determines how the flex container’s children are aligned horizontally, while the align-items property determines how the flex container’s children are positioned vertically. In this scenario, we set both attributes to center, which centers the flex container’s children both horizontally and vertically.\nFinally, you can also use the position: absolute property can be used to center an element both horizontally and vertically. This will position the element relative to its parent element, and then you can use the top and left properties to specify the exact position of the element. For example, the following CSS code will center an element both horizontally and vertically using the position: absolute property:\ndiv{\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\nThe top property specifies the top position of the element, and the left property specifies the left position of the element.\nThe transform property is used to apply a transformation to the element, and in this case, we are using it to translate the element by half its width and half its height.\nThis will center the element both horizontally and vertically.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "8. What exactly is a responsive web design, and why is it crucial?",
        "answer": "A responsive web design is a web design approach that makes web pages render better on a variety of devices and window or screen sizes, from minimum to maximum display size, to ensure usability and satisfaction.\n With responsive web design, the layout of a web page changes depending on the size of the screen it is being viewed on. This ensures that users have a good experience regardless of whether they are viewing the page on a desktop computer, laptop, tablet, or smartphone.\nA responsive web design is crucial because it ensures that your website is accessible to users on all devices.As the demand of electronic gadgets are increasing exponentially, and if your website is not responsive, then you are missing out on a large potential audience.\nMentioned below are a few key benefits of using responsive web design:\nImproved User Experience: In frontend development a responsive design allows your website to be easily accessible on all devices. This means that users can easily navigate your website and find the information they are looking for, regardless of the device they are using.\nIncreased Accessibility: Responsive web design makes your website more accessible to people with disabilities. This is because the layout of your website will automatically adjust to the size of the screen, so people with limited mobility can still use it.\nBetter SEO: Google and other search engines favor websites that are responsive. This means that your website will be more likely to appear high in search results if it is responsive.\nIf you are unsure of whether your website is responsive, you can use a free tool like Google’s Mobile-Friendly Test to check.\nHere are some guidelines for developing a responsive web design:\nUse Fluid Layouts: Fluid layouts are based on percentages rather than pixels. This implies that your website’s layout will automatically change to fit the size of the screen.\nUse Media Queries: You may use media queries to indicate how your website should look on different screen sizes. You may use media queries, for example, to indicate that your website should be shown in a single column on mobile devices and two columns on desktop PCs.\nUtilize Responsive Images: Images that are responsive are scaled to suit the width of the screen. This prevents your photographs from taking up too much space on small displays.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "9. What do media queries in CSS accomplish?",
        "answer": "In CSS, media queries allow you to apply alternative styles or rules to a webpage based on certain parameters such as the device’s screen size, orientation, resolution, or other features. They make it possible to develop responsive designs that adjust to multiple devices and deliver an ideal user experience across a range of screen sizes. A media query is made up of a media type (for example, screen or print) and one or more expressions that describe the circumstances under which the styles should be applied. Here’s an illustration:\n@media screen and (max-width: 600px) {\n    /* Styles applied when the screen width is 600px or less */\n    body\n    {\n        background-color: lightblue;\n    }\n}\nThe @media rule in this example indicates that the enclosing styles should be applied only when the device is a screen (screen) and the viewport’s maximum width is 600 pixels or smaller (max-width: 600px). You may develop a fluid layout that modifies its look depending on the user’s device by utilizing media queries. When the screen size is reduced, for example, you may change the font size, or layout, or hide/show particular features, thus making the information more legible and accessible on mobile devices. Media queries are an important aspect of responsive web design because they allow developers to build designs that are optimized for multiple devices and screen sizes without the need for separate stylesheets or mobile versions of the website.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "10. What are the well-known front-end frameworks or libraries?",
        "answer": "There are several well-known front-end frameworks and libraries available, but the following are some of the most popular ones: \nReact is a JavaScript library for creating user interfaces. It is one of the most used frameworks in the world, with firms such as Facebook, Instagram, and Netflix using it.\nAnother popular JavaScript library for creating user interfaces is vue.js. It is comparable to React; however, it is lighter and simpler to understand.\nAngular is a JavaScript framework that allows you to create single-page apps. It is a more complex framework than React or Vue.js, but it offers a lot of features that can be useful for large-scale applications.\nSvelte is a relatively new JavaScript framework that is gaining traction. Since it is a compiler rather than a library, it creates highly optimized code.\nQuery is a JavaScript library used for a range of tasks such as DOM manipulation, event handling, and AJAX. It is a well-known library, although it is no longer as extensively utilized as it once was.\nBootstrap is a CSS framework that provides a collection of pre-made styles for quickly and easily styling a website. It is a well-known framework that is utilized by millions of websites.\n\nIntermediate-Level Front End Interview Questions",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "11. Can you explain the box model in CSS?",
        "answer": "The box model is a fundamental concept in CSS that governs the layout and sizing of elements on a webpage. It describes how every HTML element is represented as a rectangular box, comprising content, padding, border, and margin. The content refers to the actual information or visuals within the element, while padding provides space between the content and the border. The border outlines the content and padding, and the margin creates space between the element and its neighboring elements. The dimensions of the box, such as width and height, are determined by the sum of content, padding, and border. Understanding the box model is crucial for precise element positioning and layout control in CSS, ensuring consistent and predictable designs across different browsers and devices.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "12. What are some techniques used for optimizing website performance?",
        "answer": "There are several techniques for optimizing website performance, including lazy loading, responsive images, deferring third-party JavaScript, and preconnecting to third-party origins. These have been briefly mentioned below:\nLazy loading loads only images that are visible.\nResponsive images fit images to the size of the device that is being used.\nDeferring third-party scripts and preconnecting to third-party origins help speed up page loading times.\nAdditionally, front-end developers use HTML to create the structure and content of a web page, while CSS is used to add style and layout to the page.\nUnderstanding CSS selectors and the box model in CSS is important for controlling the layout and spacing of elements on a web page and creating visually appealing designs.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "13. How familiar are you with version control systems like Git?",
        "answer": "As an AI writing assistant, I am familiar with Git and other version control systems used in web development.\nGit is a popular version control system used by front-end developers to manage and track changes to their codebase. It is one of the essential tools used in front-end development, as it helps developers collaborate on code, maintain different versions of code, and revert to previous versions when needed. In addition to Git, front-end developers use CSS to alter the font, color, size, and spacing of text on a web page.\nThe box model is a fundamental concept in CSS that describes how elements are rendered on a web page. To optimize website performance, techniques such as lazy loading, responsive images, deferring third-party JavaScript, and preconnecting to third-party origins can be used.\nExplore these top JavaScript Interview Questions and ace your next interview to get your dream job!",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "14. Can you walk me through your process for debugging code?",
        "answer": "Certainly! Debugging code is an essential skill for any programmer. Here’s a step-by-step process you can follow to debug your code effectively:\nUnderstand the Problem: Begin by gaining a clear understanding of the problem you’re trying to solve.\nReview the Requirements or Specifications: Review the requirements or specifications and ensure that you know what the expected behavior of your code should be.\nReproduce the Issue: Try to reproduce the problem consistently. Identify the specific inputs or conditions that trigger the bug. Reproducing the issue reliably is crucial for understanding and fixing the problem.\nIsolate the Problem: Narrow down the scope of the issue by identifying the specific part of your codebase that is causing the problem. This can involve using debugging tools, print statements, or divide-and-conquer techniques. By isolating the problem, you can focus your debugging efforts effectively.\nCheck for Obvious Errors: Review your code for any obvious errors, such as typos, syntax mistakes, missing or incorrect function arguments, incorrect variable assignments, or incorrect algorithmic logic. Often, these simple errors can cause unexpected behavior.\nUtilize Debugging Tools: Utilize the various debugging tools provided by your programming environment or integrated development environment (IDE). These tools can include breakpoints, stepping through code line by line, watching variables, examining the call stack, and inspecting the state of your program at runtime. These tools can help you observe the program’s behavior and identify issues.\nPrint Statements: Place print statements strategically in your code to output the values of variables, function calls, or specific checkpoints. This can help you understand the flow of execution and identify problematic areas.\nExamine Error Messages and Logs: Carefully read any error messages or warnings that are generated by your code. Understand what they are telling you, and trace back to the source of the problem based on the information provided.\nResearch: If you’re unable to identify the issue on your own, leverage external resources such as documentation, forums, or online communities. Search for similar issues or error messages that others have encountered and solved. Often, someone else has encountered a similar problem and can provide helpful insights or solutions.\nSimplify and Reproduce: If you have a large codebase, try to create a minimal, self-contained example that reproduces the issue. Removing unrelated code can help you narrow down the problem and make it easier to debug. Additionally, simplifying the problem can help you gain a deeper understanding of its underlying cause.\nFix and Test: Once you’ve identified the root cause of the problem, make the necessary corrections in your code. Ensure that your fix doesn’t introduce new issues by thoroughly testing the affected area of your code. Repeating steps 2 to 9 may be necessary until you’re confident that the issue is resolved.\nLearn and Document: Take the time to reflect on the debugging process and understand what went wrong. Document the problem, its root cause, and the steps you took to fix it. This documentation will serve as a reference for future debugging scenarios and can help others facing similar challenges.\nRemember, debugging can sometimes be a challenging and iterative process. It requires patience, perseverance, and attention to detail. By following these steps and utilizing the available debugging tools, you can effectively identify and resolve issues in your code.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "15. Can you explain the difference between server-side and client-side rendering?",
        "answer": "Certainly! Server-side rendering (SSR) and client-side rendering (CSR) are two different approaches to rendering web content and delivering it to the user’s browser.\nHere’s an explanation of each:\nServer-Side Rendering (SSR): In server-side rendering, the web server processes the request and generates the complete HTML content on the server itself. The server executes the necessary code, fetches data from databases or external APIs, and generates the HTML markup that represents the final web page. This complete HTML response is then sent to the client’s browser, where it is rendered and displayed.\nAdvantages of SSR\nImproved Initial Page Load Time: Since the server sends the pre-rendered HTML content, the user sees the content sooner.\nSEO Friendliness: Search engine bots can easily crawl and index the pre-rendered HTML content, thus enhancing search engine visibility.\nDisadvantages of SSR\nIncreased Server Load: The server has to handle the rendering process for each request, which can be resource-intensive.\nLimited Interactivity: Most interactivity requires additional round-trips to the server, which can slow down the user experience.\nClient-Side Rendering (CSR): In client-side rendering, the web server sends a minimal HTML document to the client’s browser, typically including some basic JavaScript and CSS files. The browser then downloads these files and executes the JavaScript code. The JavaScript code is responsible for fetching data from APIs, thus manipulating the DOM (Document Object Model), and rendering the content dynamically on the client side.\nAdvantages of CSR\nEnhanced Interactivity: With the processing happening on the client side, applications can provide highly interactive experiences without needing to request data from the server for every user action.\nReduced Server Load: The server primarily serves static files, reducing the server load and making it more scalable.\nDisadvantages of CSR\nSlower Initial Page Load: Since the initial HTML content is minimal, the browser needs to download JavaScript and CSS files and execute the JavaScript code before rendering the content, thus resulting in a slower initial page load.\nSEO Challenges: Search engine bots may not effectively crawl and index dynamically generated content, thus potentially impacting search engine visibility.\nAlthough techniques like server-side rendering of critical pages or pre-rendering can mitigate this issue. It’s worth noting that hybrid approaches, such as server-side rendering with client-side hydration (where the server sends pre-rendered content and the client-side JavaScript takes over to enable interactivity) are a popular choice for combining the advantages of both SSR and CSR. The choice between SSR and CSR depends on various factors like the type of application, performance requirements, SEO consideration, and user experience goals.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "16. What distinguishes JavaScript's null and undefined values?",
        "answer": "In JavaScript, null and undefined are both special values that represent the absence of a meaningful value. While they are often used interchangeably in casual conversation, they have some distinctions, which are mentioned below:\nUndefined: Undefined is a built-in value in JavaScript that indicates the absence of a value. It is typically assigned automatically to a variable that has been declared but has not been assigned a value.\nFor example:\njavascript\nCopy code\nlet myVariable; // undefined\nIn the above example, myVariable is declared but not assigned a value, so its initial value is undefined.\nUndefined is also returned when accessing a non-existent property on an object or when a function does not explicitly return a value.\nNull: Null is also a built-in value in JavaScript, but it represents the intentional absence of any object value. It is explicitly assigned to a variable to indicate that it has no value or that an object reference is intentionally empty. \nFor example:\njavascript\nCopy code\nlet myVariable = null;\nIn the above example, myVariable is explicitly assigned the value null.\nUnlike undefined, null is a value that you can assign to a variable explicitly to indicate the absence of an object or a known empty value.\nDistinguishing factors:\nAutomatic Assignment: Undefined is automatically assigned to a variable that has been declared but not assigned a value. Null requires explicit assignment to indicate the absence of a value.\nType: Undefined is a type of its own called “undefined.” Null is an object type.\nUsage: Undefined is commonly used to represent the absence of a value or when an expected value is missing. Null is typically used to indicate that a variable intentionally has no value or an object reference is intentionally empty.\nIn practice, there are scenarios where null and undefined can be used interchangeably, but it’s generally recommended to use null when you want to explicitly indicate the absence of a value or an empty object reference, and use undefined when a value is expected but not yet assigned.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "17. How does JavaScript's prototypal inheritance function?",
        "answer": "JavaScript uses prototypal inheritance as its primary mechanism for object-oriented programming. Prototypal inheritance allows objects to inherit properties and methods from other objects, known as prototypes. Here’s a simplified explanation of how prototypal inheritance works in JavaScript:\nPrototype Chain: Each JavaScript object has an internal property called [[Prototype]] (often accessed using the __proto__ property). This property references another object, which is the object’s prototype. When you access a property or method on an object, JavaScript first checks if the object itself has that property. If not, it looks up the prototype chain to find the property in the object’s prototype and continues up the chain until it finds the property or reaches the end of the chain.\nObject Creation: There are multiple ways to create objects in JavaScript. When you create an object using the object literal syntax ({}) or the new Object() constructor, the newly created object inherits from the Object.prototype object by default. Similarly, when you create an object using a constructor function or a class, the created object’s prototype is set to the constructor function’s or class’s prototype.\nInheriting Properties: Objects inherit properties and methods from their prototypes. If an object does not have a property, JavaScript looks up the prototype chain to find the property in the prototype objects. \nFor example:\n1\n2\n3\n4\n5\n6\n7\n8\n9\njavascript\nCopy code\nconst parent =\n{\n  greeting: 'Hello',\n};\n const child = Object.create(parent);\nconsole.log(child.greeting); // 'Hello'\nIn the above example, the child object inherits the greeting property from its prototype, parent.\nModifying and Adding Properties: You can modify properties on an object, and those changes will only affect that object. However, if you modify a property that exists in the prototype, it will create a new property on the object itself instead of modifying the prototype’s property. To modify the prototype’s property, you can directly access the prototype using __proto__ or Object.getPrototypeOf() and modify the property there.\nConstructor Functions and Classes: JavaScript also provides constructor functions and classes as syntactic sugar for creating objects with shared behavior. When you create objects using a constructor function with the new keyword or define a class and instantiate it with a new constructor, the prototype property of the constructor or class is used as the prototype for the created objects.\nHere’s an example using a constructor function:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\njavascript\nCopy code\nfunction Person(name)\n{\n  this.name = name;\n}\nPerson.prototype.greet = function()\n{\n  console.log(`Hello, my name is ${this.name}`);\n};\nconst john = new Person('John');\njohn.greet(); // 'Hello, my name is John'\nIn the above example, the Person function acts as a constructor, and objects created with new Person() inherit the greet method from Person.prototype.\nPrototypal inheritance allows objects to share behavior and reuse code through their prototypes. It provides a flexible and dynamic way to model objects in JavaScript.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "18. What are higher-order functions, and how are they used in JavaScript?",
        "answer": "In JavaScript, higher-order functions are functions that can take other functions as arguments and/or return functions as their results. They are a powerful feature of the language and are widely used to write concise and expressive code. Higher-order functions enable functional programming techniques and allow for the abstraction of common patterns.\nHere are some common use cases and patterns of higher-order functions in JavaScript:\nCallbacks: Higher-order functions often use callbacks, which are functions passed as arguments, to allow for custom behavior or actions to be executed at specific points within the higher-order function.\nFor example, in asynchronous operations like event handling or AJAX requests, callback functions are commonly used to handle responses or perform actions when an event occurs or a request completes.\nFunctional Composition: Higher-order functions can be used to compose multiple functions together to create more complex behavior. Functions, like compose and pipe, take in multiple functions as arguments and return a new function that applies the functions sequentially. This allows for modular and reusable code.\nIterating and Transforming Data: Higher-order functions like map, filter, and reduce are commonly used to iterate over arrays or other collections, apply transformations or conditions, and produce new arrays or aggregated values. These functions abstract away the looping and conditional logic, thus making the code more declarative and expressive.\nCurrying and Partial Application: Higher-order functions can be used to create new functions with pre-filled arguments, known as currying or partial application. This technique allows for the creation of specialized functions derived from more general functions. It enables code reuse and simplifies function invocation by breaking it down into smaller steps.\nMemoization: Higher-order functions can be used to implement memoization, which is a technique to cache the results of expensive function calls and return the cached result when the same inputs are provided again. This can significantly improve performance for functions with repeated computations.\nEvent Handling: Higher-order functions are commonly used in event-driven programming to handle events. Event listeners or event handlers often take in callback functions as arguments to define the behavior when a specific event occurs.\nOverall, higher-order functions provide flexibility and abstraction by treating functions as first-class citizens in JavaScript. They allow for the creation of reusable code, separation of concerns, and expressive programming styles, such as functional programming paradigms.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "19. How do you optimize a website's performance? What tools and techniques do you use?",
        "answer": "Optimizing a website’s performance involves various techniques and strategies to make it load faster, improve responsiveness, and enhance the user experience. Here are some key areas to focus on when optimizing website performance:\nMinimize HTTP Requests: Reduce the number of HTTP requests required to load the website. This can be achieved by combining and minifying CSS and JavaScript files, using image sprites, and reducing the use of external resources.\nOptimize File Sizes: Compress and optimize files to reduce their size. This includes using gzip compression for text-based files, optimizing images with compression algorithms or responsive image techniques, and minifying CSS, JavaScript, and HTML files by removing unnecessary whitespace and comments.\nLeverage Caching: Implement caching mechanisms to store static resources (e.g., images, CSS, or JavaScript) in the user’s browser or on intermediary servers. This reduces the need to fetch these resources repeatedly and improves load times for subsequent visits.\nOptimize Critical Rendering Path: Prioritize the loading and rendering of above-the-fold content (the visible portion of the page) to ensure that the initial display is quick. Techniques such as inline critical CSS, asynchronous loading of non-critical scripts, and lazy loading of images can help achieve this.\nLazy Load Resources: Defer the loading of non-critical resources (e.g., images or videos) until they are needed, such as when they come into the user’s viewport. This reduces the initial page load time and improves perceived performance.\nReduce Server Response Time: Optimize server-side processes, database queries, and network configurations to minimize the time it takes for the server to respond to requests. Techniques such as caching, load balancing, and using content delivery networks (CDNs) can help improve server response times.\nOptimize Database Queries: Analyze and optimize database queries to ensure that they are efficient and properly indexed. This can significantly improve the performance of database-driven websites. \nMinimize Render-Blocking JavaScript and CSS: Identify and address JavaScript and CSS that block the rendering of the page. Place JavaScript tags at the bottom of the HTML document or use the async or defer attributes to load JavaScript asynchronously. Use techniques like critical CSS to deliver the minimal CSS required for initial rendering. \nOptimize Images: Compress images without compromising quality, resize them to the appropriate dimensions, and use modern image formats such as WebP or AVIF. Additionally, consider lazy loading images and using responsive images based on the user’s device.\nOptimize Third-Party Scripts: Evaluate the impact of third-party scripts on website performance. Load only the necessary scripts, asynchronously if possible, and consider deferring the loading of non-critical scripts.\nMonitor and Analyze Performance: Use performance monitoring tools, such as Lighthouse, PageSpeed Insights, or WebPageTest, to measure and analyze your website’s performance. These tools provide insights and suggestions for further optimizations.\nOptimize Mobile Experience: Ensure that your website is responsive and optimized for mobile devices. Optimize the design, reduce unnecessary content, and leverage techniques like conditional loading to provide a smooth experience for mobile users.\nRemember, optimizing website performance is an iterative process. Continuously monitor the performance, test the optimizations, and make data-driven decisions to improve the user experience and meet performance goals.\nGet 100% Hike!\nMaster Most in Demand Skills Now!\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "20. What is the purpose of the viewport meta tag in HTML, and how is it used?",
        "answer": "The viewport meta tag in HTML is used to control the layout and behavior of a web page on mobile devices. It allows you to define how the browser should scale and display the content on various viewport sizes, such as those of smartphones and tablets. The viewport meta tag is especially important for creating responsive and mobile-friendly websites. The viewport meta tag accepts various attributes and values to specify different aspects of the viewport behavior. The most commonly used attributes are mentioned below:\nWidth: It specifies the width of the viewport. It can have values like device-width to match the screen width of the device or a specific value in pixels (width=600) or as a CSS unit (width=80%).\nInitial-Scale: It sets the initial zoom level when the page is first loaded.\nFor example:\nThe value 1.0 represents 100% zoom, and values less than 1.0 zoom out, while values greater than 1.0 zoom in.\nMinimum-Scale and Maximum-Scale: It defines the minimum and maximum zoom levels that the user can apply to the page.\nFor example, minimum-scale=0.5 allows the user to zoom out to half of the original size.\nUser-Scalable: It determines whether the user can manually zoom the page. By setting user-scalable=no, you can prevent the user from zooming the page. \nHere’s an example of how the viewport meta tag can be used in an HTML document:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n<!DOCTYPE html>\n<html>\n<head>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>My Responsive Website</title>\n  <!-- other meta tags, styles, and scripts -->\n</head>\n<body>\n  <!-- content of the web page -->\n</body>\n</html>\nIn the above example, the viewport meta tag is set to width=device-width, initial-scale=1.0, which sets the width of the viewport to match the device’s width and set the initial zoom level to 100%.\nBy using the viewport meta tag, you can ensure that your web page renders properly on different screen sizes, allowing for better readability and user experience on mobile devices. It helps prevent issues like content overflow, small text, or excessive zooming, thus ensuring that your website is responsive and that it adapts well to various devices.\n\nAdvanced-Level Front End Interview Questions",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "21. What are some common cross-browser compatibility issues, and how do you address them?",
        "answer": "Cross-browser compatibility refers to the ability of a website or web application to function consistently and correctly across different web browsers and browser versions. Here are some common cross-browser compatibility issues and approaches to address them:\nCSS Rendering Differences: Different browsers may interpret CSS rules differently, leading to variations in the layout and appearance of elements.\nTo address this, the following must be done:\nUse CSS reset or normalize stylesheets to establish a consistent baseline across browsers.\nAvoid relying on browser-specific CSS properties or behaviors.\nTest and fine-tune the layout on different browsers, using browser-specific CSS hacks or vendor prefixes if necessary.\nConsider using CSS preprocessors like Sass or LESS, which provide cross-browser compatibility features.\nJavaScript Compatibility: JavaScript behavior can vary between browsers, especially when it comes to DOM manipulation, event handling, and ECMAScript language features.\nTo handle JavaScript compatibility, the following must be done:\nUse feature detection instead of relying on browser-specific behaviors or user agent sniffing.\nUtilize JavaScript libraries and frameworks that abstract away browser inconsistencies, such as jQuery, React, or Angular.\nTest your JavaScript code thoroughly on multiple browsers and browser versions, and consider using automated testing tools like Selenium or Cypress.\nHTML Markup Differences: Different browsers may interpret HTML markup differently, leading to inconsistencies in rendering and behavior.\nTo mitigate these issues, the following must be done:\nValidate your HTML markup using tools like the W3C Markup Validation Service to ensure compliance with web standards.\nUse semantic HTML and follow best practices to enhance compatibility.\nTest and validate your web pages on different browsers to identify and address any rendering discrepancies.\nBrowser Support for CSS3 and HTML5 Features: Not all browsers fully support the latest CSS3 and HTML5 features, which can result in inconsistent behavior or missing functionality.\nTo deal with this, the following must be done:\nCheck browser compatibility tables or caniuse.com to understand which features are supported by different browsers.\nUse polyfills or fallback techniques to provide alternative functionality or styling for unsupported features.\nConsider progressive enhancement, starting with basic functionality and progressively adding enhanced features for compatible browsers.\nPerformance Variations: Browsers have different performance characteristics, and certain code patterns or techniques may have varying impacts on performance.\nTo optimize performance across browsers, the following must be done:\nProfile and optimize your code for performance using browser developer tools.\nOptimize images, minimize HTTP requests, and employ caching techniques as discussed earlier to improve overall performance.\nConsider using performance optimization tools like Webpack or Gulp to automate optimization tasks.\nTesting on Multiple Browsers: Regularly test your website or application on different browsers and browser versions to identify and fix compatibility issues. Use browser testing tools, virtual machines, or cloud-based services that provide access to multiple browser environments.\nIt’s important to stay up-to-date with the latest browser releases, web standards, and best practices to ensure better cross-browser compatibility. Testing, validation, and being mindful of browser differences during the development process will help address and minimize cross-browser compatibility issues.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "22. What are some common SEO best practices for front-end developers to keep in mind?",
        "answer": "Front-end developers play a crucial role in implementing SEO (Search Engine Optimization) best practices to ensure that websites are search engine-friendly and can rank well in search engine results.\nHere are some common SEO best practices for front-end developers to keep in mind:\nSemantic HTML: Use semantic HTML tags to structure the content meaningfully. Properly use\n<h1> to <h6> for headings, <p> for paragraphs,\n<ul> and <ol> for lists, and <em> for emphasis, etc. Semantic markup helps search engines understand the content and improves accessibility.\nOptimized Page Titles: Set unique, descriptive, and keyword-rich titles for each page using the",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "23. How do you ensure accessibility for users with disabilities on your website?",
        "answer": "Ensuring accessibility for users with disabilities on a website involves implementing design, development, and content practices that make the website usable and accessible to a wide range of individuals. Here are some key considerations to ensure accessibility:\nSemantic HTML: Use semantic HTML tags appropriately to provide structure and meaning to the content. Use headings (\n<h1> to <h6>), lists (<ul> and <ol>), paragraphs (<p>), and other HTML elements as intended. This helps users with screen readers, as they rely on the structure of the HTML to navigate and understand the content.\nAlternative Text for Images: Include descriptive alternative text (alt attribute) for images, which provides a textual description of the image content. Screen readers can read the alternative text aloud, enabling users with visual impairments to understand the purpose and meaning of the images.\nKeyboard Accessibility: Ensure that all interactive elements, such as links, buttons, and form inputs, can be easily accessed and operated using only a keyboard. This is important for users who cannot use a mouse, have mobility impairments, or rely on assistive technologies like screen readers.\nFocus Indication: Provide a visible focus indication when navigating through interactive elements using the keyboard. This helps users understand which element has a keyboard focus, thus enhancing usability and accessibility. Use CSS styles or focus outlines to clearly highlight the focused element.\nColor Contrast: Ensure sufficient color contrast between the foreground text and the background to improve readability for users with low vision. Use tools or guidelines, such as the Web Content Accessibility Guidelines (WCAG), to check and maintain appropriate color contrast ratios.\nForm Accessibility: Make forms accessible by including proper labels and instructions. Use the element to associate labels with form inputs, allowing users with visual impairments or mobility limitations to understand the purpose of each input field. Additionally, provide helpful error messages and validation cues.\nAudio and Video Accessibility: Provide captions, transcripts, or audio descriptions for multimedia content like videos and audio files. This benefits users who are deaf or hard of hearing, as well as those who cannot access the audio portion of the content.\nReadable Text: Ensure that the text is easily readable by using clear and legible fonts, appropriate font sizes, and adequate line spacing. Avoid using text that is too small or has poor contrast, as it can be challenging for users with visual impairments.\nLogical Page Structure: Organize the content using proper headings, lists, and sections to create a logical and understandable structure. This helps users navigate and comprehend the content more efficiently, especially when using screen readers or assistive technologies.\nSkip Links: Include skip links at the beginning of the page to allow users to bypass repetitive or navigational elements and directly access the main content. This is particularly helpful for keyboard-only users who may need to navigate through lengthy menus or sidebars.\nTesting with Assistive Technologies: Test your website using assistive technologies such as screen readers, screen magnifiers, or keyboard-only navigation tools. These tools can help identify accessibility issues and allow you to make necessary improvements.\nStay Informed and Follow Standards: Keep up-to-date with accessibility guidelines and standards, such as the WCAG, and follow best practices for web accessibility. Regularly check for updates and implement accessibility features and techniques recommended by accessibility experts and organizations. Remember, accessibility is an ongoing effort, and it’s essential to involve users with disabilities in user testing and feedback. Consulting with accessibility experts and seeking their input can also greatly contribute to making a website more inclusive and accessible for all users.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "24. What are the advantages and disadvantages of using a CSS preprocessor like Sass or Less?",
        "answer": "CSS preprocessors like Sass and Less provide several benefits, such as making CSS more maintainable, themeable, and extendable. They allow for the use of variables, mixins, and advanced features, which improve organization and save time. Additionally, they contain fewer codes, so you can write CSS more quickly. On the downside, preprocessors require installation, and Sass, in particular, needs to be compiled into CSS. Some developers are also reluctant to adopt preprocessors, leading to potential compatibility issues. Additionally, Less doesn’t support functions like Sass. Despite these drawbacks, many big companies, including Uber and Airbnb, use preprocessors like Sass and Less to improve their CSS workflow.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "25. How do you implement animations and transitions in CSS? Provide an example.",
        "answer": "You can implement animations and transitions in CSS using the @keyframes rule for animations and the transition property for transitions.\nHere’s an example:\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n/* Define the keyframes for the animation */\n@keyframes slidein\n {\n  from {\n           transform: translateX(-100%);\n           }\n         to {\n           transform: translateX(0);\n           }\n  }\n  /* Apply the animation to an element */\n.element{\n    animation: slidein 1s ease-in-out;\n}\n  /* Apply a transition to an element */\n.box {\n    transition: background-color 0.5s ease-in-out;\n}\n  /* Change the background color on hover */\n.box:hover{\n    background-color: #ff0000;\n}\nIn this example, the slidein animation moves an element from left to right, and the box element has a transition that smoothly changes its background color on hover.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "26. How do you ensure accessibility for users with disabilities on your website?",
        "answer": "To ensure website accessibility for users with disabilities, designers should consider the needs of users with visual, auditory, physical, and cognitive disabilities. Proper HTML tags, alt text for images and videos, color contrast, keyboard navigation, testing with screen readers, and mobile accessibility should be implemented. Personalization can also play a crucial role in improving website accessibility for users with disabilities. Designers should use clear language and provide alternative formats for content, and continuously test and improve their websites to ensure accessibility for all users.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "27. What is the difference between responsive and adaptive design? Provide an example of each.",
        "answer": "Responsive design and adaptive design are two approaches to ensuring that a website is optimized for multiple screen sizes. \nResponsive design serves up the same site to every device but changes its layout and appearance based on the size of the screen, using CSS and breakpoints.\nFor example, one of the best responsive web design examples is “A Flexible Grid“.\nAdaptive design creates a different website layout for each screen size and serves up the layout made for that viewport based on user analytics for the most frequently used devices.\nAn example of adaptive design is when users open a website on a tablet or mobile phone, and they get a different layout than they would on a desktop computer.\nThe difference between responsive and adaptive designs is that responsive design takes less work but may sacrifice layout on certain devices and may be slower to load, while adaptive design requires more work but provides more control over each layout.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "28. What are the differences between CSS grid layout and CSS flexbox? When would you use each?",
        "answer": "CSS Grid layout and CSS Flexbox are both popular front-end frameworks used in web development.\nThe main difference between them is that CSS Grid is a two-dimensional layout system that works with rows and columns, while Flexbox is a one-dimensional layout system that works with a single row or column.\nCSS Grid is ideal for creating complex and multidimensional layouts. It provides more control over the layout, allowing designers to create unique designs with ease.\nFlexbox, on the other hand, is perfect for simpler layouts that require flexibility and alignment.\nIn summary, CSS Grid is the better choice when designing complex layouts that require multiple rows and columns, while Flexbox is perfect for simpler designs that require alignment and flexibility.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "29. Describe the concept of virtual DOM and its role in modern JavaScript frameworks like React.",
        "answer": "The virtual DOM is a concept used in modern JavaScript frameworks like React, which allows developers to build dynamic user interfaces with minimal overhead. The virtual DOM is a lightweight representation of the actual browser DOM, which is a tree-like structure representing all the elements on a web page.\nWhen changes are made to the virtual DOM, React compares it to the previous version to determine what has changed. It then updates only those parts of the actual browser DOM that have changed, rather than updating the entire page. This approach is much faster and more efficient than traditional methods, as it reduces the number of times the browser has to redraw the page.\nOverall, the virtual DOM is a powerful tool for building high-performance web applications, and its use in modern JavaScript frameworks has revolutionized the way we build user interfaces.",
        "reference": "intellipaat.com",
        "role": "front-end-developer"
    },
    {
        "question": "1. What is ClickJacking?",
        "answer": "ClickJacking is a security attack where the user is fooled to click on something while they assume they are clicking another thing. The attack mostly happens by the HTML frames. ClickJacking is also regarded as the user interface redressing. It lets the user think that they are utilising a normal UI in the web page, but in actuality, there is an unseen UI in control; you can think of it as the user interface being redressed. When users click on one thing, assuming it to be secure and safe, the hidden UI executes another action.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "2. Define HTML meta tags.",
        "answer": "Meta tags are passed as pairs of name/value.\nMeta tags can include data about encoding, document title, character description, etc,\nMeta tags fit inside the HTML page’s head tag.\nMeta tags are not displayed on the page but it is to be shown on the browser. Meta tags are passed as pairs of name/value. Meta tags can include data about encoding, document title, character description, etc, Meta tags fit inside the HTML page’s head tag. Meta tags are not displayed on the page but it is to be shown on the browser.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "3. Differentiate between div and span?",
        "answer": "DIV SPAN\nIt is utilized for separating the elements that are block-line, line break before and after it. Span is utilized for grouping inline elements in the HTML doc.\nIt contains global attributes for the certain element in HTML documents.\n  It includes certain, global and event attributes.\nAt times para tag <P> is utilised for inner side of the <div> tag. In a paragraph, <span> tag is utilized to use a CSS style for certain words with the selected font sets.\nIn div tag, we make use of borders with width height with specified color pixels to emphasize the front end document. In the Span tag, we utilize specified color coding to depict the front-end document. DIV SPAN\nIt is utilized for separating the elements that are block-line, line break before and after it. Span is utilized for grouping inline elements in the HTML doc.\nIt contains global attributes for the certain element in HTML documents.\n  It includes certain, global and event attributes.\nAt times para tag <P> is utilised for inner side of the <div> tag. In a paragraph, <span> tag is utilized to use a CSS style for certain words with the selected font sets.\nIn div tag, we make use of borders with width height with specified color pixels to emphasize the front end document. In the Span tag, we utilize specified color coding to depict the front-end document. DIV SPAN DIV SPAN DIV SPAN It is utilized for separating the elements that are block-line, line break before and after it. Span is utilized for grouping inline elements in the HTML doc.\nIt contains global attributes for the certain element in HTML documents.\n  It includes certain, global and event attributes.\nAt times para tag <P> is utilised for inner side of the <div> tag. In a paragraph, <span> tag is utilized to use a CSS style for certain words with the selected font sets.\nIn div tag, we make use of borders with width height with specified color pixels to emphasize the front end document. In the Span tag, we utilize specified color coding to depict the front-end document. It is utilized for separating the elements that are block-line, line break before and after it. Span is utilized for grouping inline elements in the HTML doc. It is utilized for separating the elements that are block-line, line break before and after it. Span is utilized for grouping inline elements in the HTML doc. It contains global attributes for the certain element in HTML documents.\n  It includes certain, global and event attributes. It contains global attributes for the certain element in HTML documents.  It includes certain, global and event attributes. At times para tag <P> is utilised for inner side of the <div> tag. In a paragraph, <span> tag is utilized to use a CSS style for certain words with the selected font sets. At times para tag <P> is utilised for inner side of the <div> tag. In a paragraph, <span> tag is utilized to use a CSS style for certain words with the selected font sets. In div tag, we make use of borders with width height with specified color pixels to emphasize the front end document. In the Span tag, we utilize specified color coding to depict the front-end document. In div tag, we make use of borders with width height with specified color pixels to emphasize the front end document. In the Span tag, we utilize specified color coding to depict the front-end document.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "4. What is React JS?",
        "answer": "  An open-source front-end JavaScript library, ReactJS is used primarily for building user interfaces, especially for one-page applications. Also, it is utilized for handling the view layer for web and mobile apps. React lets programmers build large web applications that can modify data, without the need to reload the page. The main objective of React is to be quick, scalable, and easy. It functions only on user interfaces in the application and corresponds to the view in the MVC template. It can be utilized with a combination of other JavaScript frameworks or libraries, like Angular JS in MVC.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "5. Describe the advantages of REST web services?",
        "answer": "Listed below are some of the advantages of REST web services: REST web services The curve of learning is simple since it works on the HTTP protocol.\nNo contract clears between server and client, so roughly coupled application.\nREST approaches can be effortlessly tested on the browser.\nIt also backs multiple technologies for the transfer of, for instance, image, JSON, XML, text, etc.\nIt is a lightweight protocol. The curve of learning is simple since it works on the HTTP protocol. No contract clears between server and client, so roughly coupled application. REST approaches can be effortlessly tested on the browser. It also backs multiple technologies for the transfer of, for instance, image, JSON, XML, text, etc. It is a lightweight protocol.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "6. How browsers render the UI?",
        "answer": "The primary responsibility of the rendering engine is to highlight the requested page on the browser’s screen. Rendering engines can show XML and HTML images and documents. If you’re utilising additional plugins, the engines can also exhibit various documents like PDF. Receives the requested document: The contents of the requested document is obtained by the rendering engine from HTML’s networking layer.\nConstruct the DOM tree: Parsed the HTML to the parsed tree and then set up the DOM tree, making use of it.\nConstruct the CSSOM: CSSOM stands for CSS Object Model. Post the construction of the DOM tree, it identifies a link tag in the head section, which references the external style.css CSS style sheet. So, it parsed the CSS file in CSSOM tree, something which the Browser can comprehend as the DOM tree.\nConstruct the Render tree: Utilise the HTML DOM tree coupled with the styling data of the CSSOM tree to set up a render tree. Render tree is the graphical depiction of the HTML, with the corresponding CSS. This tree enables painting the contents in their right order. Every node in the Render Tree is regarded as a renderer. The Render tree looks like this:\nLayout: When the renderer is developed and incorporated into the tree, it does not have a size or position. Computing these values is defined as layout. We use the coordinates system to position the element, such as the position of the root renderer is 0,0. The layout continues recursively via a part of the entire renderer hierarchy, calculating geometric info for every renderer that needs it. Beginning the layout process implies allowing every node the exact coordinates where it should show up on the screen.\nPainting of the Render Tree: The renderer tree is traversed in this stage and the renderer’s paint() method is hailed to exhibit the content on the screen. For good UX, the rendering engine will aim to exhibit the contents on the screen as soon as possible. It will not stand by until all the HTML is parsed to develop and layout the render tree. Receives the requested document: The contents of the requested document is obtained by the rendering engine from HTML’s networking layer. Receives the requested document: Construct the DOM tree: Parsed the HTML to the parsed tree and then set up the DOM tree, making use of it. Construct the DOM tree: Construct the CSSOM: CSSOM stands for CSS Object Model. Post the construction of the DOM tree, it identifies a link tag in the head section, which references the external style.css CSS style sheet. So, it parsed the CSS file in CSSOM tree, something which the Browser can comprehend as the DOM tree. Construct the CSSOM: Construct the Render tree: Utilise the HTML DOM tree coupled with the styling data of the CSSOM tree to set up a render tree. Render tree is the graphical depiction of the HTML, with the corresponding CSS. This tree enables painting the contents in their right order. Every node in the Render Tree is regarded as a renderer. The Render tree looks like this: Construct the Render tree: Layout: When the renderer is developed and incorporated into the tree, it does not have a size or position. Computing these values is defined as layout. We use the coordinates system to position the element, such as the position of the root renderer is 0,0. The layout continues recursively via a part of the entire renderer hierarchy, calculating geometric info for every renderer that needs it. Beginning the layout process implies allowing every node the exact coordinates where it should show up on the screen. Layout: allowing every node the exact coordinates where it should show up on the screen. Painting of the Render Tree: The renderer tree is traversed in this stage and the renderer’s paint() method is hailed to exhibit the content on the screen. For good UX, the rendering engine will aim to exhibit the contents on the screen as soon as possible. It will not stand by until all the HTML is parsed to develop and layout the render tree. Painting of the Render Tree:",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "7. What is a Grid system in CSS?",
        "answer": "CSS splits the page into grids and utilizes those grids to handle the HTML content. Utilizing the Grids, CSS can stack and highlight various elements in different parts of the grids.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "8. Describe the distinction between Class and Prototypal inheritance in Javascript?",
        "answer": "From most other programming languages, Inheritance in JavaScript is different. JavaScript's object system is prototype-based, not class-based. Objects in JavaScript are just a set of value pairs and a name (key). Talking about inheritance, JavaScript just has one construct: objects. Each object has a private property that includes a link to another object named its prototype.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "9. Explain user-centered design?",
        "answer": "An iterative design procedure, User-centred design lets the designers focus on the clients and their needs in every design process phase. The user-centered design calls for linking users in the design process via a variability of design and research techniques to make usable and highly accessible products. User-centered design demands that designers should utilize a combination of generative (such as brainstorming) and investigative (interviews and surveys) methods and instruments to create an understanding of user requirements.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "10. What skills does a front-end developer need?",
        "answer": "Frontend developers utilize different web technologies to change coded data into user-friendly interfaces. Many among these are Cascading Style Sheets (CSS), JavaScript, HyperText Markup Language (HTML), etc. Mentioned below are brief explanations of these technologies that frontend developers must be acquainted with. frontend developers frontend developers   HTML: HyperText Markup Language depicts the content on the page like buttons, links, headings, paragraphs, and lists. It is the building block of websites and is utilized to define and mark content, so a browser shows it correctly. For instance, on a blog post, an image can be seen as an <img> in HTML code, so browsers will understand that they have to display an image.\nCSS: CSS stands for Cascading Style Sheets and is accountable for the style of your web pages such as animations., colours, and layouts. CSS appears more like a group of instructions that gives structure and style to a webpage than a programming language. It enables programmers to control a web application or website's layout, formatting, and presentation. While HTML depicts elements on a page, CSS is accountable for how users see the content. For instance, it handles the border, alignment, size, of an image in a blog post.\nJavaScript: JavaScript is one of three main elements, in front-end web development, that is required to end up with a web page that can be rendered accurately. It is now challenging to visualize websites without JavaScript as it allows programmers to make the sites interactive. This programming language can transform website content on the basis of a user’s action. For instance, at the top of the page, when you click on the Menu button, it will display a dropdown list of options or when you click on a button, it will toggle back and forth between closing and opening the Menu. JavaScript is great at figuring out the kind of browser being utilised, and then rendering the page in such a way that it is not only compatible with that page, but that it works the way it is designed. Using plugins is made easier by JavaScript. When complicated dynamic interactions are required for a site, JavaScript can be implemented to design its framework instead of simply depending only on HTML.\nCSS Frameworks, Libraries, and Preprocessors: Once you understand the fundamentals of CSS, then you can begin to work with various libraries and frameworks. These tools were designed as a way to help hasten the development process. Frameworks like Tailwind CSS, and Bootstrap let you incorporate the catalogue of classes into your webpage. Hence, you end up with mobile-friendly and professional designs. There are ample choices on the market and you don't require to know them all. It's often useful to look at related jobs and check what technologies they're employing. Then you can concentrate on the most in-demand skills.\nTesting and Debugging skills: As you are creating your application, there will be mistakes in your code that require to be fixed. Debugging is the act of recognizing those bugs and resolving them. Another essential skill to know is debugging. Documenting tests for your code is a way to assure that your code is accomplishing what it is meant to do.\nVersion control: The way of tracking and the modifications to the project's code is version control. Git is regarded as a popular software that is utilized to track your code. If your code gets messed up, you can utilize Git to go back to an earlier version of your code rather than manually rewriting everything. Learning Git also lets you cooperate with others on a team and make modifications to the same code base from various locations. It is advised that you should start to learn Git and use a service like GitHub to host your projects. HTML: HyperText Markup Language depicts the content on the page like buttons, links, headings, paragraphs, and lists. It is the building block of websites and is utilized to define and mark content, so a browser shows it correctly. For instance, on a blog post, an image can be seen as an <img> in HTML code, so browsers will understand that they have to display an image. HTML: CSS: CSS stands for Cascading Style Sheets and is accountable for the style of your web pages such as animations., colours, and layouts. CSS appears more like a group of instructions that gives structure and style to a webpage than a programming language. It enables programmers to control a web application or website's layout, formatting, and presentation. While HTML depicts elements on a page, CSS is accountable for how users see the content. For instance, it handles the border, alignment, size, of an image in a blog post. CSS: JavaScript: JavaScript is one of three main elements, in front-end web development, that is required to end up with a web page that can be rendered accurately. It is now challenging to visualize websites without JavaScript as it allows programmers to make the sites interactive. This programming language can transform website content on the basis of a user’s action. For instance, at the top of the page, when you click on the Menu button, it will display a dropdown list of options or when you click on a button, it will toggle back and forth between closing and opening the Menu. JavaScript is great at figuring out the kind of browser being utilised, and then rendering the page in such a way that it is not only compatible with that page, but that it works the way it is designed. Using plugins is made easier by JavaScript. When complicated dynamic interactions are required for a site, JavaScript can be implemented to design its framework instead of simply depending only on HTML. JavaScript: CSS Frameworks, Libraries, and Preprocessors: Once you understand the fundamentals of CSS, then you can begin to work with various libraries and frameworks. These tools were designed as a way to help hasten the development process. Frameworks like Tailwind CSS, and Bootstrap let you incorporate the catalogue of classes into your webpage. Hence, you end up with mobile-friendly and professional designs. There are ample choices on the market and you don't require to know them all. It's often useful to look at related jobs and check what technologies they're employing. Then you can concentrate on the most in-demand skills. CSS Frameworks, Libraries, and Preprocessors: Testing and Debugging skills: As you are creating your application, there will be mistakes in your code that require to be fixed. Debugging is the act of recognizing those bugs and resolving them. Another essential skill to know is debugging. Documenting tests for your code is a way to assure that your code is accomplishing what it is meant to do. Testing and Debugging skills: Version control: The way of tracking and the modifications to the project's code is version control. Git is regarded as a popular software that is utilized to track your code. If your code gets messed up, you can utilize Git to go back to an earlier version of your code rather than manually rewriting everything. Learning Git also lets you cooperate with others on a team and make modifications to the same code base from various locations. It is advised that you should start to learn Git and use a service like GitHub to host your projects. Version control:",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "11. Tell me when and why should I make use of Webpack?",
        "answer": "While creating a complicated front-end application with tons of non-code static possessions, for instance, CSS, fonts, images, etc, then, of course, you should make use of Webpack since it has a lot of amazing benefits. If you have a small application that doesn't have a lot of static resources and you only have to create one file of JavaScript to help the customers, then Webpack should be more overhead than needed.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "12. Mention three ways to decrease page load time?",
        "answer": "There are numerous things accountable for lowering page load time. Let us look at the three best ways to reduce its loading time: Image Optimization: It is always advised to scale your videos and pictures before uploading them to a page.\nBrowser Cache: The utilization of cache will boost speed for pages that you have visited already.\nOptimize and compress content: Compressing the content of a website decreases the load time of a page to a great extent.\nStyleSheet Reference on Top: Setting stylesheet reference to the header of a doc allows your page to load quickly. Image Optimization: It is always advised to scale your videos and pictures before uploading them to a page. Image Optimization: Browser Cache: The utilization of cache will boost speed for pages that you have visited already. Browser Cache: Optimize and compress content: Compressing the content of a website decreases the load time of a page to a great extent. Optimize and compress content: StyleSheet Reference on Top: Setting stylesheet reference to the header of a doc allows your page to load quickly. StyleSheet Reference on Top:",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "13. How does the server hanger the page in which content is present in several languages?",
        "answer": "When an HTTP request is sent to the server by the user, the user browser also sends a chunk of additional information regarding the language preference as the Accept-Language header. Then the server reads the HTTP request with the Accept-Language header and sends the document version back along with the right language and declares the language attribute Lang in the HTML tag. Example:  ",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "14. Why did we utilize the data- the attribute in HTML and why it is now advised not to use?",
        "answer": "Generally, Data-* attributes of HTML are utilized to accumulate the custom data, which is private to the web application or page. This custom data is for personalizing the JavaScript of the user as per the user action on the web page. These days, Data-*attributes are not advised to utilize as the user can change the attribute easily just by utilizing the browser inspect console. Example:  ",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "15. Mention the benefits of CoffeeScript over JavaScript?",
        "answer": "  Write less do more − For a huge code in JavaScript, we require comparatively a very less number of lines of CoffeeScript.\nEasily understandable − The shorthand form of JavaScript is CoffeeScript, its syntax is quite simple as compared to JavaScript. Making use of CoffeeScript, we can document clean, clear, and easily discernible codes.\nReliable − CoffeeScript is a secure and reliable programming language to create dynamic programs.\nReadable and maintainable − CoffeeScript offers aliases for most of the operators, making the code readable. Also maintaining the programs written in CoffeeScript is effortless.\nClass-based inheritance − JavaScript does not have classes, in place of them, it offers powerful but complicated prototypes. Unlike JavaScript, in CoffeeScript, we can make classes and inherit them. Additionally, it also provides instant and static properties along with mixins. It utilizes JavaScript's native prototype to construct classes.\nNo var keyword − There is no requirement to utilize the var keyword to form a variable in CoffeeScript, hence we can evade accidental or undesirable scope deceleration.\nAvoids problematic symbols − There is no requirement to utilize the problematic parenthesis and semicolons in CoffeeScript. In place of curly braces, we can utilize whitespaces to distinguish the block codes such as functions, loops, etc.\nExtensive library support − In CoffeeScript, we can utilize the JavaScript libraries and vice versa. Thus, we have access to a myriad set of libraries while operating with CoffeeScript. Write less do more − For a huge code in JavaScript, we require comparatively a very less number of lines of CoffeeScript. Write less do more Easily understandable − The shorthand form of JavaScript is CoffeeScript, its syntax is quite simple as compared to JavaScript. Making use of CoffeeScript, we can document clean, clear, and easily discernible codes. Easily understandable Reliable − CoffeeScript is a secure and reliable programming language to create dynamic programs. Reliable Readable and maintainable − CoffeeScript offers aliases for most of the operators, making the code readable. Also maintaining the programs written in CoffeeScript is effortless. Readable and maintainable Class-based inheritance − JavaScript does not have classes, in place of them, it offers powerful but complicated prototypes. Unlike JavaScript, in CoffeeScript, we can make classes and inherit them. Additionally, it also provides instant and static properties along with mixins. It utilizes JavaScript's native prototype to construct classes. Class-based inheritance No var keyword − There is no requirement to utilize the var keyword to form a variable in CoffeeScript, hence we can evade accidental or undesirable scope deceleration. No var keyword Avoids problematic symbols − There is no requirement to utilize the problematic parenthesis and semicolons in CoffeeScript. In place of curly braces, we can utilize whitespaces to distinguish the block codes such as functions, loops, etc. Avoids problematic symbols Extensive library support − In CoffeeScript, we can utilize the JavaScript libraries and vice versa. Thus, we have access to a myriad set of libraries while operating with CoffeeScript. Extensive library support",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "1. Why do we utilize the “use strict”; statement?",
        "answer": "The ‘use strict’ statement sets a few restrictions in the script. Typically, it is utilized to facilitate the strict mode of the script, making sure there could be no loose coupling like undeclared variables. ‘use strict’",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "2. Mention the difference between MySQL and MongoDB?",
        "answer": "MySQL: It is a Relational Database Management System (RDBMS), which makes use of SQL as a standard language to handle its database. Like different relational database management systems, MySQL makes use of a table-like structure to stow data.\nMongoDB: MongoDB is a NoSQL database that utilizes the JSON-like structure to stow data elements. To modify and access data in MongoDB, the programmer ought to make use of the MongoDB Query Language (MQL). MySQL: It is a Relational Database Management System (RDBMS), which makes use of SQL as a standard language to handle its database. Like different relational database management systems, MySQL makes use of a table-like structure to stow data. MySQL: MongoDB: MongoDB is a NoSQL database that utilizes the JSON-like structure to stow data elements. To modify and access data in MongoDB, the programmer ought to make use of the MongoDB Query Language (MQL). MongoDB:",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "3. Define the Anonymous function in JS?",
        "answer": "Generally, the function name is defined when we define the function itself, in normal user-defined functions, but in the case of an anonymous function, the function name is not defined. Here we make use of an assignment operator and variable to stow the function as an object, then utilizing that variable, we will be capable to invoke the function itself. Example:  ",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "4. What do you know about the CSS image sprites and why it is utilized?",
        "answer": "CSS image sprites assist to render numerous images in a single line image. In a nutshell, the CSS sprites merge numerous photos into a single large image. If a web page comprises different images, then it would raise its loading time as for every image the browser has to send a distinct HTTP request, but with the help of sprites, we have a single image to request.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "5. Suggest some ways on how to fix the browser-specific styling issue?",
        "answer": "We can make a distinctive stylesheet for various browsers making use of server-side rendering.\nAnother method is utilizing a library such as Bootstrap, which already has the code to manage the browser-specific styling issue.\nReset or Normalize CSS can also be utilized. Multiple 3rd party plugins equip libraries for browser styling issues. We can make a distinctive stylesheet for various browsers making use of server-side rendering. Another method is utilizing a library such as Bootstrap, which already has the code to manage the browser-specific styling issue. Reset or Normalize CSS can also be utilized. Multiple 3rd party plugins equip libraries for browser styling issues.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "6. Mention the pitfalls for using a CSS Preprocessor like Sass?",
        "answer": "An extra tool for the preprocessor is required.\nPreprocessor files can not be performed directly on the browser.\nSlow re-compilation of the preprocessor.\nFor the preprocessor, you ought to know extra tools, which improve the learning curve of CSS. An extra tool for the preprocessor is required. Preprocessor files can not be performed directly on the browser. Slow re-compilation of the preprocessor. For the preprocessor, you ought to know extra tools, which improve the learning curve of CSS.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "7. Suggest how can we optimize our front-end page.",
        "answer": "The consumption of resources can be reduced by the pages by enhancing the server response.\nUtilize JavaScript and External CSS instead of internal or in-line.\nUtilize the framework to ensure the front-end becomes more responsive to different devices.\nOpen-source libraries can be used to manage the browser-specific styling issue.\nMake use of progressive loading like Lazy Loading to enhance the rendering of heavy elements, like videos and images.\nConnect the style sheet in the header and script at the top of the HTML's body tag.\nUtilize browser storage to keep user-specific private data. The consumption of resources can be reduced by the pages by enhancing the server response. Utilize JavaScript and External CSS instead of internal or in-line. Utilize the framework to ensure the front-end becomes more responsive to different devices. Open-source libraries can be used to manage the browser-specific styling issue. Make use of progressive loading like Lazy Loading to enhance the rendering of heavy elements, like videos and images. Connect the style sheet in the header and script at the top of the HTML's body tag. Utilize browser storage to keep user-specific private data.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "8. What is the difference between attribute and property?",
        "answer": "Attributes are an element of an HTML document while properties are a part of the Document Object Model (DOM). Example: <input type=\"text\" value=\"Tech\"> <input type=\"text\" value=\"Tech\"> Here, value and type are the attributes of HTML, but when the statement is read by the browser and parses this code it will make a DOM with different properties, like accept, autofocus, accessKey, baseURI, checked, childElementCount, align, alt, childNodes, children, classList, className, attributes, and clientHeight. Example: var data = document.querySelector(input);  // here we created a document object of input tag\nconsole.log(input.getAttribute('value')); // tech  // getting the attribute value\nconsole.log(input.value); // tech   // getting the property of the input object var data = document.querySelector(input);  // here we created a document object of input tag\nconsole.log(input.getAttribute('value')); // tech  // getting the attribute value\nconsole.log(input.value); // tech   // getting the property of the input object",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "9. State the difference between == and ===?",
        "answer": "== denotes abstract equality operator, and it inspects if two values are equal or not apart from their data types. Automatically, it transforms the type of both the operands and compares them. == Example: 1=='1';    //true\n1==1;   // true 1=='1';    //true\n1==1;   // true === denotes identity equality operator, and it inspects the values of both the operands and their data type. The outcome of the operation will be true considering both the operands are equal and have the same data type, or else it returns false. === Example: 1===1   //true\n1==='1'   // false 1===1   //true\n1==='1'   // false",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "10. In an image tag, what is the benefit of the srcset attribute?",
        "answer": "srcset is utilized when we wish to generate several resolutions of the exact image on several devices. This improves the UI. The browser will display low resolution on low-end devices, and high resolution of an image on high-end devices. Example: Example: <img srcset=\"picture_low.jpg 480w,\n             picture_high.jpg 800w\"\n     sizes=\"(max-width: 600px) 480px,\n            800px\"\n     src=\"picture_high.jpg\"\n     alt=\"Elva dressed as a fairy\"> <img srcset=\"picture_low.jpg 480w,\n             picture_high.jpg 800w\"\n     sizes=\"(max-width: 600px) 480px,\n            800px\"\n     src=\"picture_high.jpg\"\n     alt=\"Elva dressed as a fairy\">",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "11. Name the major HTTP requests",
        "answer": "HTTP Requests Description\nGET It is sent when we wish to recover data from the server. GET request is the most typically used HTTP request.\nHEAD The HEAD is a reaction that is the same as the GET request but doesn’t possess a message-body in the response. The HEAD request method is beneficial in retrieving meta-data that is documented as per the headers, without transferring the entire content. The method is commonly utilised when testing hypertext links for recent change, accessibility, and validity.\nTRACE TRACE requests are implemented to invoke a remote, application loop-back test along the path to the target resource. The TRACE method lets users to witness whatever message is being received at the other end of the request chain so that they can utilise the data for testing or diagnostic functions.\nPOST This request is utilized to transmit data from the user to the server. By submitting web forms, these requests can be made. The POST request is generally utilized to build data in the database.\nFor instance, when we build a new account on any webpage, we make use of the POST request.\nPUT It is identical to POST, but it is utilized to revise the existing data on the server. For instance, when we wish to revamp our complete account on a web page, we utilize the PUT request.\nPATCH It is identical to PUT and is utilized when we wish to revise a certain field of our data. For instance, when we just wish to update our name or any additional information about our account, we can make use of the PATCH request. HTTP Requests Description\nGET It is sent when we wish to recover data from the server. GET request is the most typically used HTTP request.\nHEAD The HEAD is a reaction that is the same as the GET request but doesn’t possess a message-body in the response. The HEAD request method is beneficial in retrieving meta-data that is documented as per the headers, without transferring the entire content. The method is commonly utilised when testing hypertext links for recent change, accessibility, and validity.\nTRACE TRACE requests are implemented to invoke a remote, application loop-back test along the path to the target resource. The TRACE method lets users to witness whatever message is being received at the other end of the request chain so that they can utilise the data for testing or diagnostic functions.\nPOST This request is utilized to transmit data from the user to the server. By submitting web forms, these requests can be made. The POST request is generally utilized to build data in the database.\nFor instance, when we build a new account on any webpage, we make use of the POST request.\nPUT It is identical to POST, but it is utilized to revise the existing data on the server. For instance, when we wish to revamp our complete account on a web page, we utilize the PUT request.\nPATCH It is identical to PUT and is utilized when we wish to revise a certain field of our data. For instance, when we just wish to update our name or any additional information about our account, we can make use of the PATCH request. HTTP Requests Description HTTP Requests Description HTTP Requests Description GET It is sent when we wish to recover data from the server. GET request is the most typically used HTTP request.\nHEAD The HEAD is a reaction that is the same as the GET request but doesn’t possess a message-body in the response. The HEAD request method is beneficial in retrieving meta-data that is documented as per the headers, without transferring the entire content. The method is commonly utilised when testing hypertext links for recent change, accessibility, and validity.\nTRACE TRACE requests are implemented to invoke a remote, application loop-back test along the path to the target resource. The TRACE method lets users to witness whatever message is being received at the other end of the request chain so that they can utilise the data for testing or diagnostic functions.\nPOST This request is utilized to transmit data from the user to the server. By submitting web forms, these requests can be made. The POST request is generally utilized to build data in the database.\nFor instance, when we build a new account on any webpage, we make use of the POST request.\nPUT It is identical to POST, but it is utilized to revise the existing data on the server. For instance, when we wish to revamp our complete account on a web page, we utilize the PUT request.\nPATCH It is identical to PUT and is utilized when we wish to revise a certain field of our data. For instance, when we just wish to update our name or any additional information about our account, we can make use of the PATCH request. GET It is sent when we wish to recover data from the server. GET request is the most typically used HTTP request. GET It is sent when we wish to recover data from the server. GET request is the most typically used HTTP request. HEAD The HEAD is a reaction that is the same as the GET request but doesn’t possess a message-body in the response. The HEAD request method is beneficial in retrieving meta-data that is documented as per the headers, without transferring the entire content. The method is commonly utilised when testing hypertext links for recent change, accessibility, and validity. HEAD The HEAD is a reaction that is the same as the GET request but doesn’t possess a message-body in the response. The HEAD request method is beneficial in retrieving meta-data that is documented as per the headers, without transferring the entire content. The method is commonly utilised when testing hypertext links for recent change, accessibility, and validity. TRACE TRACE requests are implemented to invoke a remote, application loop-back test along the path to the target resource. The TRACE method lets users to witness whatever message is being received at the other end of the request chain so that they can utilise the data for testing or diagnostic functions. TRACE TRACE requests are implemented to invoke a remote, application loop-back test along the path to the target resource. The TRACE method lets users to witness whatever message is being received at the other end of the request chain so that they can utilise the data for testing or diagnostic functions. POST This request is utilized to transmit data from the user to the server. By submitting web forms, these requests can be made. The POST request is generally utilized to build data in the database.\nFor instance, when we build a new account on any webpage, we make use of the POST request. POST This request is utilized to transmit data from the user to the server. By submitting web forms, these requests can be made. The POST request is generally utilized to build data in the database.\nFor instance, when we build a new account on any webpage, we make use of the POST request.  PUT It is identical to POST, but it is utilized to revise the existing data on the server. For instance, when we wish to revamp our complete account on a web page, we utilize the PUT request. PUT It is identical to POST, but it is utilized to revise the existing data on the server. For instance, when we wish to revamp our complete account on a web page, we utilize the PUT request. PATCH It is identical to PUT and is utilized when we wish to revise a certain field of our data. For instance, when we just wish to update our name or any additional information about our account, we can make use of the PATCH request. PATCH It is identical to PUT and is utilized when we wish to revise a certain field of our data. For instance, when we just wish to update our name or any additional information about our account, we can make use of the PATCH request. HTTP Status codes Description\nHTTP Status Code 301 - Permanent Redirect Any time one URL needs to be redirected to another permanently, a 301 redirect should be used. A 301 redirect implies that bots and visitors that come on that page will be taken to the new URL. Link equity is also passed to the new URL via a 301 redirect. \nHTTP Status Code 302 - Temporary Redirect  302 redirect is just like a 30, where it passes visitors and bots to the new page, but it may not pass along link equity. It is not recommended using 302 redirects for permanent changes.\nHTTP Status Code 404 - Not Found This implies the server did not find the file or page that the browser is requesting. 404s don’t show whether the missing resource or pages are missing temporarily or permanently. You can check what this appears to be on your site by writing in a URL that doesn’t exist. Every site will have some pages that display the 404 status codes.\nHTTP Status Code 200 - OK This is the ideal status code for a properly functioning page. \nHTTP Status Code 410 - Gone A 410 implies the page is no longer available from the server and they have set no forwarding address. Any links you present on your site that are directed to a 410 page are sending visitors and bots to a dead resource.\nHTTP Status Code 500 - Internal Server Error This status code shows a problem with the server and will affect access to your site. Bots and human visitors alike will get lost, and your link equity will go nowhere fast. \nHTTP Status Code 503 - Service Unavailable 503 response, shows that the server is unavailable. This could be because of temporarily overloading the server or maintenance of the server. HTTP Status codes Description\nHTTP Status Code 301 - Permanent Redirect Any time one URL needs to be redirected to another permanently, a 301 redirect should be used. A 301 redirect implies that bots and visitors that come on that page will be taken to the new URL. Link equity is also passed to the new URL via a 301 redirect. \nHTTP Status Code 302 - Temporary Redirect  302 redirect is just like a 30, where it passes visitors and bots to the new page, but it may not pass along link equity. It is not recommended using 302 redirects for permanent changes.\nHTTP Status Code 404 - Not Found This implies the server did not find the file or page that the browser is requesting. 404s don’t show whether the missing resource or pages are missing temporarily or permanently. You can check what this appears to be on your site by writing in a URL that doesn’t exist. Every site will have some pages that display the 404 status codes.\nHTTP Status Code 200 - OK This is the ideal status code for a properly functioning page. \nHTTP Status Code 410 - Gone A 410 implies the page is no longer available from the server and they have set no forwarding address. Any links you present on your site that are directed to a 410 page are sending visitors and bots to a dead resource.\nHTTP Status Code 500 - Internal Server Error This status code shows a problem with the server and will affect access to your site. Bots and human visitors alike will get lost, and your link equity will go nowhere fast. \nHTTP Status Code 503 - Service Unavailable 503 response, shows that the server is unavailable. This could be because of temporarily overloading the server or maintenance of the server. HTTP Status codes Description HTTP Status codes Description HTTP Status codes Description HTTP Status Code 301 - Permanent Redirect Any time one URL needs to be redirected to another permanently, a 301 redirect should be used. A 301 redirect implies that bots and visitors that come on that page will be taken to the new URL. Link equity is also passed to the new URL via a 301 redirect. \nHTTP Status Code 302 - Temporary Redirect  302 redirect is just like a 30, where it passes visitors and bots to the new page, but it may not pass along link equity. It is not recommended using 302 redirects for permanent changes.\nHTTP Status Code 404 - Not Found This implies the server did not find the file or page that the browser is requesting. 404s don’t show whether the missing resource or pages are missing temporarily or permanently. You can check what this appears to be on your site by writing in a URL that doesn’t exist. Every site will have some pages that display the 404 status codes.\nHTTP Status Code 200 - OK This is the ideal status code for a properly functioning page. \nHTTP Status Code 410 - Gone A 410 implies the page is no longer available from the server and they have set no forwarding address. Any links you present on your site that are directed to a 410 page are sending visitors and bots to a dead resource.\nHTTP Status Code 500 - Internal Server Error This status code shows a problem with the server and will affect access to your site. Bots and human visitors alike will get lost, and your link equity will go nowhere fast. \nHTTP Status Code 503 - Service Unavailable 503 response, shows that the server is unavailable. This could be because of temporarily overloading the server or maintenance of the server. HTTP Status Code 301 - Permanent Redirect Any time one URL needs to be redirected to another permanently, a 301 redirect should be used. A 301 redirect implies that bots and visitors that come on that page will be taken to the new URL. Link equity is also passed to the new URL via a 301 redirect. HTTP Status Code 301 - Permanent Redirect Any time one URL needs to be redirected to another permanently, a 301 redirect should be used. A 301 redirect implies that bots and visitors that come on that page will be taken to the new URL. Link equity is also passed to the new URL via a 301 redirect. HTTP Status Code 302 - Temporary Redirect  302 redirect is just like a 30, where it passes visitors and bots to the new page, but it may not pass along link equity. It is not recommended using 302 redirects for permanent changes. HTTP Status Code 302 - Temporary Redirect 302 redirect is just like a 30, where it passes visitors and bots to the new page, but it may not pass along link equity. It is not recommended using 302 redirects for permanent changes. HTTP Status Code 404 - Not Found This implies the server did not find the file or page that the browser is requesting. 404s don’t show whether the missing resource or pages are missing temporarily or permanently. You can check what this appears to be on your site by writing in a URL that doesn’t exist. Every site will have some pages that display the 404 status codes. HTTP Status Code 404 - Not Found This implies the server did not find the file or page that the browser is requesting. 404s don’t show whether the missing resource or pages are missing temporarily or permanently. You can check what this appears to be on your site by writing in a URL that doesn’t exist. Every site will have some pages that display the 404 status codes. HTTP Status Code 200 - OK This is the ideal status code for a properly functioning page. HTTP Status Code 200 - OK This is the ideal status code for a properly functioning page. HTTP Status Code 410 - Gone A 410 implies the page is no longer available from the server and they have set no forwarding address. Any links you present on your site that are directed to a 410 page are sending visitors and bots to a dead resource. HTTP Status Code 410 - Gone A 410 implies the page is no longer available from the server and they have set no forwarding address. Any links you present on your site that are directed to a 410 page are sending visitors and bots to a dead resource. HTTP Status Code 500 - Internal Server Error This status code shows a problem with the server and will affect access to your site. Bots and human visitors alike will get lost, and your link equity will go nowhere fast. HTTP Status Code 500 - Internal Server Error This status code shows a problem with the server and will affect access to your site. Bots and human visitors alike will get lost, and your link equity will go nowhere fast. HTTP Status Code 503 - Service Unavailable 503 response, shows that the server is unavailable. This could be because of temporarily overloading the server or maintenance of the server. HTTP Status Code 503 - Service Unavailable 503 response, shows that the server is unavailable. This could be because of temporarily overloading the server or maintenance of the server. Additional Useful Resources Front End Developer Salary in India – For Freshers & Experienced\nFront-End Developer Resume Sample (PDF): Full Guide and Example\nBest Front End Frameworks\nDifference Between Frontend and Backend – Frontend Vs Backend\nSoftware Developer Vs Software Engineer Front End Developer Salary in India – For Freshers & Experienced Front End Developer Salary in India – For Freshers & Experienced Front-End Developer Resume Sample (PDF): Full Guide and Example Front-End Developer Resume Sample (PDF): Full Guide and Example Best Front End Frameworks Best Front End Frameworks Difference Between Frontend and Backend – Frontend Vs Backend Difference Between Frontend and Backend – Frontend Vs Backend Software Developer Vs Software Engineer Software Developer Vs Software Engineer",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "12. What is stringify?",
        "answer": "IN a JSON method, stringify is used to transform a JavaScript object into a string. JSON is a common structure to receive and send data between the web server and the client, and when we wish to send data to the webserver, the object ought to be a string. Example: Example:  ",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "13. State all the elements of the CSS Box Model.",
        "answer": "In its BOX model, CSS comprises 4 elements:   Content – Displays the main content and the text of the web page.\nPadding – This area encircles the content.\nBorder – The border is the padding's outer layer.\nMargin – Margin is the area outside the border. Content – Displays the main content and the text of the web page. Content Padding – This area encircles the content. Padding Border – The border is the padding's outer layer. Border Margin – Margin is the area outside the border. Margin",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "14. What is Progressive Rendering?",
        "answer": "Progressive rendering is a process that is utilized generally to boost the web page's rendering content process. Now the rendering process is utilized in modern web development to enhance the mobile data uses of the user, async HTML fragments, prioritizing visible content, and lazy loading of images.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "1. How do I prepare for a front-end developer interview?",
        "answer": "When you're preparing for your Front-end developer interview, try to code most of your layout without taking a glance at the result till the end. If CSS, HTMLare the most important aspect of front-end development, then JavaScript tops the list of important skills to own. Organisations will spend a lot of time during your interview to test your understanding of Javascript.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "2. Why should we hire you as frontend developer?",
        "answer": "Freshers:  While interviewing for front-end developer jobs for freshers you can come across this question. The best answer would be, \" I have just begun my career, and do not have practical achievements, but I wish to explore and experience my potential by giving the best services to the company. It will be my privilege to work with your organization.\"\nExperienced: The best answer would be, “You should hire me for the role of front-end developer owing to my proven ability to create effective front-end user interfaces in line with contemporary best practices. I have experience working with JavaScript, along with the React framework, to create front-end applications.” Freshers:  While interviewing for front-end developer jobs for freshers you can come across this question. The best answer would be, \" I have just begun my career, and do not have practical achievements, but I wish to explore and experience my potential by giving the best services to the company. It will be my privilege to work with your organization.\" Freshers: \" I have just begun my career, and do not have practical achievements, but I wish to explore and experience my potential by giving the best services to the company. It will be my privilege to work with your organization.\" \" I have just begun my career, and do not have practical achievements, but I wish to explore and experience my potential by giving the best services to the company. It will be my privilege to work with your organization.\" Experienced: The best answer would be, “You should hire me for the role of front-end developer owing to my proven ability to create effective front-end user interfaces in line with contemporary best practices. I have experience working with JavaScript, along with the React framework, to create front-end applications.” Experienced: You should hire me for the role of front-end developer owing to my proven ability to create effective front-end user interfaces in line with contemporary best practices. I have experience working with JavaScript, along with the React framework, to create front-end applications.” You should hire me for the role of front-end developer owing to my proven ability to create effective front-end user interfaces in line with contemporary best practices. I have experience working with JavaScript, along with the React framework, to create front-end applications.”",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "3. What is the most challenging work you have ever done as a front-end developer?",
        "answer": "The biggest challenges faced as a front-end developer are: Make sure each UI element like button, link navigation,  works as planned despite the user having JavaScript or cookies disabled.\nMake sure everything looks similar across all browsers.\nHTML tables.\nDebugging JavaScript code. Make sure each UI element like button, link navigation,  works as planned despite the user having JavaScript or cookies disabled. Make sure everything looks similar across all browsers. HTML tables. Debugging JavaScript code.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "4. How much do front end developers get paid?",
        "answer": "As per the payscale, freshes, front-end developer gets an average of ₹305,498 per annum. An intermediate developer's salary is ₹452,073 on average. A senior developer can earn an average of ₹806,231.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "5. Is front end developer a good career?",
        "answer": "Yes, a front-end developer is regarded as a good career choice. It is in demand by top-tier players like Deloitte, Amazon, HCL, etc. Furthermore, the annual pay for a front-end developer is lucrative. In a nutshell, it is an in-demand position, good pay, and new learning each day. front-end developer",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "6. What is front end and back end web development?",
        "answer": "Front-end development is considered as the programming which concentrates on the visual elements of an app or website that a user will interact with. Back end development concentrates on the side of a website that the user can't see, meaning the server-side. Front-end development",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "7. Which language is best for front end development?",
        "answer": "The languages best for front-end development are HyperText Markup Language (HTML), Cascading Style Sheets (CSS), JavaScript, React, Angular, Vue.",
        "reference": "interviewbit.com",
        "role": "front-end-developer"
    },
    {
        "question": "1) What are the main technical and additional skills required to become a front-end developer?",
        "answer": "A candidate must obtain the following technical and additional skills to become a front-end developer:\nMust Required Skills:\nADVERTISEMENT\nADVERTISEMENT\nHTML: HTML is an acronym that stands for HyperText Markup Language. It is a standard markup language used for creating web pages. It describes the structure of a web page and tells the browser how to display the content on the web page.\nCSS: CSS is an acronym that stands for Cascading Style Sheets. It is used to display HTML elements on a screen, paper, or other media. It can also be used to control the layout of multiple web pages all at once.\nJQuery: jQuery is a very fast, small, and feature-rich JavaScript library designed to simplify the HTML DOM tree traversal and manipulation, as well as event handling, CSS animation, and Ajax.\nJavaScript: JavaScript is a scripting or programming language. This is used to implement the complex features on web pages.\nAdditional Skills:\nApart from the above mentioned technical skills, a good front-end developer should have the following skills and knowledge:\nIt would be great if the candidate has the knowledge and experience of working in any of the Content Management Systems (CMS) like WordPress, Drupal, and Joomla.\nHe must know the OOPs concept and PHP.\nKnowledge of cross-browser testing is a plus point.\nIt is good if he has some basic knowledge about SEO & tools like Dreamweaver and Flash, which present web-based information to end-users.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "2) What are some most used Git Commands and functions?",
        "answer": "Following is a list of some most used Git Commands and functions:\nGit Config: This Git command configures the username and email address.\nGit inits: This Git command is used to initialize a local Git repository.\nGit Add: This Git command adds one or more files to the staging area.\nGit Diff: This Git command is used to view the changes made to the file.\nGit Commit: This Git command makes changes to the head but not to the remote repository.\nGit reset: This Git command is used to undo local changes to the state of a Git repo.\nGit Status: This Git command displays the state of the working directory and staging area.\nGit Merge: This Git command merges a branch into an active branch.\nGit Push: This Git command uploads content from the local repository to a remote repository.\nGit Pull: This Git command is used to fetch and download content from a remote repository.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "3) How can you make your web design user-friendly, and what steps would you use to make it?",
        "answer": "A front-end developer must follow the steps given below to make their web design user-friendly:\nThe front-end developer should focus on the web site's UI (User Interface) and UX (User Experience).\nImagine and conceptualize a web page that generates a user-centric experience.\nTest the website with users to ensure optimal design. It also assures that the web page is optimized for mobile phone viewing.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "4) What do you understand by Version Control System?",
        "answer": "A Version Control System (VCS) is a program that is used to record any changes to a file or set of data so that we can restore it to a previous version if needed. It ensures that everyone on the team is working on the most up-to-date file version.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "",
        "answer": "CoffeeScript is a lightweight programming language that compiles into JavaScript. It is used to exhibit the good parts of JavaScript simply. It also enables developers to write JavaScript code better by providing constant syntax.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "6) What do you understand by a callback function?",
        "answer": "A callback function is a function that is passed as an argument to another function and ensures that a function is not going to run before a task is completed. This function runs right after the task has been completed.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "7) What do you understand by clear?",
        "answer": "A clear is used when we don't need an element to wrap around another element, like float.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "8) What are the benefits of using CoffeeScript over JavaScript?",
        "answer": "Following are some key advantages of CoffeeScript over JavaScript:\nCoffeeScript is a lightweight programming language that compiles into JavaScript.\nCoffeeScript contains a lot of lightweight add-ons like Ruby string Interpolation and Python style list comprehension.\nCoffeeScript facilitates developers to express their programs with a lot shorter code than JavaScript.\nCoffeeScript makes the JavaScript code good and more readable.\nIt is easy to perform everyday tasks with CoffeeScript rather than JavaScript.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "9) What are the key differences between XHTML and HTML?",
        "answer": "HTML and XHTML, both are markup languages. Let's see the key differences between them:\nHTML XHTML\nHTML is an acronym that stands for Hypertext Markup Language. It is the most widely used language over the internet. XHTML is an acronym that stands for Extensible Hypertext Markup Language.\nHTML is a language used to create web pages and link them from one to another. XHTML is considered a part of the XML markup language. It contains the features of both XML and HTML.\nTim Berners-Lee developed HTML in 1991. XHTML was developed by W3C, i.e., World Wide Web Consortium, and was released in 2000.\nHTML is extended from SGML and follows the format of document file format. XHTML is extended from XML and HTML and follows the markup language format.\nIn HTML, it is not necessary to write Doctype at the top. In XHTML, you must write Doctype at the top of the file.\nHTML is not strictly case-sensitive. It is not necessary to put all tags in lower or upper case. XHTML is strictly case-sensitive. Here, you have to put every tag and attribute in lower case.\nIn HTML, it is not necessary to close the tags in the order they are opened. In XHTML, you must close the tags in the order they are opened.\nHTML is an older language for linking web pages on the internet. In comparison, XHTML is called a better version of HTML.\nIn HTML, it is not necessary to mention quotes while using attributes. For example: <JavaTpoint>. In XHTML, it is mandatory to mention quotes while using attributes. For example: <JavaTpoint=\"JTP\">.\nIn HTML, filename extensions are used as \".html\", and \".htm\". In XHTML, filename extensions are used as \".xhtml\", \".xht\", \".xml\".",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "10) How are variables different in CoffeeScript than JavaScript?",
        "answer": "In JavaScript, we have to add a semi-colon for variables at the end of it to execute the program. On the other hand, in CoffeeScript, it is not necessary to add a semi-colon at the end of the statement.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "11) What do you understand by the CSS box model?",
        "answer": "The CSS box model is a way to handle CSS layout. This term is used when we talk about the design and layout of th elements. Each element is composed of its content, padding, border, and margin.\nIn other words, we can say that the CSS box model is essentially a box that wraps around every HTML element.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "12) What is the difference between Git Pull and Git Fetch commands?",
        "answer": "Git pull and Git fetch are the Git commands used to make changes and retrieve data. Let's see the key differences between them:\nGit fetch Git pull\nThe Git Fetch command downloads only new data from a remote repository. The Git fetch command is more like checking to see if any changes are available. The Git pull command pulls new data and integrates it with the current working files, updating the current HEAD branch with the latest modifications from the remote server.\nThe Git fetch command does not include any new information in your working files. The Git pull command combines remote modifications with those made locally.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "13) What do you know about CSS Selectors?",
        "answer": "CSS selectors are used to selecting or finding the HTML elements you want to style and make changes in their style. CSS selectors can be divided into the following five categories:\nSimple selectors: These CSS selectors select elements based on the name, id, class, etc.\nCombinator selectors: These CSS selectors are used to select elements based on a specific relationship.\nPseudo-class selectors: These CSS selectors select elements based on a certain state.\nPseudo-elements selectors: These CSS selectors are used to select and style a part of an element.\nAttribute selectors: These CSS selectors select elements based on an attribute or attribute value.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "14) What is the key difference between Class and Prototype-based inheritance?",
        "answer": "The most important difference between class-based and prototype-based inheritance is that a class defines a type that can be instantiated at runtime. On the other hand, a prototype is itself an object instance. In JavaScript, the object system is prototype-based, not class-based. That's why inheritance in JavaScript is different from other programming languages.\nObjects are just a collection of name and value pairs in JavaScript. In JavaScript inheritance, there is only one construct, called object. Every object has private property linked to another object known as its prototype.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "15) What is the key difference between Null and Undefined in JavaScript?",
        "answer": "Many people think that Null and Undefined are the same in JavaScript, but they have many differences. In the following table, we have included the key differences between them:\nNull Undefined\nA null is an object with no value. Undefined is a type.\nNull is an intentional absence of the value. It is one of the primitive values of JavaScript. In Undefined, the value does not exist in the compiler. It is the global object.\ntypeof null; // \"object\" typeof undefined; // \"undefined\"\nNull is equal to undefined but not identical.\nnull == undefined // true null === undefined // false\nA variable is defined as null when trying to convey that the variable is empty. A variable is defined as undefined when we try to convey that the variable does not exist or is not available.\nNull is also referred to as false.\nExample:\nnull ? console.log(\"true\") : console.log(\"false\") //\nfalse When a variable is not assigned a value, it is called Undefined.\nExample:\nvar temp;\nif(temp === undefined)\nconsole.log(\"true\");\nelse\nconsole.log(\"false\");",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "16) What is the difference between Visibility:Hidden;and Display:None;?",
        "answer": "The Visibility:Hidden; and Display:None; both are used in front-end development when we don't want to display things on the screen.\nVisibility:Hidden; is used when you don't want to show the things in output. It is not visible but contains its original space.\nDisplay:None; is also used to hide the things on the screen, but it doesn't take any space.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "17) What is the importance of HTML DOCTYPE?",
        "answer": "In HTML, the DOCTYPE declaration points to a Document Type Definition (DTD). It is used to instruct the web browser about what version of the markup language the page is written. The DOCTYPE declaration is written as the first thing in the HTML document, before the <html> tag. It is a set of markup language rules that makes the browser easily and correctly interpret the content written within.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "18) What is the key difference between a host object and a native object?",
        "answer": "Host Objects are the objects supplied by a particular environment. On the other hand, the Native Objects are the standard built-in objects provided by JavaScript.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "19) What is a marquee in HTML?",
        "answer": "In HTML, a marquee is a scrolling piece of text displayed on the webpage. According to the marquee settings, it is either scrolled horizontally across or vertically up or down your web page. The marquee effect is created by using HTML <marquee> tag, which automatically scrolls the text or images up, down, left, or right.\nNote: The <marquee> tag is now deprecated in HTML5. You can use JavaScript and CSS to create such marquee effects on the new web pages.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "20) What is the key difference between cookies, session storage, and local storage?",
        "answer": "Difference between cookies, session storage, and local storage\nCookies: Cookies allow applications to store data in the client's browser. These are small files that often include unique identifiers that web servers send to browsers. When a browser requests a new page every time, these cookies can be sent back to the server.\nSession storage: Session storage is a popular choice for storing data on a browser. The session storage property facilitates developers to save and retrieve different values. This property allows applications to store data until the window is closed.\nLocal storage: The local storage property allows developers to store data without expiration. The key difference between local storage and session storage is that the session storage only keeps data for a particular session, and the data is cleared once the user closes the browser window. On the other hand, the local storage property allows applications to store data without an end.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "21) What do you understand by Semantic HTML? How does it work?",
        "answer": "Semantic HTML is a type of coding that uses HTML markup to reinforce the semantics or meaning of the information in web pages and web applications rather than merely to define its presentation or look. Semantic HTML is processed by traditional web browsers and many other user agents. It is used to emphasize the content's semantics or meaning.\nThe tags are different in semantic HTML as compared to normal HTML. For example, the <b></b> tag is not used for bold statements in semantic HTML, and the <i></i> element is for italic. Instead, we use the <strong></strong> tags and <em></em> tags respectively.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "22) What do you understand by Web Accessibility?",
        "answer": "Web Accessibility is a way to design, develop, and code websites and web tools that people with disabilities can also use. It makes using the technology easy for certain people who have difficulties hearing or seeing. It ensures that the web is also usable by people with a wide range of disabilities.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "23) What is the difference between Git Merge and Git Rebase?",
        "answer": "Git merge, and Git rebase are both used to integrate changes from one branch into another. Git rebase moves a feature branch into a master while the Git merge adds a new commit, preserving the history.\nAccording to the official Git manual, the Git Rebase \"reapplies commits on top of another base branch\". On the other hand, Git merge \"joins two or more development histories together\". In other words, we can see that the Git merge preserves history as it happened, while the Git rebase rewrites it.\nFor example, if you are working on a new feature in a dedicated branch, and another team member pushes new commits to the master branch, the Git merge will incorporate new commits into your feature branch. Every time you need to include modifications, you would require an extra merging commit. On the other hand, in Git rebase, you can rebase the feature branch into master instead of merging it. This includes all the new commits in the master branch and rewrites the project history by creating brand new commits for each one in the original branch.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "24) What is functional programming in JavaScript?",
        "answer": "In JavaScript, functional programming is a programming paradigm mainly designed to handle pure mathematical functions as it focuses on writing more compounded and pure functions. It is used in JavaScript as JavaScript is a multi-paradigm language. In JavaScript, we can easily mix a lot of different paradigms inside a simple piece of JavaScript code. We can use procedural, object-oriented, and functional programming paradigms simultaneously in JavaScript, which makes it more powerful.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "25) What do you understand by lazy loading? What are the advantages and disadvantages of lazy loading?",
        "answer": "Lazy loading is a design pattern and optimization technique used in computer programming to delay the initialization of an object until a required period. It is also known as on-demand loading. This optimization technique is used for online content like a website or a web app. It is used to enhance the performance of the web page. In this technique, instead of loading the entire web page and rendering it to the user in one go as in bulk loading, only the required section is loaded, and it delays the remaining part of the web page until the user requires it.\nAdvantages of Lazy loading\nLazy loading or on-demand loading enhances the performance of web pages by reducing time consumption and memory usage.\nIt optimizes the content delivery on the web page.\nIt loads only a fraction of the web page first, which is required. Thus, the time taken is less, and the loading of the rest of the part of the web page is delayed, which saves storage.\nIt enhances the user's experience as the requested content is delivered quickly.\nIt avoids unnecessary code execution.\nIt is cost-effective as it practices the optimal time and space resources usage.\nDisadvantages of Lazy loading\nThe developers have to add some extra lines of code to the existing ones to implement lazy load. It can make the code a bit complicated.\nSometimes, lazy loading may affect the website's ranking on search engines because of improper indexing of the content, which is not loaded.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "26) What is the syntax of using a function as a class?",
        "answer": "Following is the syntax of using a function as a class:\nfunction functionName(name) {  \nthis.name = name;  \n}  \n// Creating an object  \nvar variable_name= new functionName(\"JTP\");  \nconsole.log(variable_name.name); //JTP",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "27) What is the difference between a tag and an attribute in HTML?",
        "answer": "Tags and attributes are two concepts used in HTML. They work together but perform different functions. The main difference between an HTML tag and an HTML attribute is that an HTML tag is a way of representing an HTML element in the program. On the other hand, an HTML attribute describes the characteristics of an HTML element. For example, <a>, <href>, <button>, and <div> etc. are HTML tags and src, class, and id etc. are the example of HTML attributes.\nSee this example:\n<img src=\"myhome.jpg\" alt=\"A photo of my home.\">  \nIn the above example, the image source (src) and the alt text (alt) are attributes of the <img> tag.\nDifference between HTML tags and HTML attributes\nHTML Tags HTML Attributes\nHTML tags are generally the starting and ending parts of the HTML code. HTML attributes are used to define the character of the HTML elements.\nHTML tags define a way to represent and hold HTML elements in the program. HTML attributes are generally used to provide additional styling to the element.\nHTML tags begin with < symbol and end with > symbol. HTML attributes are always placed in the opening tag of an element.\nHTML tags are like keywords where every single tag has a unique meaning. HTML attributes provide various additional properties to the existing HTML element.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "28) What is CSS float?",
        "answer": "CSS float is a property that is used to specify whether an element should float to the left, right, or not at all. It is used when we have to push our web page element left or right and make all other elements cover around it.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    },
    {
        "question": "29) What is the difference between inline and block elements in HTML?",
        "answer": "The HTML inline and block elements are important areas of front-end development. Let us see the differences between the inline and block elements in HTML:\nBlock Elements: Block elements are types of blocks that contain many elements in a line itself. They consider top and bottom margins and don't contain any other elements next to them. They consume the full width available and always start in a new line.\nExamples of Block elements:\n<h1>-<h6>: These elements include headings of different sizes ranging from 1 to 6. Here, the smaller the number, the bigger the heading size.\n<div>: This element is used to make separate content divisions on the web page.\n<li>: This block element includes list items of an ordered or unordered list.\n<ul>: This block element is used to make an unordered list.\n<ol>: This block element is used to make an ordered list.\n<hr>: This block element is an empty tag used to separate content by horizontal lines.\n<p>: This block element includes paragraphs of content in the webpage.\n<table>: This block element includes the tables in the web page when it requires tabular data.\nHTML 5 Semantic block elements:\n<header>: This semantic block element includes all the main things of the webpage like navbar, logos, and heading of the webpage.\n<nav>: This semantic block element helps navigate different sections by including different blocks of hyperlinks in the webpage.\n<footer>: This semantic block element contains all information about the web page's authorization, contact, and copyright details.\n<main>: This semantic block element is used to specify the main content of the webpage.\n<section>: This semantic block element is used to specify separate different sections in the webpage.\n<article>: This semantic block element includes different independent articles on the webpage.\n<aside>: This semantic block element mentions details of the main content aside.\nInline Elements: Inline elements take up only enough width that is sufficient to them and allow other elements next to it inline. They do not have top and bottom margins as block elements have only the left and right and consider the padding.\nExamples of Inline elements:\n<a>: This inline element includes hyperlinks in the webpage.\n<br>: This inline element mentions line breaks in the webpage where ever needed.\n<script>: This inline element is used to include external and internal JavaScript codes.\n<input>: This inline element accepts input from the users and is mainly used in forms.\n<img>: This inline element includes different images in the webpage to add beauty to the webpage.\n<span>: This inline element is an inline container that takes necessary space only.\n<b>: This inline element is used in places where bold text is needed.\n<label>: This inline element provides a usability improvement for mouse users, i.e., if a user clicks on the text within the <label> element, it toggles the control.",
        "reference": "javatpoint.com",
        "role": "front-end-developer"
    }
]