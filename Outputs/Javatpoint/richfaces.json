[
    {
        "question": "1) What is RichFaces?",
        "answer": "RichFaces is an open source, advanced user interface component framework which is used to easily integrate Ajax capabilities into JavaServer application.\nFor more information Click here,",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What are the advantages of RichFaces?",
        "answer": "RichFaces provides numerous advantages like:\nADVERTISEMENT\nProvides rich user interface components library.\nAllows to create custom components with built in ajax support.\nFor more information Click here,",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) How to configure RichFaces in JSF?",
        "answer": "To configure RichFaces, we need to download JARs provided by Jboss. After downloading, we can add that in our project.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is the architecture of RichFaces?",
        "answer": "Architecture of RichFaces consist of the following components.\nAjax Action Components.\nAjax Containers\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) How to send Ajax request in RichFaces ?",
        "answer": "RichFaces provides tag libraries which are capable to send Ajax request from JavaServer Faces pages.\nThe <a4j:commandButton> and <a4j:commandLink> tags are used to send an Ajax request on the click JavaScript event.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) Why do we use RichFaces <a4j:log> component?",
        "answer": "The <a4j:log> component generates JavaScript that opens a debug window, logging application information such as requests, responses, and DOM changes.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) Why do we use RichFaces outputPanel?",
        "answer": "This component is used to group components together to update that as a whole rather than specify the components individually.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) How to implement RichFaces calendar in JSF?",
        "answer": "RichFaces provides calendar component that we can implement in the JSF file.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) How to implement RichFaces editor in JSF?",
        "answer": "RichFaces provides the <rich:editor> component which is used to create a WYSIWYG editor in the HTML page.\nThe <rich:editor> component is based on the CKEditor implementation.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) How to upload file using RichFaces?",
        "answer": "RichFaces provides the <rich:fileUpload> component which is used to upload files to the server. It provides lots of attributes that we can use in our application.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) What is RichFaces inplaceInput?",
        "answer": "RichFaces provides <rich:inplaceInput> component which is used to create a editable text box. It allows text to be entered in-line in blocks of text.\n\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What is difference between inplaceInput and inplaceSelect?",
        "answer": "InplaceSelect component is similar to the <rich:inplaceInput> component, except that it uses a drop-down selection box to enter text instead of a text field.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What is RichFaces inputNumberSlider?",
        "answer": "It provides a slider for changing numerical values. It is used to select numerical value by selecting from the slider's range.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What is RichFaces inputNumberSpinner?",
        "answer": "This component is a single-line input field with buttons to increase and decrease a numerical value. It is used to input values by using provided spinner.\n\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) How to use RichFace select in JSF?",
        "answer": "We can use it in an auto-completing mode, where the values in the drop-down list are provided dynamically using either the autocompleteMethod or autocompleteList attributes.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is the RichFaces orderingList?",
        "answer": "RichFaces provides <rich:orderingList> component for ordering items in a list at client-side. We need to use the value attribute to the list to be ordered.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What is the RichFaces pickList?",
        "answer": "It is used to select items from a list. It allows us to change order of selected items at client-side. We can add, remove items from the source list to the target list and vice-versa.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the RichFaces panel?",
        "answer": "It is a bordered panel with an optional header. For basic usage, it does not require any attribute. A <rich:panel> without any attributes defined renders a bordered region with no header.\nWe should use header attribute to specify the text to appear in the header.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) How to implement RichFaces dataTable in JSF?",
        "answer": "It is used to render a table which displays data in tabular form. It works with the <rich:column> and <rich:columnGroup> components to list the contents of a data model.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What is difference between RichFaces dataTable and collapsibleSubTable?",
        "answer": "This component acts as a child element to the <rich:dataTable>. It iterates through the child collections in the currently iterated object to create detailed tables.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is RichFaces list?",
        "answer": "RichFaces provides <rich:list> to render a list of items. We can create numerically ordered list, an un-ordered, bullet-point list etc. It uses a data model for managing the list items which can be updated dynamically.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) How to make table scrollable using RichFaces?",
        "answer": "The<rich:dataScroller> is used for navigate through multiple pages of tables. It must be places in a facet of the table. We can also use the for attribute to bind parent tables to the scroller.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) How to implement RichFaces tree in JSF?",
        "answer": "The <rich:tree> component is used to create a hierarchical tree. It uses <rich:treeNode> as a child component.\nWe can create customize tree according to our requirement.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) How to create RichFaces drop-dow menu in JSF?",
        "answer": "The <rich:dropDownMenu> component is used to create a drop-down or a hierarchical menu. We can use it with the <rich:toolbar> component to create menus in an application?s toolbar.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) How to create RichFaces toolbar in JSF?",
        "answer": "The <rich:toolbar> component is used to create a horizontal toolbar. Any JavaServer Faces ( JSF) component can be added to the toolbar.\nThe <rich:toolbar> component does not require any attributes to be defined for basic usage.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) What is difference between RichFaces message and messages?",
        "answer": "The <rich:messages> component works similar to the <rich:message> component and automatically rendered after an Ajax request. It is used to display all the validation messages of the current web page collectively.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What is RichFaces notifyStack?",
        "answer": "It is used to define the position of messages at the web page. Messages displayed by <rich:notify> or <rich:notifyMessage> are displayed in top-right corner of the web page by default.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) How to implement RichFaces progress bar in JSF?",
        "answer": "Progress Bar is used to display the status of a process. It can update either through Ajax or on the client side, and the look and feel can be fully customized.\nFor more information Click here.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) What is RichFaces tool-tip?",
        "answer": "It is used to provide an informational tool-tip. We can attach tool-tip to any control and is displayed when hovering the mouse cursor over the control.\nFor more information Click here.",
        "reference": "javatpoint.com"
    }
]