[
    {
        "question": "1) What is Struts?",
        "answer": "Struts is a framework for developing MVC-based framework. Struts2 is the combination of Webwork and struts1 frameworks. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What is the difference between struts1 and struts2?",
        "answer": "No. Struts1 Struts2\n1) Action class is not POJO. You need to inherit abstract class. Action class is POJO. You don't need to inherit any class or implement any interface.\n2) Front controller is ActionServlet. Front Controller is StrutsPrepareAndExecuteFilter.\n3) It uses the concept of RequestProcessor class while processing request. It uses the concept of Interceptors while processing the request.\n4)\nIt has only JSP for the view component. It has JSP, Freemarker, Valocity etc. for the view component.\n5) Configuration file name can be [anyname].xml and placed inside WEB-INF directory.\nConfiguration file must be struts.xml and placed inside classes directory.\n6) Action and Model are separate. Action and Model are combined within action class.\n3) What are the features of Struts?\nADVERTISEMENT\nConfiguration MVC components\nPOJO based action\nAJAX Support\nVarious Tag Support\nVarious Result Types\nIntegration Support\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What are the features of Struts?",
        "answer": "ADVERTISEMENT\nConfiguration MVC components\nPOJO based action\nAJAX Support\nVarious Tag Support\nVarious Result Types\nIntegration Support\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is MVC?",
        "answer": "MVC is a design pattern. MVC stands for Model, View and Controller. Model represents data, view represents presentation and controller acts as an interface between model and view.\n\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What is interceptor?",
        "answer": "Interceptor is an object i.e. invoked at preprocessing and postprocessing of a request. It is pluggable. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What are the life cycle methods of interceptor?",
        "answer": "public void init()\npublic void intercept(ActionInvocation ai)\npublic void destroy()\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What is ValueStack?",
        "answer": "ValueStack is a stack that contains application specific object such as action and other model. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is ActionContext?",
        "answer": "ActionContext is a container in which action is executed. It is unique per thread. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What is ActionInvocation?",
        "answer": "ActionInvocation is responsible to invoke action. It holds action and interceptor objects. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What is OGNL?",
        "answer": "OGNL is an expression language of struts2. It stands for Object Graph Navigation Language. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) What are the 5 constants of Action interface?",
        "answer": "SUCCESS\nERROR\nINPUT\nLOGIN\nNONE\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What does params interceptor?",
        "answer": "The params (also known as parameters) interceptor sets all parameters on the ValueStack. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What does execAndWait interceptor?",
        "answer": "The execAndWait (also known as ExecuteAndWait) interceptor is used to display intermediate or wait result. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What does modelDriven interceptor?",
        "answer": "The modelDriven interceptor makes other model as the default object of ValueStack. By default, action is the default object of ValueStack. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What does validation interceptor?",
        "answer": "The validation interceptor performs validation checks and adds field-level and action-level error messages. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What are the bundled validators?",
        "answer": "requiredstring\nstringlength\nemail\ndate\nint\ndouble\nurl\nregex\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What is the difference between plain-validator and field-validator?",
        "answer": "In plain-validator one validator can be applied to many fields. In field-validator many validators can be applied to single field. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the use of jsonValidation?",
        "answer": "The jsonValidation interceptor is used to perform asynchronous validation. It works with validation and workflow interceptors. More details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What are the aware interfaces in struts2?",
        "answer": "Aware interfaces are used to store information in request, session, application and response objects. The 4 aware interfaces are given below:\nServletRequestAware\nServletResponseAware\nSessionAware\nServletContextAware\nMore details...",
        "reference": "javatpoint.com"
    }
]