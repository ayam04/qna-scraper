[
    {
        "question": "1) What are the various types of mobile operating systems?",
        "answer": "Following are the various types of mobile operating systems:\nADVERTISEMENT\nAndroid OS: It was developed by Google Inc.\niOS: It was developed by Apple Inc.\nSeries 40 [S40] OS: It was developed by Nokia Inc.\nBlackBerry OS: It was developed by BlackBerry Limited.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What is mobile application testing?",
        "answer": "Mobile application testing is a process in which the applications developed for handheld mobile devices are tested to ensure their functionality, usability, consistency, and reliability. There are two ways in which mobile testers can perform mobile application testing manually or with automation.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What are the different versions of the Android operating system?",
        "answer": "Following is a list of all the versions of the Android operating system to date:\nAndroid 1.0\nAndroid 1.1\nAndroid 1.5 Cupcake\nAndroid 1.6 Donut\nAndroid power 2.0\nAndroid 2.2 Froyo\nAndroid 2.3 Gingerbread\nAndroid 3.0 Honeycomb\nAndroid 4.0 Ice Cream Sandwich\nAndroid 4.1 Jelly Bean\nAndroid 4.4 KitKat\nAndroid 5.0 Lollipop\nAndroid 6.0 Marshmallow\nAndroid Nougat 7.0\nAndroid 8.0 Oreo\nAndroid 9 Pie\nAndroid 10\nAndroid 11",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is the latest version of the Android mobile operating system?",
        "answer": "The latest version of the Android mobile operating system is Android 11. This is the eleventh major release and the 18th version of Android. The Google-led Open Handset Alliance developed this operating system for mobile devices, and its latest version, Android 11, was released on September 8, 2020. It is the latest Android version used in android smartphones.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What are the latest versions of iOS and iPadOS?",
        "answer": "The latest versions of iOS and iPadOS are iOS 14 and iPadOS 14, respectively. These latest versions have been announced at its annual WWDC 2020 event on June 22, 2020, and released on September 16, 2020. This latest version can extend the features of iOS 13, so all devices that support iOS 13 can also support iOS 14.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What are the different types of mobile devices?",
        "answer": "Mobile devices are usually handheld computers. There are mainly two types of mobile devices which later have many subtypes depending on their characteristics, such as physical dimensions, hardware, and software capabilities:\nThe mainly two types of mobile devices are:\nTablets\nSmartphones mobile",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What are the main differences between tablets and smartphones based on their features?",
        "answer": "Following are the main differences between tablets and smartphones based on their features:\nTablets: A tablet is a type of portable computing device. Unlike the traditional computer, the tablet doesn't have a keyboard or mouse; however, the entire screen is touch-sensitive. This is mainly used as a smaller substitute for laptop or reading devices, and it is generally larger than smartphones in size.\nSmartphones: A smartphone is a powerful mobile phone which provides a lot of additional features such as a great camera, watch, calculator, calendar, online games, and many other software applications benefits as compared to normal mobile phones. It is mainly designed to run a wide variety of applications along with providing basic phone services. It is generally smaller in size than a tablet.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is the difference between Web testing and WAP testing?",
        "answer": "Difference between Web testing and WAP testing:\nWeb Testing: Web Testing is a form of testing mainly related to testing web applications such as websites, portals, and blogs.\nWAP Testing: WAP Testing is mainly dedicated to the WAP (Wireless Application Protocol) used in network applications.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What is the difference between simulator and emulator in mobile testing?",
        "answer": "Difference between simulator and emulator in mobile testing:\nSimulator: Simulator is electronic network simulation equipment or base station equipment for CDMA/CMA mobile phones. It is used to latch the home networks without roaming services and facilitates users to make voice calls, data calls, and SMS.\nEmulator: Emulator is software used to test the mobile application without a live handset.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What are the different automated mobile testing tools?",
        "answer": "There are mainly two types of automation tools available to test mobile applications in mobile testing:\nObject-based mobile testing tools: Jama solution, Ranorex, etc.\nImage-based mobile testing tools: RoutinBot, Egg Plant, Sikuli, etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) Why is mobile testing important for businesses today?",
        "answer": "Testing is one of the most important parts of every software development process so, the mobile application is no exception. As the uses of mobiles are growing day by day, it gives rise to massive operation system fragmentation, screen sizes, and more. The QA teams must make a tremendous effort to ensure a seamless experience for users across various mobile devices without any functionality bugs and issues. The product team assigns a team of testers to test mobile applications through rigorous testing. This can help to enhance the app's ratings and customer satisfaction for valuable referrals for even more downloads.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What are the different types of mobile app testing?",
        "answer": "Following are the different types of mobile app testing:\nUsability Testing\nCompatibility Testing\nInterface testing\nServices testing\nLow-level resource testing\nPerformance Testing\nOperational testing\nInstallation tests\nSecurity Testing",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What are the various types of mobile applications? / What is the difference between a web app, native app, and hybrid app?",
        "answer": "There are mainly three types of mobile applications:\nWeb Application\nNative Application\nHybrid Application\nWeb Application\nA web application is not a real application. It is a website that runs inside a mobile web browser, such as Chrome, Firefox, Opera, Safari using a mobile network or WIFI. Mobile websites have a wide audience of all primary types of applications. For example, some of the web applications are m.facebook.com, m.gmail.com, etc.\nAdvantages:\nEasy to access without downloading.\nEasy development.\nEasy update\nDrawbacks:\nYou cannot access file systems and local resources on websites.\nMany existing websites do not support offline capabilities.\nYou have to open the website only in a web browser.\nIt is not easily redistributable such as native and hybrid apps which appear on the App Store and Google Play.\nNative Application\n\nA native application is a software application that is built in a specific programming language and developed specifically for a particular device platform, i.e., iOS or Android. It can be easily installed into your devices installed through an application store such as the Google Play Store for Android and App Store for iOS. For example, WhatsApp or Facebook.\n\nAdvantages:\nIt can be accessed via the original application you have installed on your mobile device.\nIt provides the full advantage of all device features such as camera, GPS, accelerometer, compass, list of contacts, etc.\nYou can use the device's notification system and work offline.\nIt is built in a way to provides the best user experience.\nAs it is found in the App Store, so redistribution is easy.\nDrawbacks:\nThe creation cost of these types of applications is very high.\nThe maintenance is also very high.\nHybrid Application\nA hybrid application is a combination of a web application and a native application. Even though this type of application can be installed on a device just like a native app, it is a web application built with HTML, CSS, or JavaScript and runs in a webview. These applications provide a way of exposing content from existing websites in an app format. You can say that these applications are a mixture of web applications and native applications. For example, Instagram, Wikipedia, etc.\nAdvantages:\nThe development cost of hybrid applications is cheaper than native applications.\nThese are mainly built for cross-platform use.\nThe maintenance of hybrid applications is simple, as there are not many versions to maintain.\nThese applications provide some features available on the device itself.\nThese can be found in the App Store, making delivery easier.\nThey already have a browser embedded within the application.\nDrawbacks:\nHybrid apps are slightly slower than native apps because of the outdated technology used compared to native applications.\nIn these applications, graphics are less accustomed to operating systems than native apps.",
        "reference": "javatpoint.com"
    },
    {
        "question": "Web Application",
        "answer": "A web application is not a real application. It is a website that runs inside a mobile web browser, such as Chrome, Firefox, Opera, Safari using a mobile network or WIFI. Mobile websites have a wide audience of all primary types of applications. For example, some of the web applications are m.facebook.com, m.gmail.com, etc.\nAdvantages:\nEasy to access without downloading.\nEasy development.\nEasy update\nDrawbacks:\nYou cannot access file systems and local resources on websites.\nMany existing websites do not support offline capabilities.\nYou have to open the website only in a web browser.\nIt is not easily redistributable such as native and hybrid apps which appear on the App Store and Google Play.\nNative Application\n\nA native application is a software application that is built in a specific programming language and developed specifically for a particular device platform, i.e., iOS or Android. It can be easily installed into your devices installed through an application store such as the Google Play Store for Android and App Store for iOS. For example, WhatsApp or Facebook.\n\nAdvantages:\nIt can be accessed via the original application you have installed on your mobile device.\nIt provides the full advantage of all device features such as camera, GPS, accelerometer, compass, list of contacts, etc.\nYou can use the device's notification system and work offline.\nIt is built in a way to provides the best user experience.\nAs it is found in the App Store, so redistribution is easy.\nDrawbacks:\nThe creation cost of these types of applications is very high.\nThe maintenance is also very high.\nHybrid Application\nA hybrid application is a combination of a web application and a native application. Even though this type of application can be installed on a device just like a native app, it is a web application built with HTML, CSS, or JavaScript and runs in a webview. These applications provide a way of exposing content from existing websites in an app format. You can say that these applications are a mixture of web applications and native applications. For example, Instagram, Wikipedia, etc.\nAdvantages:\nThe development cost of hybrid applications is cheaper than native applications.\nThese are mainly built for cross-platform use.\nThe maintenance of hybrid applications is simple, as there are not many versions to maintain.\nThese applications provide some features available on the device itself.\nThese can be found in the App Store, making delivery easier.\nThey already have a browser embedded within the application.\nDrawbacks:\nHybrid apps are slightly slower than native apps because of the outdated technology used compared to native applications.\nIn these applications, graphics are less accustomed to operating systems than native apps.",
        "reference": "javatpoint.com"
    },
    {
        "question": "Native Application",
        "answer": "A native application is a software application that is built in a specific programming language and developed specifically for a particular device platform, i.e., iOS or Android. It can be easily installed into your devices installed through an application store such as the Google Play Store for Android and App Store for iOS. For example, WhatsApp or Facebook.\n\nAdvantages:\nIt can be accessed via the original application you have installed on your mobile device.\nIt provides the full advantage of all device features such as camera, GPS, accelerometer, compass, list of contacts, etc.\nYou can use the device's notification system and work offline.\nIt is built in a way to provides the best user experience.\nAs it is found in the App Store, so redistribution is easy.\nDrawbacks:\nThe creation cost of these types of applications is very high.\nThe maintenance is also very high.\nHybrid Application\nA hybrid application is a combination of a web application and a native application. Even though this type of application can be installed on a device just like a native app, it is a web application built with HTML, CSS, or JavaScript and runs in a webview. These applications provide a way of exposing content from existing websites in an app format. You can say that these applications are a mixture of web applications and native applications. For example, Instagram, Wikipedia, etc.\nAdvantages:\nThe development cost of hybrid applications is cheaper than native applications.\nThese are mainly built for cross-platform use.\nThe maintenance of hybrid applications is simple, as there are not many versions to maintain.\nThese applications provide some features available on the device itself.\nThese can be found in the App Store, making delivery easier.\nThey already have a browser embedded within the application.\nDrawbacks:\nHybrid apps are slightly slower than native apps because of the outdated technology used compared to native applications.\nIn these applications, graphics are less accustomed to operating systems than native apps.",
        "reference": "javatpoint.com"
    },
    {
        "question": "Hybrid Application",
        "answer": "A hybrid application is a combination of a web application and a native application. Even though this type of application can be installed on a device just like a native app, it is a web application built with HTML, CSS, or JavaScript and runs in a webview. These applications provide a way of exposing content from existing websites in an app format. You can say that these applications are a mixture of web applications and native applications. For example, Instagram, Wikipedia, etc.\nAdvantages:\nThe development cost of hybrid applications is cheaper than native applications.\nThese are mainly built for cross-platform use.\nThe maintenance of hybrid applications is simple, as there are not many versions to maintain.\nThese applications provide some features available on the device itself.\nThese can be found in the App Store, making delivery easier.\nThey already have a browser embedded within the application.\nDrawbacks:\nHybrid apps are slightly slower than native apps because of the outdated technology used compared to native applications.\nIn these applications, graphics are less accustomed to operating systems than native apps.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What is the use of manual testing and automation testing?",
        "answer": "Manual testing: Manual testing is performed when the application introduces some new functionality and only a few times is required.\n\nAutomatic testing: Automatic testing is performed on applications in critical scenarios where we have to repeat the regression tests.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What are the main differences between mobile device testing and mobile application testing?",
        "answer": "Differences between mobile device testing and mobile application testing:\nMobile device testing: In mobile device testing, the tester mainly examines the quality of the device by validating its hardware and software functions. This process is used to test the device's specific features such as screen, memory, camera, applications, etc. This testing also includes factory testing and certification testing.\nMobile application testing: In mobile application testing, the testers mainly focus on testing mobile applications on different mobile devices to ensure their consistency and functionality. This process is used to ensure the quality of the product. After this process, you can measure the targeted application's quality, whether it is well-suited for the device in terms of hardware, software, network connectivity, etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What does the mobile device testing generally include?",
        "answer": "The mobile device testing generally includes the hardware and software testing for mobile. Following are the different types of tests that are typically being done on mobile devices in this testing:\nUnit-testing\nFactory testing\nMobile app testing\nHardware testing\nReceiving signal testing\nBattery (charging) testing\nNetwork testing\nProtocol testing\nMobile game testing\nMobile software compatibility testing\nCertification testing before releasing the mobile device in the market.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What are the most common challenges the mobile testers face in mobile application testing?",
        "answer": "Following are some most common challenges that mobile testers face in mobile application testing:\nIt is tough to find out the best choice of mobile testing tool for the QA team.\nDifferent application types, i.e., native, hybrid, and web applications, require different ways to test.\nExecuting test cases with various operating systems.\nTesting different functionalities of the application on a wide range of handsets may be hectic.\nTesting applications on different mobile networks.\nScreen size fragmentation.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the difference between device testing and application testing?",
        "answer": "Following are some differences between device testing and application testing\nDevice testing is used to test mobile devices, their hardware, and their functionalities. On the other hand, application testing includes testing an app running on the selected device.\nIn device testing, we mainly focus on hardware. While, in the case of mobile application testing, it depends. If the hardware integration is required for the application under test, then hardware testing will be involved.\nAutomation is possible for mobile device testing as well as mobile application testing.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What do you understand by the Android testing framework?",
        "answer": "Android testing framework consists of the following three segments:\nApplication Package: The application package is the target application that must be tested.\nInstrumentation TestRunner: This is a Test Case runner that runs test cases on the target application. It contains an SDK tool for building tests and provides APIs for writing programs for controlling the android device, for example, MonkeyRunner.\nTest Package: It contains two classes, Test case classes and Mock objects. The test case classes consist of test methods to perform on-target applications, while the mock object includes the mock data used as sample input for test cases.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What testing type should be included in the Android testing strategy?",
        "answer": "A standard Android testing strategy should include the following testing types:\nUnit testing\nSystem testing\nIntegration testing\nOperation testing\nIt should also perform some other types of tests if required, depending on the application's features.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What are the best practices for Android Testing?",
        "answer": "Following is a list of some best practices for Android Testing:\nA tester must acknowledge the developer to prepare the test cases simultaneously when they are writing the code.\nAll test cases should be stored together with the source code.\nA tester should avoid using rooted devices and emulators.\nA tester should use continuous integration and execute tests whenever the code is changed.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What are some common bugs found while mobile testing?",
        "answer": "Following are some common bugs found while mobile testing:\nCritical: This bug specifies that your phone system crashed when testing a particular feature in your device.\nBlock: This bug makes you unable to do anything though the phone is on unless you reboot your device.\nMajor: This bug makes you unable to perform a function of a particular feature.\nMinor: It generally contains the GUI bugs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) What strategy should we follow to test a new mobile app? Which types of testing should we include?",
        "answer": "While planning on a comprehensive test strategy, we should follow specific guidelines to perform a new mobile application effectively. Following are some of the important points:\nSelection of the devices: The device's selection is crucial to test a new mobile app, so it is highly recommended to understand the market's demand and the commonly used devices before choosing the set of testing devices.\nUtilizing emulators: Emulators are mostly used in the initial stages of development as they allow quick checking of the app. This system runs software from one environment to another environment without changing the software itself. It is also used to duplicate the features and works on the real system.\nTypes of testing: For testing a new mobile application, several tests should be used to ensure the app works as expected. So, we should choose the best testing strategy and types as follows:\nFunctional testing\nSystem integration testing\nPerformance testing\nInstallation and uninstallation of the application\nHTML control testing\nCross-browser and cross-device testing\nTesting multiple mobile OS\nGateway testing\nNetwork and battery testing",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What is the Robo-electric testing framework?",
        "answer": "Robo-electric testing framework is used to make testing easy without the use of an emulator. Testing on Android Testing Framework for emulators or devices is difficult, and we have to run and build test cases which sometimes take lots of development effort. The Robo-electric framework lets us run Android tests directly on JVM without requiring a device or an emulator.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What do you understand by installation testing and uninstall testing?",
        "answer": "Installation testing ensures that the installation process will go smoothly without any difficulty faced by the user. On the other hand, uninstall testing ensures that the uninstalling should sweep the app-related data only once.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) While performing end-to-end mobile testing, what are the primary criteria you have to consider?",
        "answer": "In an end-to-end mobile testing process, the QA team must test the entire application from beginning to end to ensure its flow behaves as expected. Throughout these steps, we have to consider the following critical requirements:\nIs the application successfully installed across various mobile models, gadgets, and operating systems?\nIs the application smoothly run with or without a network?\nWhat are the orientations that the application supports, and how do they work?\nDoes the application run and perform well on different kinds of devices and network scenarios?\nDoes the application respond well when it is used? (For example, response speed and time should be good.)",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What are the distinctive features that the monkey tool provides?",
        "answer": "The monkey tools provide the following features:\nBasic configuration options\nDebugging options\nOperational constraints\nEvent types and frequencies",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) How can you test CPU usage on mobile devices?",
        "answer": "Several tools are available on Google Play or Apple App Store designed for CPU usage testing, such as CPU Monitor, CPU Stats, Usemon, CPU-Z, etc. These all are advanced tool that records all information about processes running on your device.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) What should be the selecting criteria for Test Automation Tool for mobile testing?",
        "answer": "For mobile testing, the test automation tool should follow the criteria given below:\nMulti-platform support: It is used to ensure that the tool does support your current and future target platform.\nScript Usability: The object-based tools are used to provide a high degree of script usability.\nJailbreak Requirement: The tools using rooted devices may not support the latest OS version and may be incompatible with MDM policies.\nSource Code Changes: Sharing source code may not always be possible.\nLead time for New OS version: It specifies how soon the tool can support new iOS/android/other OS versions",
        "reference": "javatpoint.com"
    },
    {
        "question": "30) What are all major networks that should be considered while performing application testing?",
        "answer": "While performing application testing, we should cover all scenarios on different networks: 4G, 3G, 2G, and WIFI. Although 2G is a slower network, it is best to test on a slower network to track the application performance.",
        "reference": "javatpoint.com"
    }
]