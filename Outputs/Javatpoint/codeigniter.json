[
    {
        "question": "1) What is CodeIgniter?",
        "answer": "CodeIgniter is an open source and powerful framework used for developing web applications on PHP. It is loosely based on MVC pattern and similar to Cake PHP. CodeIgniter contains libraries, simple interface and logical structure to access these libraries, plug-ins, helpers and some other resources which solve the complex functions of PHP more easily maintaining high performance. It simplifies the PHP code and brings out a fully interactive, dynamic website at a much shorter time.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What are the most prominent features of CodeIgniter?",
        "answer": "A list of most prominent features of CodeIgniter:\nADVERTISEMENT\nIt is an open source framework and free to use.\nIt is extremely light weighted.\nIt is based on the Model View Controller (MVC) pattern.\nIt has full featured database classes and support for several platforms.\nIt is extensible. You can easily extend the system by using your libraries, helpers.\nExcellent documentation.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "If you download and unzip CodeIgniter, you get the following file structure/folder structure:\nApplication\ncache\nConfig\nControllers\ncore\nerrors\nhelpers\nhooks\nlanguage\nlibraries\nlogs\nmodels\nthird-party\nviews\nsystem\ncore\ndatabase\nfonts\nhelpers\nlanguage\nlibraries\n\n\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "From a technical point of view, CodeIgniter is dynamically instantiation (light-weighted), loosely coupled (components rely very less on each other) and has a component singularity (each class and functions are narrowly focused towards their purpose).\nData flow in CodeIgniter\n\n\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "CodeIgniter framework is based on MVC pattern. MVC is a software that gives you a separate logical view from the presentation view. Due to this, a web page contains minimal scripting.\nModel - The Controller manages models. It represents your data structure. Model classes contain functions through which you can insert, retrieve or update information in your database.\nView - View is the information that is presented in front of users. It can be a web page or parts the page like header and footer.\nControllers - Controller is the intermediary between models and view to process HTTP request and generates a web page. All the requests received by the controller are passed on to models and view to process the information.\n\n\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Model's responsibility is to handle all data logic and representation and load data in the views. It is stored in application/models folder.\nThe basic structure of a model file\n\n\nHere, ModelName is the name of your model file. Remember, the class first letter must be in an uppercase letter followed by other lowercase letters, and it should be the same as your file name. It extends the base CodeIgniter Model so that all the built-in methods of parent Model file gets inherited to the newly created file.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) How can you add or load a model in CodeIgniter?",
        "answer": "To load models in controller functions, use the following function:\n$this->load->model('ModelName');  \nIf in case your model file is located in sub-directory of the model folder, then you have to mention the full path. For example, if your file location is application/controller/models/project/ModelName. Then, your file will be loaded as shown below,\n$this->load->model('project/ModelName');",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) How can you connect models to a database manually?",
        "answer": "To connect database manually use following syntax,\n$this->load->database();  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "View folder contains all the markup files like header, footer, sidebar, etc. They can be reused by embedding them anywhere in controller file. They can't call directly, and they have to be loaded in the controller's file.\nView syntax\nCreate a file and save it in application/views folder. For example, we have created a file Firstview.php,\n\n\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) How can you load a view in CodeIgniter?",
        "answer": "The View can't be accessed directly. It is always loaded in the controller file. Following function is used to load a view page:\n$this->load->view('page_name');  \nWrite your view's page name in the bracket. You don't need to specify .php unless you are using some other extension.\nNow, go to your controller file (Main.php) and write this code as shown below.\n\n\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "A controller is the intermediary between models and views to process the HTTP request and generates a web page. It is the center of every request on your web application.\nConsider following URI,\nabc.com/index.php/front/  \nIn this URI, CodeIgniter try to find Front.php file and Front class.\nController Syntax\n\nLook at the above snapshot, controller's file name is Main.php (the first letter has to be in uppercase), and the class name is Main (the first letter has to be in uppercase).\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What is the default controller in CodeIgniter?",
        "answer": "The file specified in the default controller loaded by default when no file name is mentioned in the URL. By default, it is welcome.php which is the first page to be seen after installing CodeIgniter.\nWith URL\nlocalhost/codeigniter/  \nWelcome.php will be loaded as there is no file name mentioned in the URL.\nAlthough as per your need, you can change the default controller in the file application/config/routes.php.\n$route['default_controller'] = ' ';  \nHere, specify your file name which you want to be loaded by default.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) How will you call a constructor in CodeIgniter?",
        "answer": "To use a constructor, you need to mention the following line of code,\nparent::_construct()  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What is the basic CodeIgniter URL structure?",
        "answer": "Instead of using 'query-string' approach, it uses a segment based approach.\nIts structure is as follows,\nabc.com/class/function/ID  \nThe class represents a controller class that needs to be invoked.\nThe function is the method that is called.\nID is an additional segment that is passed to controllers.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What is an inhibitor of CodeIgniter?",
        "answer": "In CodeIgniter, Inhibitor is an error handler class that uses native PHP functions like set_exception_handler, set_error_handler, register_shutdown_function to handle parse errors, exceptions, and fatal errors.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is the default method name in CodeIgniter?",
        "answer": "By default controller always calls index method. If you want to call a different method, then write it in the controller?s file and specify its name while calling the function.\n\nLook at the URL. There is no method name is mentioned. Hence, by default index method is loaded.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The Second segment of URI determines which method is being called. If you want to override it, you can use _remap() method. The _remap method always get called even if URI is different. It overrides the URI. For Example:\npublic function _remap($methodName)  \n{  \n            if ($methodName === 'a_method')  \n            {  \n            $this->method();  \n            }  \n            else  \n            {  \n            $this->defaultMethod();  \n            }  \n}  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is a helper in CodeIgniter? How can a helper file be loaded?",
        "answer": "Helpers are the group of functions that are used to assist the user to perform specific tasks.\nURL Helpers: used to create the links.\nText Helpers: used for text formatting.\nCookies Helpers: used for reading and setting cookies.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) How can you load multiple helper files?",
        "answer": "To load multiple helper files, specify them in an array,\n$this->load->helper(  \narray('helper1', 'helper2', 'helper3')  \n);  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "How will you load it?",
        "answer": "CodeIgniter provides a rich set of libraries. It is an essential part of CodeIgniter as it increases the developing speed of an application. It is located in the system/library.\nIt can be loaded as follows,\n$this->load->library('class_name');  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) How can you create a library in CodeIgniter?",
        "answer": "There are three methods to create a library,\nCreating an entirely new library\nExtending native libraries\nReplacing native libraries\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) Where is a newly created library stored in CodeIgniter structure?",
        "answer": "It should be placed in application/libraries folder.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) Can you extend native libraries in CodeIgniter?",
        "answer": "Yes, we can add some extended functionality to a native library by adding one or two methods. It replaces the entire library with your version. So it is better to extend the class. Extending and replacing is almost identical with only following exceptions.\nThe class declaration must extend the parent class.\nNew class name and filename must be prefixed with MY_.\nFor example, to extend it to native Calendar, create a file MY_Calendar.php in application/libraries folder. Your class declared as class MY_Calendar extends CI_Calendar}\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) How can you extend a class in CodeIgniter?",
        "answer": "You have to build a file name application/core/MY_Input.php and declare your class with Class MY_Input extends CI_Input {}to extend the native input class in CodeIgniter.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What is routing in CodeIgniter?",
        "answer": "Routing is a technique by which you can define your URLs according to the requirement instead of using the predefined URLs. Routes can be classified in two ways, either using Wildcards or Regular Expressions.\nWildcards\nThere are two types of wildcards:\n:num\u2212series containing only numbers matched.\n:any\u2212series containing only characters matched.\nRegular Expression\nRegular expressions are also used to redirect routes.\n$route['blog'(a-zA-Z0-9]+)'] = 'women/social';  \nYou can create your regular expression to run your URL.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) Why is URL routes need to be configured?",
        "answer": "There are many purposes for which the URL routes are configured.\nTo improve the number of page visits.\nTo hide the code complexities from the user.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What are the hooks in CodeIgniter?",
        "answer": "The Hook is a feature in CodeIgniter that provides a way to change the inner working of the framework without hacking the core files. It facilitates you to execute a script with a particular path within the CodeIgniter. Usually, it is defined in the application/config/hooks.php file.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) How to enable CodeIgniter hook?",
        "answer": "To enable hook, go to application/config/config.php/ file and set it TRUE as shown below,\n$config['enable_hooks'] = TRUE;  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) What are different types of hook points in CodeIgniter?",
        "answer": "A list of different types of hook points in CodeIgniter:\npost_controller_constructor - It is called immediately after your controller is started but before any method call.\npre_controller - It is called immediately before your controller being called. At this point, all the classes, security checks, and routing have been done.\npost_sytem - It is called after the final page is sent to the browser at the end of the system execution.\npre_system - It is called much before the system execution. Only benchmark and hook class have been loaded at this point.\ncache_override - It enables you to call your function in the output class.\ndisplay_override - It is used to send the final page at the end of file execution.\npost_controller - It is called immediately after your controller is entirely executed.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "30) What are CodeIgniter drivers?",
        "answer": "These are a particular type of library that has a parent class and many child classes. These child classes have access to the parent class, but not to their siblings. Drivers are found in system/libraries folder.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "31) How to initialize a driver in CodeIgniter?",
        "answer": "To initialize a driver, write the following syntax,\n$this->load->driver('class_name');  \nHere, class_name is the driver name.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "32) How to create a driver in CodeIgniter?",
        "answer": "There are three steps to create a driver:\nMaking file structure\nMaking driver list\nMaking driver(s)\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "33) How to connect multiple databases in CodeIgniter?",
        "answer": "To connect more than one database simultaneously, do the following,\n$db1 = $this->load->database('group_one', TRUE);  \n$db1 = $this->load->database('group_two', TRUE);  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "34) How can you print SQL statement in CodeIgniter model?",
        "answer": "$this>db>insertid();",
        "reference": "javatpoint.com"
    },
    {
        "question": "35) What are CodeIgniter security methods?",
        "answer": "CodeIgniter security methods help to create a secure application and process input data. The methods are given below:\nXSS filtering\nCSRF (Cross-site Request Forgery)\nClass reference\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "36) What are the XSS security parameters?",
        "answer": "XSS stands for cross-site scripting. Codeigniter contains a cross-site scripting hack prevention filter. The XSS filter targets methods to trigger JavaScript or other types of suspicious code. If it detects anything, it converts the data to character entities.\nXSS filtering uses xss_clean() method to filer data.\n$data = $this->security->xss_clean($data);  \nThere is an optional second parameter, is_image, which is used to test images for XSS attacks. When this parameter is set to TRUE, it doesn't return an altered string. Instead, it returns TRUE if an image is safe and FALSE if it contains malicious information.\nif ($this->security->xss_clean($file, TRUE) === FALSE)  \n    {  \n        //file failed in xss test  \n    }  \nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "37) How can the CodeIgniter be prevented from CSRF?",
        "answer": "There are the various ways by which, we can prevent CodeIgniter from CSRF. The most used method is using the hidden field in each page of the website. The hidden field is stored in the user's session. The filed is changed with every HTTP request. The user can be detected in its every request to the website. The hidden value is always compared with the one saved in the session. If it is the same, the request is valid.\nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "38) How can you enable CSRF?",
        "answer": "You can enable protection by editing config.php file and setting it to\nTo enable CSRF make the following statement TRUE from FALSE in application/config/config.php file.\n$config['csrf_protection'] = TRUE;  \nMore Details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "39) What is CSRF attack in CodeIgniter?",
        "answer": "A CSRF attack forces a logged-on victim's browser to send a forged HTTP request, including victim's session cookie and other authentication information, to a web application.\nFor example, suppose you have a site with a form. An attacker could create a bogus form on his site. This form could contain hidden inputs and malicious data. This form is not sent to the attacker's site, in fact, it comes to your site. Thinking that the form is genuine, your site process it.\nNow suppose that the attacker's form point towards the deletion form in your site. If a user is logged in and redirected to the attacker's site and then perform the search, his account will be deleted without knowing him. That is the CSRF attack.\n\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "40) What is a token method in a CSRF attack?",
        "answer": "To protect from CSRF, we need to connect both HTTP requests, form request and form submission. There are several ways to do this, but in CodeIgniter hidden field is used which is called the CSRF token. The CSRF token is a random value that changes with every HTTP request sent.\nWith each request, a new CSRF token is generated. When an object is created, name and value of the token are set.\n$this->csrf_cookie_name = $this->csrf_token_name;  \n$this->_csrf_set_hash();  \nThe function for it is,\nfunction _csrf_set_hash()  \n{  \n      if ($this->csrf_hash == '')  \n        {  \nif ( isset($_COOKIE[$this->csrf_cookie_name] ) AND  \n             $_COOKIE[$this->csrf_cookie_name] != '' )  \n           {  \n             $this->csrf_hash = $_COOKIE[$this->csrf_cookie_name];  \n          } else {  \n               $this->csrf_hash = md5(uniqid(rand(), TRUE));  \n         }  \n       }  \n    return $this->csrf_hash;  \n}  \nMore details.",
        "reference": "javatpoint.com"
    }
]