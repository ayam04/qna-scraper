[
    {
        "question": "1) What is Quality Assurance?",
        "answer": "QA stands Quality Assurance. QA is a set of activities designed to ensure that the developed software meets all the specifications or requirements mentioned in the SRS document.\nQA follows the PDCA cycles:\n\nADVERTISEMENT\nADVERTISEMENT\nPlan\nThe plan is a phase in Quality Assurance in which the organization determines the processes which are required to build a high-quality software product.\nDo\nDo is a phase of development and testing the processes.\nCheck\nThis phase is used for monitoring the processes and verifies whether these processes meet the user requirements or not.\nAct\nThe Act is a phase for implementing the actions required to improve the processes.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What is the difference between Quality Assurance and Software testing?",
        "answer": "The following is the list of differences between Quality Assurance and Software testing:\nQuality Assurance Software testing\nActivities Quality Assurance is a set of activities used to ensure that the developed software meets all the user requirements. Software testing is an activity performed after the development phase to check whether the actual results match the expected results to ensure that the software is bug-free. In short, we can say that software testing is verification of application under test.\nActivities It involves activities that include the implementation of processes, procedures, and standards. It involves activities that include verification of testing.\nOrientation It is a process-oriented, i.e., it checks the processes to ensure that quality software is delivered to the client. It is a product-oriented, i.e., checking the functionality of a software.\nActivity type Preventive Corrective\nObjective The main objective of Quality Assurance is to deliver quality software. The main objective of software testing is to find the bugs in the developed software.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) How the build and release differ from one another, write down the difference between build and release?",
        "answer": "Build is defined as when the software is given to the testing team by the development team.\nRelease It is defined as when the software is handed over to the users by the tester and developer.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) Define bug leakage and bug release?",
        "answer": "Bug leakage is defined as the bug not found by the testing team but found by the end users. Bug release it is defined when the software is released by the tester in the market knowing that bug is present in the release. These types of bugs have low priority and severity. This type of situation arises when customers want the software on time than the delay in getting the software and the cost involved in correcting the bugs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What are the solutions for the software development problem?",
        "answer": "There are five different solutions for the software development problem.\nThe requirements for software development should be clear, complete, and agreed by all, setting up the requirements criteria.\nNext thing is the realistic schedule like time for planning, designing, testing, fixing bugs, and re-testing.\nIt requires sufficient testing, starts the testing immediately after one or more module development.\nUse of group communication tools.\nUse rapid prototype during the design phase so that it can be easy for the customer to find what to expect.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) Explain the types of documents in Software Quality Assurance?",
        "answer": "The following are the types of documents in Software Quality Assurance:\nRequirement Document\nAll the functionalities are to be added in the application are documented in terms of Requirements, and the document is known as Requirement document. This Requirement document is made by the collaboration of various people in the project team like developers, testers, Business Analysts, etc.\nTest Metrics\nTest Metrics is a quantitative measure that determines the quality and effectiveness of the testing process.\nTest plan\nIt defines the strategy which will be applied to test an application, the resources that will be used, the test environment in which testing will be performed, and scheduling of test activities will be done.\nTest cases\nA test case is a set of steps, and conditions used at the time of testing. This activity is performed to verify whether all the functionalities of software are working properly or not. There can be various types of test cases such as logical, functional, error, negative test cases, physical test cases, UI test cases, etc.\nTraceability matrix\nTraceability matrix is a table that traces and maps the user requirements with test cases. The main aim of Requirement Traceability Matrix is to see that all test cases are covered so that no functionality miss during the software testing.\nTest scenario\nA test scenario is a collection set of test cases which helps the testing team to determine the positive and negative aspects of a project.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What is the rule of a \"Test Driven Development\"?",
        "answer": "In Test Driven Development, test cases are prepared before writing the actual code. It means you have to write the test case before the real development of the application.\nTest Driven Development cycle:\nWrite the test cases\nExecute the test cases\nIf the test case fails, then changes are made to make it correct\nRepeat the process",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is traceability matrix?",
        "answer": "Traceability matrix is a document that maps and traces user requirements with test cases. The main aim of Requirement Traceability Matrix is to see that all test cases are covered so that no functionality miss during the software testing.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) Write down the differences between the responsibilities of QA and programmers?",
        "answer": "Differences in responsibilities are as:\nSr. No. QA Responsibility Programmer Responsibility\n1. QA team is concerned for process Quality Programmers are concerned for product quality\n2. QA ensures that the processes used for developing the product of high quality Programmers used these processes so that the end product is of good quality\nAny issue found during the execution of the process by the programmers is communicated to the QA so that they can improve the process.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What is the difference between Verification and Validation?",
        "answer": "Verification Validation\nVerification is the process of evaluating the steps during the development phase to determine whether they meet the user requirements or not. Validation is the process of evaluating the product after the development process to determine whether it meets the specified requirement.\nVerification is static testing. Validation is dynamic testing.\nVerification testing is performed before validation. Validation is performed after verification.\nIt does not involve in executing the code. It involves in executing the code.\nIt involves activities such as reviews, walkthroughs, inspections, and desk checking, etc. It involves methods such as black box testing, white box testing and non-functional testing.\nIt finds the bugs before the development cycle. It finds the bugs after the development cycle.\nIt conforms to the requirements specified in the SRS document. It checks whether it meets the specified requirements or not.\nQA team performs verification in which they verify that the software is according to the requirements specified in the SRS document. Software tester performs testing of a product.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) Define the key challenges faced during software testing?",
        "answer": "The application should be stable for testing.\nTesting should be under a time constraint.\nWhich tests should execute first?\nTesting the complete application.\nRegression Testing\nLack of skilled testers.\nChanging requirements.\nLack of resources, training, and tools.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What is the difference between Retesting and Regression testing?",
        "answer": "Regression Retesting\nRegression is a type of testing used to verify whether the new changes in the code have affected the unchanged features or not. Retesting is the testing of modules that have been failed in the last execution.\nThe main aim of Regression testing is that any changes made in the code should not affect the existing functionalities. Retesting is the testing which is performed on the defects that have been fixed.\nIt is generic testing as it can be performed at any time whenever the changes made in the code. It is planned testing.\nIt is performed on the test cases that have been passed. It is performed on the test cases that have been failed.\nAutomation can be done for regression testing, while manual testing will be expensive and time consuming. To perform the Retesting, we cannot automate the test cases.\nDefect verification does not come under the Regression testing. Defect verification comes under the Retesting.\nBased on the availability of resources, regression testing is performed in parallel with the retesting. The priority of retesting is more than the regression testing, so it always performed before the regression testing.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) Define the role of QA in Software Development?",
        "answer": "QA stands for Quality Assurance. QA team persuades the quality by monitoring the whole development process. QA tracks the outcome and adjusting processes to meet the expectation.\nRole of Quality Assurance are:\nQA team is responsible for monitoring the process to be carried out for development.\nResponsibilities of the QA team are planning, testing, execution process.\nQA Lead creates the time table and agrees on a Quality Assurance plan for the product.\nQA team communicated the QA process to the team members.\nQA team ensures traceability of test cases to requirements.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) Describe the dimensions of the risk in QA?",
        "answer": "The dimensions of the risk are:\nSchedule: Unrealistic Schedules, to develop a huge software in a single day.\nClient: Ambiguous requirements definition, requirements are not clear, changes in requirement.\nHuman Resource: Non - availability of sufficient resources with the skill level expected in the project.\nSystem Resources: Non-availability of acquiring all critical resources, either hardware and software tools or license for software will have an adverse effect.\nQuality: Compound factors like lack of resources along with a tight delivery schedule and frequent changes to the requirement will affect the quality of the product tested.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What is the test ware?",
        "answer": "Test ware is a term used to describe all the materials used to perform the test. Test ware includes test plans, test cases, test data, and any other items needed to perform and design a test.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is Monkey testing?",
        "answer": "Monkey testing is a type of black box testing used to test the application by providing random inputs to check the system behavior such as to check the system, whether it is crashing or not.\nThis type of testing is performed automatically whenever the user provides the random inputs to check the system behavior\nThere is no need to create test cases to perform monkey testing.\nIt can also be automated, i.e., we can write the programs or scripts to generate random inputs to check the system behavior.\nThis technique is useful when we are performing stress or load testing.\nThere are two types of monkeys:\nSmart monkeys\nDumb monkeys\nSmart Monkeys\nSmart monkeys are those which have a brief idea about the application.\nThey know that where the pages of an application will redirect to which page.\nThey also know that the inputs that they are providing are valid or invalid.\nIf they find any error, then they are smart enough to file a bug.\nThey also know that what are the menus and buttons.\nDumb Monkeys\nDumb Monkeys are those which have no idea about the application.\nThey do not know about the pages of an application will redirect to.\nThey provide random inputs, and they do not know about the starting and ending point of the application.\nThey do not know much about the application, but still, they find bugs such as environmental failure or hardware failure.\nThey also do not know much about the functionality and UI of an application.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) Write the differences between Preventive and Reactive approaches?",
        "answer": "Preventive Approach: It is also known as the Verification process. Preventive is the approach to prevent defects. In this approach, tests are designed in its early stages of Software Development Lifecycle before the software has developed. In this approach, testers try to prevent defects in the early stages; it comes under Quality Analysis.\nReactive Approach: It is also known as Validation Process. This approach is to identify defects. In this approach, tests are designed to execute after the software's development. In this approach, we try to find out the defects. It comes under Quality Control.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the Quality Audit?",
        "answer": "An Audit is defined as on-site verification activity, such as inspection or examination, of a processor quality system. Quality Audit is the process of systematic analysis of a quality system carried out by an internal or external quality auditor, or an audit team. Quality Audits are performed at predefined time intervals and ensure that the institution has clearly defined internal system monitoring procedures linked to effective action. Audits are an essential management tool to be used for verifying objective evidence of processes.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What is a test plan?",
        "answer": "The Test Plan document is a document which contains the plan for all the testing activities to deliver a quality product. The test Plan document is derived from many activities such as product description, SRS, or Use Case documents for all future events of the project. The Test Lead usually prepares it, or Test manager and the focus of the document is to describe what to test, how to test when to test, who will do what test.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) How do you decide when you have tested enough?",
        "answer": "This is one of the most crucial questions. As a project manager or project lead, sometimes we might face a situation to call off the testing to release the product early. In those cases, we have to decide whether the testers have tested the product enough or not.\nThere are many factors involved in real-time projects to decide when to stop testing:\nIf we reach Testing deadlines or release deadlines\nBy entering the decided pass percentage of test cases.\nIn the real-time project, if the risk in the project is under the acceptable limit.\nIf all the high priority bugs and blockers have been fixed.\nIf we meet the acceptance criteria.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) How to design test cases?",
        "answer": "There are mainly two techniques to design the test cases:\nBlack box testing\nIt is a specification-based technique where the testers view the software as a black box with inputs and outputs.\nIn black box testing, the testers do not know about how the software is structured inside the box, they know only what the software does but do not know how the software does.\nThis type of technique is valid for all the levels of testing where the specification exists.\nWhite box testing\nWhite box testing is a testing technique that evaluates the internal logic and structure of the code.\nIn order to impement the white box testing, the testers should have the knowledge of coding so that they can deal with the internal code. They look into the internal code and finds out the unit which is malfunctioning.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What is adhoc testing?",
        "answer": "Adhoc testing is an informal way of testing the software. It does not follow the formal process like requirement documents, test plan, test cases, etc.\nCharacteristics of adhoc testing are:\nAdhoc testing is performed after the completion of formal testing on an application.\nThe main aim of adhoc testing is to break the application without following any process.\nThe testers who are executing the adhoc testing should have a deep knowledge of a product.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) How is monkey testing different from adhoc testing?",
        "answer": "Both monkey testing and adhoc testing follows the informal approach, but in monkey testing, we do not need to have deep knowledge of the software. However, to perform adhoc testing, testers should have a deep knowledge of the software.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) How is adhoc testing different from exploratory testing?",
        "answer": "The following is the list of differences between adhoc testing and exploratory testing:\nAdhoc testing Exploratory testing\nAdhoc testing is the testing of software without any documentation or requirements specification. knowledge about the software while exploring the application.\nDocumentation is not required. Documentation is mandatory in exploratory testing.\nThe main aim of adhoc testing is to achieve perfection in testing. The main aim of exploratory testing is to learn the application.\nIt is an informal approach. It is a formal approach.\nAdhoc testing does not require an expert testing engineer. Exploratory testing does not require an expert testing engineer.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What are the different levels in software testing?",
        "answer": "There are four different levels in software testing:\nUnit/Component testing\nIntegration testing\nSystem testing\nAcceptance testing\n\nUnit testing\nIt is the lowest level in most of the models.\nUnits are the programs or modules in the software.\nUnit testing is performed by the programmer that tests the modules, and if any bug is found, then it is fixed instantaneously.\nIntegration testing\nIntegration means the combination of all the modules, and all these modules are tested as a group.\nIntegration testing performs the testing on the data that flows from one module to another module.\nIt basically checks the communication between two or more modules but not the functionality of individual modules.\nSystem testing\nSystem testing is used to test the complete or integrated system.\nIt tests the software to ensure that it conforms the specified requirements specified in the SRS document.\nIt is the final test and performs both functional and non-functional testing.\nAcceptance testing\nAcceptance testing is performed by the users or customers to check whether it meets their requirements or not.",
        "reference": "javatpoint.com"
    }
]