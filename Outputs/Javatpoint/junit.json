[
    {
        "question": "1) What is Testing?",
        "answer": "Testing is the process of checking the functionality of the application whether it fulfills the requirement or not.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What is JUnit?",
        "answer": "JUnit is the testing framework, it is used for unit testing of Java code.\nJUnit = Java + Unit Testing  \nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What is unit testing?",
        "answer": "The process of testing individual functionality (known as a unit) of the application is called unit testing.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is the difference between manual testing and automated testing?",
        "answer": "Manual testing is performed by Human, so it is time-consuming and costly. Automated testing is performed by testing tools or programs, so it is fast and less costly.\nMore details...",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Following are some disadvantages of manual testing:\nADVERTISEMENT\nThe testing is very time consuming and is very tiring.\nThe testing demands a very big investment in the human resources.\nThe testing is less reliable\nThe testing cannot be programmed.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Some of the advantages of automated testing are:\nIt is very fast.\nInvestment is very less.\nTesting is more reliable.\nThe testing can be programmed.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) Is it necessary to write the test case for every logic?",
        "answer": "No, we should write the test case only for that logic that can be reasonably broken.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What are the useful JUnit extensions?",
        "answer": "JWebUnit\nXMLUnit\nCactus\nMockObject",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What are the features of JUnit?",
        "answer": "Opensource\nAnnotation support for test cases\nAssertion support for checking the expected result\nTest runner support to execute the test case\n10) How is the testing of the 'protected' method done?\nTo test the protected method, the test class is declared in the same package as the target class.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) How is the testing of the 'protected' method done?",
        "answer": "To test the protected method, the test class is declared in the same package as the target class.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) How is the testing of 'private' method done?",
        "answer": "There is no direct way for testing of the private method; hence manual testing is to be performed, or the method is changed to \"protected\" method.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) If the JUnit method's return type is 'string', what will happen?",
        "answer": "JUnit test methods are designed to return 'void'. So the execution will fail.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) Is the use of 'main' method possible for unit testing?",
        "answer": "Yes",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) Is it necessary to write the test class to test every class?",
        "answer": "No",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What does XMLUnit provide?",
        "answer": "Junit extension class, XMLTestCase and set of supporting classes is provided by the XMLUnit.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Cactus Framework\nCactus Integration Module",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What are the methods in fixtures?",
        "answer": "setup\ntearDown",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the Unit Test Case?",
        "answer": "A Unit Test Case is the combination of input data and expected output result. It is defined to test the functionality of a unit.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What is the use of @Test annotation?",
        "answer": "The @Test annotation is used to mark the method as the test method.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What is the test suit?",
        "answer": "The test suit allows us to group multiple test cases so that it can be run together. TestSuit is the container class under junit.framework.TestSuite package.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What does test runner?",
        "answer": "The test runner is used to execute the test cases.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What are the important JUnit annotations?",
        "answer": "The test runner is used to execute the test cases.\n@Test\n@BeforeClass\n@Before\n@After\n@AfterClass",
        "reference": "javatpoint.com"
    }
]