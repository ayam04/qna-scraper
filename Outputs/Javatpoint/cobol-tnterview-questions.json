[
    {
        "question": "1) What is COBOL? / What do you know about COBOL?",
        "answer": "COBOL is an abbreviation that stands for Common Business Oriented Language. It is one of the oldest programming languages and is primarily used for business verticals, including government companies' functions, finance, and administrative systems. It is a weak, static typing discipline language. COBOL programming language is mainly used for large-scale batch and transaction processing jobs and solving complex business problems.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) Is COBOL an outdated programming language? Is it still used? / Is it still worth learning COBOL programming language nowadays?",
        "answer": "It is a fact that COBOL is one of the oldest programming languages, but you cannot say that it is an outdated programming language. It is still used, and yes, it is still worth learning. It is up to the users or programmers who want to maintain them or port them to other programming languages.\nCOBOL facilitates a lot of things to do easily. It is a more than 60 years old programming language, but recently, there is a rise in demand for this language due to the requirements of some government agencies and projects. Nowadays, COBOL is used in many government projects, and programmers use it in many state government operations.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) How was the COBOL programming language developed? / What is the history of the COBOL programming language?",
        "answer": "In 1959, the USA Government's Department of Defense formed CODASYL, an acronym for Conference on Data Systems Language. The main motive behind forming the CODASYL was to develop a computer programming language known as COBOL. The main purpose of this language was to meet business, administrative, finance needs. It is a simple language that works on easy English terms and phrases so that business users understand it easily and fulfil their data processing needs through COBOL.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What are the different data types that COBOL supports?",
        "answer": "There are mainly three data types that COBOL supports:\nADVERTISEMENT\nADVERTISEMENT\nAlpha-numeric (X): The alpha-numeric data type can hold both values together, either alphabetic or numeric.\nAlphabetic (A): The alphabetic data type of COBOL programming language can hold any of the alphabetic variables ranging between A-Z.\nNumeric (9): The numeric data type represents numeric values between 0-9 in COBOL programming.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What is the difference between subscript and index in COBOL?",
        "answer": "The main difference between subscript and index is that the subscript is called the occurrence of an array. On the other hand, index refers to the displacement from the beginning of the array. An index can only be modified using PERFORM, SEARCH & SET.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What are some distinctive features of COBOL?",
        "answer": "Following is a list of some key features of COBOL:\nCOBOL is a standard programming language that can be compiled and executed on various machines.\nCOBOL programming language is best suited for business-oriented applications as it can handle huge volumes of data.\nCOBOL provides several debugging and testing tools.\nCOBOL is a structured language that has different divisions, so debugging is easy in COBOL.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What are the different divisions used in a COBOL program?",
        "answer": "Different divisions used in a COBOL program are:\nIdentification Division\nEnvironment Division\nData Division\nProcedure Division",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is the difference between a section and a paragraph in the COBOL programming language?",
        "answer": "In the COBOL programming language, a section consists of all the paragraphs that are part of the section and must be performed. On the other hand, a paragraph consists of only that paragraph that has to be performed.\nADVERTISEMENT",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What is the 'IS NUMERIC' clause? / What do you understand by the 'IS NUMERIC' clause in COBOL?",
        "answer": "In the COBOL programming language, the 'IS NUMERIC' clause is used to check if an item is numeric or not. It returns the value as TRUE if the checked item contains only numbers (0 to 9). The item can be positive or negative.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What are level 66 and level 88 in the COBOL programming language?",
        "answer": "In the COBOL programming language, level 66 is used in RENAMES clause, and level 88 is used for condition names.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) What is a scope terminator in COBOL?",
        "answer": "In COBOL, the scope terminator is used to mark the end of a verb. For example, IF and END-IF.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What is the difference between SEARCH and SEARCH ALL in COBOL?",
        "answer": "In COBOL, the SEARCH command is used for serial search while the SEARCH ALL command is used for binary search where the table or array must be sorted using ASCENDING or DESCENDING key.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What is the difference between NEXT SENTENCE and CONTINUE?",
        "answer": "The NEXT SENTENCE transfers control to the next sentence while the CONTINUE acts like a null statement, and it continues execution.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What are the different modes of file opening in COBOL?",
        "answer": "There are four modes of opening a file in COBOL. These are:\nInput\nOutput\nInput-Output\nExtend",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What is the maximum size of a numeric field that can be defined in COBOL?",
        "answer": "The maximum size of a numeric field that can be defined in COBOL is PIC 9(18).",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is the difference between Static Linking and Dynamic Linking in COBOL?",
        "answer": "In Static linking, the subroutine links into the calling program. On the other hand, in the dynamic linking, the key program and subroutine will remain separate modules. Static linking and dynamic linking can be achieved by link edit options- DYNAM or NODYNAM.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What are the main characteristics of the COBOL programming language as a business language?",
        "answer": "COBOL is a programming language and a business-oriented application. It has many characteristics that can help businesses to manage and update data. As a business language, COBOL can handle large data volumes. It facilitates programmers to compile, execute and bring COBOL on many machines together. It can also be used for debugging and testing tools if it is required a debugging solution. Different versions of COBOL can enhance its features many times.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the use of EVALUATE statement in COBOL?",
        "answer": "In COBOL, the EVALUATE statement is just like a case statement. It can also be used like a Nested IF. The main difference between an EVALUATE statement, and a case is that 'break' is not used in Evaluate statement, and the control comes out of the EVALUATE once a match is found.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What guidelines should we follow while writing a structured COBOL-based program?",
        "answer": "While writing a structured COBOL based program, we must follow a certain format that allows the proper implementation of the code. For example, while constructing a case, we can use EQUIVALENT statements each time. While nesting, we should use scope terminators, and when we want the program to do something, we should try and use IN-LINE PERFORM statements. We can also use TEST BEFORE and TEST AFTER statements while coding for do-while loop statements.",
        "reference": "javatpoint.com"
    },
    {
        "question": "WITH TEST BEFORE?",
        "answer": "PERFORM \u2026 WITH TEST BEFORE: If TEST BEFORE is specified, the condition is tested at the beginning of each repeated execution of the specified PERFORM range.\n\nPERFORM \u2026 WITH TEST AFTER: If TEST AFTER is specified, the condition is tested at the end of each repeated execution of the PERFORM range. The range is executed at least once in TEST AFTER.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is the use of REPLACING option of a copy statement in COBOL?",
        "answer": "In the COBOL programming language, the REPLACING option allows for the same copy to use many times if required. It changes the replace value in the same code.\nSyntax:\nCOPY <Name> REPLACING BY",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What is the use of scope terminator in COBOL programming language?",
        "answer": "In the COBOL programming language, the scope terminator is used to mark the end of a verb.\nExample: IF and END-IF.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) Why can we not define an Occurs clause at 01 levels?",
        "answer": "We cannot define an Occurs clause at 01 levels because 01 is record level. We repeat the fields within a record, but not the record itself. So, we cannot use the Occurs clause at the 01 levels.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What is the role of the ON SIZE ERROR option in trapping error? / What kinds of errors are caught by the ON SIZE ERROR option?",
        "answer": "The ON SIZE ERROR option is used to trap the following types of errors:\nFixed point overflow.\nNumber zero raised to power zero.\nDivision by zero\nNumber zero raised to negative power number.\nA negative number raised to the power of a fraction",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What is the difference between the structured COBOL program and the Object-Oriented COBOL Program?",
        "answer": "Structured programming is the logical way of writing a program where functions are divided into modules and operated logically. COBOL is a structured and very user-friendly programming language. It is one of the oldest programming languages. The functionalities it provides for big administrative systems cannot be easily replaced. That's why it is alive and used nowadays also although it was invented a long ago.\nObject-oriented COBOL programming is a natural way of programming in which objects are identified, and then functions and procedures are written around that Object. Object-oriented programs are run on a programming paradigm that relies on the concept of classes and objects. Here we write the methods and functions around the Object that is identified.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) Which mode is used to open a file for writing?",
        "answer": "To write into a file, we have to open either OUTPUT or EXTEND mode.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What should be the sorting order for SEARCH ALL?",
        "answer": "The sorting order for SEARCH ALL can be either ASCENDING or DESCENDING. By default, it is ascending. If you want the search to be done on an array sorted in descending order, then you should give DESCENDING KEY clause while defining the array. It means you must load the table in the specified order.",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) What is the difference between Call By Content and Call By Reference in COBOL?",
        "answer": "In Call By Content, the passed parameters are protected from modification by the called program. On the other hand, in Call By Reference, the called program can modify the parameters.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) What do you understand by INPUT PROCEDURE and OUTPUT PROCEDURE in COBOL?",
        "answer": "In INPUT PROCEDURE, the input file is opened, records are read and edited and then are released to the sorting operation. In the end, the file will be closed.\n[plain]RELEASE recordname FROM inputrecord[/plain]  \nIn the OUTPUT PROCEDURE, the output file is opened, the sorted record is returned to the Output record, and the record will be written. In the end, the file will be closed.\n[plain]RETURN file RECORD into outputrecord[/plain]",
        "reference": "javatpoint.com"
    },
    {
        "question": "30) What is the difference between Call By Content and Call By Reference in COBOL?",
        "answer": "In Call By Content, the passed parameters are protected from modification by the called program. On the other hand, in Call By Reference, the called program can modify the parameters.",
        "reference": "javatpoint.com"
    },
    {
        "question": "31) What is the use of LINKAGE SECTION in COBOL programming?",
        "answer": "In COBOL programming, the linkage section is used to pass data from one program to the other or pass data from a procedure to a program. It is part of a program that maps data items in the calling program's working storage.",
        "reference": "javatpoint.com"
    },
    {
        "question": "32) What are the different access modes of the START statement?",
        "answer": "There are two access modes in the START statement: SEQUENTIAL and DYNAMIC.",
        "reference": "javatpoint.com"
    },
    {
        "question": "33) How many Sections are there in Data Division?",
        "answer": "There are six Sections in Data Division:\nFILE Section\nWORKING-STORAGE Section\nLOCAL-STORAGE Section\nSCREEN Section\nREPORT Section\nLINKAGE Section",
        "reference": "javatpoint.com"
    },
    {
        "question": "34) Which program divisions are mandatory for a COBOL program?",
        "answer": "Two program divisions, named identification division and Program ID, are mandatory for a COBOL program.",
        "reference": "javatpoint.com"
    },
    {
        "question": "35) What are the different divisions in the COBOL programming language?",
        "answer": "There are four major divisions in the COBOL programming language:\nIdentification Division: The Identification division starts the COBOL program and is a mandatory section in every COBOL program. The compiler and programmer use this division to identify the program. We must have to define the PROGRAM-ID (a keyword) immediately after the Identification division.\nEnvironment Division: In the Environment division, we can define the input and output files of the program. This division is optional and mainly used to describe the system's environment in which the program will run.\nData Division: The data division contains information about the variables and data items used in the program. It also defines the variable names, their lengths, decimal locations, and the information about the storage formats.\nProcedure Division: The procedure division is the most important section of the COBOL program. It is like the main() function of C/C++ program. From this division, the program starts the execution. The procedure division is the logical section of the program. Here all the business logic is written. Like the C/C++ main() function, all COBOL programs must have a procedure division. We can use the user-defined names and paragraphs in the procedure division. It is mandatory to specify at least one statement in this division as it cannot be left empty.",
        "reference": "javatpoint.com"
    },
    {
        "question": "36) What is the difference between GOBACK, STOP RUN and EXIT PROGRAM in COBOL programming?",
        "answer": "Following is the list of key differences between GOBACK, STOP RUN, and EXIT PROGRAM in COBOL:\nGOBACK: This is used to return the control to the calling program.\nSTOP RUN: This is used to stop the present work unit and return the control to OS.\nEXIT PROGRAM: This is used to leave a program that another program has called.",
        "reference": "javatpoint.com"
    },
    {
        "question": "37) What is the difference between comp and comp-3 in COBOL?",
        "answer": "In COBOL, comp is used to indicate binary usage. On the other hand, comp-3 is used to indicate a packed decimal.",
        "reference": "javatpoint.com"
    },
    {
        "question": "38) What do you understand by DELIMITED BY SPACE and DELIMITED BY SIZE? What are their usages?",
        "answer": "DELIMITED BY SPACE and DELIMITED BY SIZE is used along with the STRING for controlling the information if it is replicated.\nDELIMITED BY SIZE: In DELIMITED BY SIZE, the total size of information would be considered the delimiter.\nDELIMITED BY SPACE: In DELIMITED BY SPACE, the space would be considered as the delimiter.",
        "reference": "javatpoint.com"
    },
    {
        "question": "39) What do you understand by Redefines clause?",
        "answer": "The Redefines clause allows the same storage allocation to be referenced by different data names.",
        "reference": "javatpoint.com"
    },
    {
        "question": "40) To conduct REWRITE, why is it mandatory that the file needs to be opened?",
        "answer": "To conduct REWRITE, we must open the record and read it from the file. So, the file must be opened in I-O mode if you want to conduct a REWRITE function.",
        "reference": "javatpoint.com"
    },
    {
        "question": "41) What do you understand by an IN-LINE PERFORM?",
        "answer": "An IN-LINE PERFORM is a statement that allows the routine to be nested within the perform statement itself instead of a separate paragraph.\nIt uses two statements, PERFORM and END-PERFORM, to block the COBOL statements between them. IN-LINE PERFORM works as long as there are no internal GO TOs, not even to an exit.",
        "reference": "javatpoint.com"
    },
    {
        "question": "42) What is the main purpose of using Pointer in the string?",
        "answer": "A Pointer is used to specify the leftmost position within the receiving field where the first transferred character will be stored.",
        "reference": "javatpoint.com"
    },
    {
        "question": "43) What is the difference between Global and External Variables?",
        "answer": "The main difference between Global and External Variables is that the Global variables are accessible only to the batch program. On the other hand, External variables can be referenced from any batch program residing in the same system library.",
        "reference": "javatpoint.com"
    },
    {
        "question": "44) What is the difference between a binary search and a sequential search?",
        "answer": "Difference between a binary search and a sequential search\nBinary Search Sequential Search\nIn Binary search, the table element key values are arranged in ascending or descending order. The table is 'halved' in this search technique to search for equal to, greater than or less than conditions until it finds the element. In the case of Sequential search, the table is searched from top to bottom. In this search technique, the elements are not required to be in a specific sequence.\nFor more tables, the binary search is the best and much faster. Sequential search works well with lesser tables.\nFor Binary search, SEARCH ALL is used. For sequential search, SEARCH is used.",
        "reference": "javatpoint.com"
    },
    {
        "question": "45) What do you understand by Pic 9v99? What does it indicate?",
        "answer": "Pic 9v99 is used to specify a three-position Numeric field. It contains an implied or assumed decimal point after the first position. Here, v means an implied or assumed decimal point.",
        "reference": "javatpoint.com"
    },
    {
        "question": "99 and PIC9v99?",
        "answer": "PIC 9.99 is a four-position field that contains a decimal point. On the other hand, the PIC 9v99 is three-position numeric field which have an implied or assumed decimal point.",
        "reference": "javatpoint.com"
    },
    {
        "question": "47) What are the various rules used to perform a SEARCH?",
        "answer": "We can apply a SEARCH to a table if it satisfies the following conditions:\nIf it has OCCURS clause\nIf it is INDEXED BY phrase\nSearch Index must have some initial value\nSet the index value to 1",
        "reference": "javatpoint.com"
    },
    {
        "question": "48) Which function is used to get the current date from the system with century?",
        "answer": "To get the current date from the system with century, we can use the intrinsic function called FUNCTION CURRENT-DATE.",
        "reference": "javatpoint.com"
    },
    {
        "question": "49) What are SSRANGE and NOSSRANGE in COBOL programming language?",
        "answer": "In the COBOL programming language, SSRANGE and NOSSRANGE are options for a compiler to find the subscript out of range. NOSSRANGE is the default option where there will not be any run-time error if the Index or subscript went out of a range.",
        "reference": "javatpoint.com"
    },
    {
        "question": "50) What are the various sections of data division?",
        "answer": "There are a total of six sections in Data Division. Following is the list of them:\nFile Section\nWorking Storage Section\nLocal Storage Section\nScreen Section\nReport Section\nLinkage Section",
        "reference": "javatpoint.com"
    },
    {
        "question": "51) What is the difference between a Call and a Link in the COBOL programming language?",
        "answer": "A Call is an actual COBOL command used to initiate an external program and returns in the COBOL programming language. On the other hand, a Link is the same as Call, but the only difference is that it does not belong to a COBOL verb.",
        "reference": "javatpoint.com"
    },
    {
        "question": "52) What is the difference between comp and comp-3 usage?",
        "answer": "Comp is used for binary usage, while comp-3 is used to specify packed decimal.",
        "reference": "javatpoint.com"
    },
    {
        "question": "53) In which condition we can perform the SORT operation? What are the different rules of SORT operation?",
        "answer": "We can perform the SORT operation in the following conditions:\nWhen Input and Output files must remain closed.\nWhen Input and Output files have FD entries.\nWhen Working file must have a select clause.\nWhen Work file should have a short description in File Section.",
        "reference": "javatpoint.com"
    },
    {
        "question": "54) Is it possible to search a table with or without an Index?",
        "answer": "No, the table must be indexed to search a table.",
        "reference": "javatpoint.com"
    }
]