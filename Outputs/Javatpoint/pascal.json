[
    {
        "question": "",
        "answer": "Pascal is an imperative and procedural programming language. It was developed in 1970 by Niklaus Wirth. It follows the basics of structured programming and data structuring.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) Why Pascal is named as Pascal?",
        "answer": "The name Pascal was given in honor of the French mathematician, philosopher and physicist Blaise Pascal.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) Who was the developer of Pascal language?",
        "answer": "Pascal is designed by Niklaus Wirth.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) Which was the most influential language in Pascal development?",
        "answer": "Pascal was mainly influenced by ALGOL W language.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) Which languages are influenced by Pascal most?",
        "answer": "Pascal influenced the following languages:\nAda, Component Pascal, Go, Java, Modula, Oberon etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What are some distinguish features of Pascal?",
        "answer": "Following are some specific features of Pascal:\nADVERTISEMENT\nStructured programming language that uses control structures like if-else, repeat-until statement.\nProvide simplicity and modular approach for machine implementation.\nHaving different data structures that are included with the records, arrays, files, pointers, etc.\nOffer extensive error checking.\nSupport object oriented programming.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) Why is it named Pascal?",
        "answer": "It is named in the honor of a great French mathematician and philosopher Blaise Pascal.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) How do you describe a Pascal set?",
        "answer": "A collection of same type of elements is called a set. The elements in the set are called members. In Pascal, elements are enclosed in square bracket [].",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What is a datatype? What are the different data types included in Pascal?",
        "answer": "A datatype specifies a range of values that a variable can store. It also includes the set of operations that are performed on different datatypes.\nFollowing are the different datatypes in Pascal:\nScalar\nPointer\nStructured\nImage: Pascal-datatype",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What is pointer in Pascal?",
        "answer": "In Pascal, a pointer is a dynamic variable which specifies the value of another variable. You must declare a pointer before you use it to store any variable address.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) What are different Pointer concepts in Pascal programming?",
        "answer": "Following is a list of some important pointer concepts used in Pascal programming:\nArithmetic pointers: It specifies four arithmetic operators that can be used on pointers i.e. increment, decrement, +, -\nArray of Pointers: An array can be defined to hold a number of pointers.\nPointer to pointer: Pascal facilitates you to use pointer on a pointer and so on.\nReturn a subprograms in Pascal: Pascal facilitates a subprogram to return a pointer.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) What is IP Pascal?",
        "answer": "IP Pascal stands for Interplatform Pascal. It supports the following platform in its current configuration:\nWindows /95/98/ME/NT/2000/XP.\nLinux/86.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What is unit in Pascal?",
        "answer": "Modules of Pascal programs are referred as units. A module or unit contains some code blocks, which contain variables and type declarations, statement procedures etc. There are many built-in units in Pascal.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What is the reason behind using UNITS in Pascal programming?",
        "answer": "There are three reasons to use UNITS in programming:\nSimplicity: It simplifies the use of same code in some other programs to do the same job.\nEasy to handle: It makes handling easy because some large programs are split into smaller section.\nEasy to call: Putting codes in UNIT, makes it easy to call and use it again.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What are the different Pascal standards?",
        "answer": "The first Pascal standard was documented by the author of the Pascal programming language Niklaus Wirth but it was an unofficial Pascal standard.\nThe first official standard was ISO 7185 issued in 1983. It was followed by the extended standard ISO 10206 in 1990. Another standard Object-Oriented Extension to Pascal was introduced but never completed due to lack of interest.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is constant in Pascal? What constants are declared in Pascal?",
        "answer": "An entity which doesn't change is called constant. It remains unchanged during program execution. Following constants are declared in Pascal:\nOrdinal types\nSet types\nPointer types (Only nil value is allowed).\nReal types\nChar\nString",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Syntax:\nconst  \nidentifier = constant_value;",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What are the REPORT methods for which the portability is given in Pascal?",
        "answer": "There are two REPORT methods for portability:\nApplication: It contains a guideline which facilitates you to use implementation and features according to the compiler, to make the application more portable.\nCompiler: It is used to implement the language that is likely to implement the features like determining of the types compatible with one another.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) How can you define a string in Pascal?",
        "answer": "A string can be defined in many ways:\nAs a string variables\nAs a short strings\nAs a character arrays\nAs a null terminated strings\nAs a ansiStrings",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What is the control structure used in Pascal?",
        "answer": "Pascal uses structure programming language to display the flow of control in a structured manner.\nPascal uses the goto statement as a standard statement that allows the control to be given to the main program in a recursive manner.\nPascal provides more easy way to represent them without using the semicolon to end the statements written in one line.\nPascal uses loops as a control structure to represent the statements and uses assignment operators to assign the values to the variables.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is the usage of Extension in Pascal?",
        "answer": "Extension makes the program more clean and portable to use by providing the interfaces to be used in programs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) Is Pascal designed to be a teaching language?",
        "answer": "Or\nWhy Pascal is called teaching language?\n\nIt is often said that Pascal is a toy language and not to built for real-world programming. Check, what the father of Python Niklaus Wirth said:\n\"Occasionally, it has been claimed that Pascal was designed as a language for teaching. Although it is correct, its use in teaching was not the only goal. In fact, I don't believe in using tools and formalisms in teaching that are inadequate for any practical task.\" - Niklaus Wirth from the 1984 ACM A.M. Turing award lecture",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) What is the difference between apple Pascal and UCSD Pascal?",
        "answer": "UCSD Pascal: UCSD Pascal is a Pascal programming language system, run on UCSD p-system a portable, highlymachine-independent operating system.\nApple Pascal:Apple Pascal is a language and operating system based on the UCSD Pascal system.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What is the difference between Turbo and Standard Pascal?",
        "answer": "The Turbo Pascal uses dynamic variables and pointers to show the standard procedures like new, mark and release. Whereas, standard Pascal doesn't use dynamic variables and uses procedures like new and dispose.\nTurbo Pascal is more efficient, faster and doesn't require the support code that offers the compatibility factor. Whereas, Standard Pascal doesn't, accept the record specifications for their standard procedures.\nTurbo Pascal is using the local variables that are handled in the recursion phase and it also passes the recursive calls to others. Whereas, Standard Pascal doesn't, make use of recursion for their subprograms.\nTurbo Pascal doesn't use the Get and Put methods but instead of that there is a use of Read and write procedures that extend the functionality of the I/O methods. Whereas, it supports the use of get and put methods.\nTurbo Pascal doesn't implement the standard page procedure as the operating system doesn't define the form-feed character.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What is the difference between Modern Pascal and Standard Pascal?",
        "answer": "Standard Pascal is less secure and more ambiguous while programming or coding. Whereas, Modern Pascal provides more securities and fewer ambiguities while programming or coding.\nModern Pascal provides backward compatibility by the use of functions and procedures with their parameters. Whereas, standard Pascal doesn't provide this kind approach and doesn't follow the backward compatibility.\nModern Pascal provides Var parameters to be used with the procedures and functions and make advancement over the standard Pascal.\nModern Pascal provides the definitive type of compatibility with its parameters and the symbols used. Whereas, standard Pascal doesn't provide anything related to the symbols.\nModern Pascal allows the removal of the length of the symbol that is limited. Whereas, standard Pascal doesn't remove the symbol length limit.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) What are the different insecurities involved in Pascal?",
        "answer": "Following are the main insecurities involved in Pascal:\nInfinite loop: This is an area that makes the program to run for a longer period of time and it becomes hard to control and terminate it.\nInsecure variants: the variants used should be able to change the pointer to an integer or vise versa this can create errors when writing big programs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) Is there any Freeware Pascal compiler?",
        "answer": "",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) What is the Pascal compiler used on HPCVL machines?",
        "answer": "The Pascal compiler installed on the Sun Fire system of HPCVL is the Gnu Pascal Compiler (GPC). It is a public-domain compiler that has a great deal of extensions and compatibility features built within it. It is portable.",
        "reference": "javatpoint.com"
    }
]