[
    {
        "question": "1) On which memory arrays are created in Java?",
        "answer": "Arrays are created on dynamic memory by JVM. There is no question of static memory in Java everything (variable, array, object, etc.) is created on dynamic memory only.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) Can we call the main() method of a class from another class?",
        "answer": "Yes! We can call the main() method of a class from another class using Classname.main(). At the time of calling the main() method, we should pass a string type array to it.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What is an array in Java?",
        "answer": "An array is a finite and ordered collection of homogeneous data elements. It is finite because it contains a limited number of elements. It is ordered because all the elements are stored one by one in a contiguous location of computer memory (heap) in a linear fashion. It is homogeneous because all elements of an array are of the same data type only. We can store either primitive types or object references into it.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What are the types of an array?",
        "answer": "Arrays are generally categorized into two parts as described below:\nADVERTISEMENT\nSingle Dimensional Array\nMulti-Dimensional Array (2D and 3D arrays)",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) Is it possible to declare array size as negative?",
        "answer": "No, it is not possible to declare array size as negative. Still, if we declare the negative size, there will be no compile-time error. But we get the NegativeArraySizeException at run-time.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What is the difference between int array[] and int[] array?",
        "answer": "There is no difference between array[] and []array. Both array[] and []array are the ways to declare an array. The only difference between them is that if we are declaring more than one array in a line, we should use prefix []. If we are declaring a single array in a line, we should use postfix []. For example, consider the following declaration:\nint array1[], array2;   //array1[] is an array while array2 is just a variable of type int  \nint[] arr1, arr2;  //both arr1 and arr2 are arrays of int type",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) How to copy an array in Java?",
        "answer": "We can create a copy of an array in two ways, first one is manually by iterating over the array and the second one is by using the arrayCopy() method. Using the arrayCopy() method of the System class is the fastest way to copy an array and also allows us to copy a part of the array. These two methods are the popular ways to copy an array.\nThe other two methods to copy an array is to use the Arrays.copyOf() method and using clone() method.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is the default value of the array?",
        "answer": "When we create a new array, it always initialized with the default values. The default values of the array are:\nIf an array is of byte, short, int, and long type, the default value is 0.\nIf an array is of float and double type, the default value is 0.\nIf an array is of Boolean type, the default value is false.\nIf an array is of an Object type, the default value is null.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What do you understand by the jagged array?",
        "answer": "A jagged array is a multidimensional array in which member arrays are of different sizes. For example, int array[][]=new int[3][]. The statement creates a two-dimensional jagged array.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What is an anonymous array also give an example?",
        "answer": "Array reference that is not stored in a variable. It is used in the construction of other objects. Java's Polygon class has a constructor that parses anonymous array as a parameter.\nPolygon(int[] xvalues, int[] yvalues, int n)  \nFor example:\nPolygon triangle=new Polygon(new int[] {0, 10, 5}, new int[] {10, 0, 5}, 3)  \nThe above statement creates a triangle that an anonymous array.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) How many ways to find the duplicate elements in an array?",
        "answer": "There are the following five ways to find the duplicate array in Java.\nBrute Force Method: In this method, we compare each element of an array with the other elements. If any of the two elements are found equal, we consider them as duplicates. The method has time complexity O(n2).\nUsing HashSet: We can also use the HashSet class to find the duplicate elements in an array. To find the duplicate elements, iterate over the array elements and insert them into HashSet by invoking add() method of the HashSet class. If the method returns false it means that the element is already present in the Set. It takes O(n) time to find the duplicate elements.\nUsing HashMap: We know that HashMap uses key-value pair to store an element. When we use HashMap to find the duplicate array, we store the elements of the array as keys and the frequency of the elements as values. If the value of any key is greater than 1, the key is a duplicate element. Its time and space complexity is O(n). Using this method, we can also find the number of occurrences of duplicates.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) Which operations can be performed on an array?",
        "answer": "On an array, we can perform the searching, sorting, traversal, deletion, and insertion operation.",
        "reference": "javatpoint.com"
    },
    {
        "question": "Also, specify the reason?",
        "answer": "int y=56;  \nint[] number={12, 34, 90, y, 65};  \nThe declaration of the above array is true. Because Java allows us to use two different array-specific syntax shortcuts both to initialize (put explicit values into an array's elements) and construct (instantiate the array object itself) in a single statement. The first statement is used to declare, create and initialize in one statement. The second statement does the following four things:\nDeclares an int array reference variable named number.\nCreates an int array with a length of five (five elements).\nPopulates the array's elements with the values 12, 34, 90, 56, and 65.\nAssigns the new array object to the reference variable number.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) Can a Set be an array?",
        "answer": "In Java, a Set is an array, but an array is not necessarily a Set. Because repetition is allowed in array but in Set. For example, consider the following figure:",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) Is it possible to make an array volatile?",
        "answer": "Yes, we can make an array volatile in Java. But we only make the variable that is pointing to array volatile. If an array is changed by replacing individual elements that happen before the guarantee provided by volatile variables will not hold.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What happens if we declare an array without assigning the size?",
        "answer": "It is not possible to declare an array without size. When we declare an array without assigning the size, it throws the compile-time error. For example, height=new int[].",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) Can we declare array size as negative?",
        "answer": "No, the array size cannot be negative. If we declare an array with a negative size, it throws NegativeArraySizeException at run time.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) When ArrayIndexOutOfBoundsException occurs?",
        "answer": "The ArrayIndexOutOfBoundsException occurs when the program tries to access the index of an array. The exception also occurs when the index is higher than the size of the array or the index is negative.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) Which method of the Arrays class can be used to search a specific element in an array?",
        "answer": "The binarySearch() method of the Arrays class is used to search a specific element in an array. The method uses the binary search algorithm. The array must be in natural ordering before making this call. It is the simplest and most efficient method to find an element in a sorted array.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) How to retrieve the class name of an array?",
        "answer": "An array is an object. From the object we can retrieve the class name. We invoke the getClass() and getName() method that retrieves the class name of an array. The getClass() is the method of the Object class that returns the runtime class of the object. While the getName() is the method of the Class class that returns the name of the class/array class.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is the difference between Array and ArrayList?",
        "answer": "Array: Array is static. It is of fixed size. Its size cannot be changed once it is declared. It contains both primitive data types and objects of a class. Array does not have generic features.\nArrayList: ArrayList is dynamic in size. Its size or capacity automatically grows when we add element into it. It contains only the object entries. It has a generic feature.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) How can we check an array contains values or not?",
        "answer": "Java Arrays class provides two methods isExists() and contains() to check an array has elements or not. Both the methods return true if an array has elements else returns false.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) What is the equilibrium index of an array also give an example?",
        "answer": "If the sum of lower indices is equal to the sum of higher indices is called an equilibrium index of an array. For example, consider the following array: [-7, 1, 5, 2, -4, 3, 0], where:\na[0]=-7, a[1]=1, a[2]=5, a[3]=2, a[4]=-4, a[5]=3, a[6]=0\nLet's find the equilibrium index. According to the definition:\nThe sum of lower indices is = a[0]+a[1]+a[2] = -7+1+5 = -1\nThe sum of higher indices is = a[4]+a[5]+a[6] = -4+3+0 = -1\nWe observe that the sum of lower indices is equal to the sum of higher indices. Hence, the equilibrium index is 3.\nIn the above array, 6 is also an equilibrium index because the sum of a[0] to a[5] is 0, and the value of index a[6] is 0.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What is left-rotation in an array?",
        "answer": "Left-rotation is an operation that can be performed over an array. In this operation, each element of an array shifts 1 unit to the left. Therefore, the lowest index's value moves to the highest index. We can perform any number of rotations over an array. It is also known as a circular array. Let's perform left-rotation twice over an array [7, 8, 9, 2, 5, 6].\nAfter one rotation, we get the array [8, 9, 2, 5, 6, 7], after the second rotation, we get [9, 2, 5, 6, 8].",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) what are the advantages and disadvantages of an array?",
        "answer": "Advantages of Array\nWe can store multiple elements of the same type under a single variable.\nWe can implement other data structures such as Stack, Queue, Tree, etc. with the help of an array.\nWe can fetch data elements using the index at run time.\nDisadvantages of Array\nBefore using an array, it is mandatory to declare its size.\nIt is a static structure, so we cannot increase or decreases memory allocation.\nInsertion and deletion operations are difficult because elements stored at the contiguous memory location. It also increases the cost.\nAllocate more memory than required is the wastage of memory.",
        "reference": "javatpoint.com"
    }
]