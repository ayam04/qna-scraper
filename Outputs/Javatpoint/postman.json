[
    {
        "question": "1) What is Postman?",
        "answer": "Postman is a free HTTP client-based software application and a collaboration platform for API development. It is mainly used to perform API testing. It is a very popular API client which facilitates developers and provides a platform to design, build, share, test, and document APIs. Postman supports testing of HTTP requests by utilizing GUI (Graphical User Interface), which later we can execute and validate the responses.\nThe Postman tool also facilitates us to send HTTP/s requests to a service and get their responses. We can ensure that the service is up and running by using this.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What was the Postman originally developed?",
        "answer": "When the Postman was developed, it was originally a Chrome browser plugin. It extends its solution with the native version for both Mac and Windows.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) Why do we use Postman?",
        "answer": "The Postman tool has become a choice of more than 8 million users. Following are the main reasons for using Postman:\nADVERTISEMENT\nADVERTISEMENT\nIt is free: Postman is free software that we can use for API testing. It is free to download and use for teams of any size.\nIt is easy to use: Postman is an easy-to-use software tool. We can send HTTP requests of various types (such as GET, POST, PUT, PATCH, etc.). We have to download it, and we can send our first request in minutes. It also gives us the ability to save environments for future use.\nCommunity & Support: It has a huge community forum for customer support and extensive documentation.\nIt is extensible: Postman facilitates us customizing it according to our needs with the Postman API.\nAPIs Support: It facilitates us to make any API call (REST, SOAP, or plain HTTP) and easily inspect even the largest responses. It also helps manage the end-to-end lifecycle of the API - starting from design to mocking to testing and finally maintaining the APIs.\nRuntime Services: Postman provides Runtime Services that help us manage API collections, environments, work-spaces, and different examples.\nIntegration: Postman facilitates us to easily integrate test suites into our preferred CI/CD tools and services, such as Jenkins with Newman (command-line collection runner).",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is an API?",
        "answer": "API is an acronym that stands for \"Application Programming Interface\". It is a set of routines, protocols, and tools used for building Software applications. API is an interface, so it specifies how one software program should interact with other software programs.\nIn other words, we can say that API is an Application Programming Interface that acts as an interface between two software applications and allows these two software applications to communicate with each other. API is a collection of software functions that another software program can execute.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What are the various authorization methods provided by Postman?",
        "answer": "Postman provides the following API request authorization options:\nAPI Key\nOauth 1.0\nOauth 2.0\nBearer Token\nBasic auth\nDigest auth\nHawk Authentication\nAWS Signature\nNTLM Authentication",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What is the use of the collection in Postman?",
        "answer": "In Postman, a collection is used to group similar requests. It systematically arranges the requests into folders.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What are the various tools used for API Testing?",
        "answer": "Following is a list of some tools that are used for API Testing:\nPostman\nSoapUI\nKatalon Studio\nTricentis Tosca\nApigee\nJmeter etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) How can you access the Postman variables?",
        "answer": "We can access the Postman variables by using the variable name as:{{variable_name}}",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What are the different types of API requests supported in Postman?",
        "answer": "Following is a list of the different types of API requests supported in Postman:\nGET\nPOST\nPUT\nPATCH\nCOPY\nDELETE\nHEAD\nOPTIONS\nLINK\nUNLINK\nPURGE\nLOCK\nUNLOCK\nPROPFIND\nVIEW",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "An HTTP request is a programming request made by the client to a named host located on a server. HTTP works as a communication interface or a request-response protocol between a client and server. The main aim of the HTTP request is to access a resource on the server. To make the HTTP request, the client uses components of a URL (Uniform Resource Locator), which includes the information needed to access the resource.\nAn example of the HTTP request:\nA client (browser) sends an HTTP request to the server; then, the server responds to the client. The response sent by the server contains the status information about the request, and it can also contain the requested content.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) What are the core components of an HTTP request?",
        "answer": "Following are the five core components of an HTTP request:\nHTTP methods: It is a set of request methods used to perform needed action for a given resource (GET, PUT, POST, and DELETE).\nUniform Resource Identifier (URI): It is a kind of address that describes the resource.\nHTTP Version: It specifies the version of the HTTP. For example HTTP v1.1\nRequest Headers: It specifies the content type and content length of the request. For example: Content-type: application/ JSON, Content-Length: 511\nPayload: It is used to specify the Request Body that includes message content.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) Why does Postman accept Base64 encoding only?",
        "answer": "Postman accepts Base64 encoding only because it transmits the data into the textual form and sends it in an easier form, such as HTML form data. This is also preferred because we can rely on the same 64 characters in any encoding language we want to use.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) Which type of encoding does Postman accept authorization credentials and why?",
        "answer": "Postman accepts authorization credentials in Base64 encoding only. This is inbuilt in Postman, or else you can refer to a third-party website to convert the credentials in base64. The Base64 authorization credentials are generally used because they transmit the data into a textual form and send it in an easier form, such as HTML form data.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What are the core components of an HTTP Response?",
        "answer": "Following are the four core components of an HTTP Response:\nStatus/Response Code: The server generates the status or response codes when the client makes a request. For example, 404 means Page Not Found, and 200 means Response is OK.\nHTTP Version: It describes the HTTP version. For example: HTTP v1.1, HTTP v1.3 etc.\nResponse Header: The Response Header includes the information for the HTTP response message. For example, Content-type, Content-length, date, status, and server type.\nResponse Body: The Response Body contains the client's data requested from the server.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What is the meaning of the term environment in Postman?",
        "answer": "In Postman, the term environment is a set of key-value pairs. You can create multiple environments in Postman and switch among them quickly by pressing a button. There are 2 types of environment, global and local.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) Can we have two global scope variables with the same name in Postman?",
        "answer": "The global variables are global, so we cannot set duplicate names for them without any environment as it creates confusion for the software. On the other hand, local variables can have the same name but in different environments.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) Which one is preferred in Postman, a global or local variable?",
        "answer": "In Postman, if 2 variables have the same name (one being local, the other global), then the higher priority is of the local variable. The local variable will overwrite the global variable.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) How can you log variable values in Postman?",
        "answer": "In Postman, we can log the variable values in the console by using the following command:\nconsole.log(pm.variables.get(\"variable_name\"));",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What is the use of Postman monitor?",
        "answer": "The Postman monitor is used for running collections. Collections run till the specified time defined by the users. It requires the users to be logged in, and the users share the Monitor reports over an email on a daily or monthly basis.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What do you understand by team workspace in Postman?",
        "answer": "As we know, a workspace is a collaborative environment for users to develop and test APIs. In the same way, a team workspace is a workspace that is shared by the whole team working on the same collections of requests. Usually, it is time-consuming and hard to share the collections through external drives or other sharing; the team workspace synchronizes and collaborates all the team's work in one place.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is the difference between Query Params and Path Variables?",
        "answer": "Query Params or Query Parameters are used for sorting or filtering the resources. On the other hand, Path Variables are used for identifying specific resources.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What is the use of Postman Collection runners?",
        "answer": "The Postman Collection runner is used to perform Data-driven testing. It runs a group of API requests for multiple iterations with different data sets.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) What is Basic Auth in Postman?",
        "answer": "In Postman, Basic Auth is an authorization technique provided for HTTP user agents like web browsers to enter username and password. After entering the username and password, it gets associated with the request.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) Can we import local variables in Postman Monitors?",
        "answer": "Yes, we can import local variables in Postman Monitors, but it is not allowed to import global variables in Postman Monitors.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What are the main limitations of Postman?",
        "answer": "Following is the list of key limitations of Postman:\nPostman cannot process 1000+ API requests.\nIn the case of huge projects, it isn't easy to manage the collections and requests.\nPostman is not suitable for managing the workspace in the form of code. This is because there would be a lot of code duplication for dynamic API requests.",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) What is a binary form in POST methods? What is its usage?",
        "answer": "In POST methods, the binary form is designed to send data easily in a format it is impossible to enter data manually. This is mainly used when sending large files like images, CSV files, etc., in the POST request. The binary representation is one of the easiest representations used for sending complex data with the request.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What is the use of Postman cloud when we are working in a company?",
        "answer": "The Postman cloud is a common repository of companies to access Postman collections. That is why we use it when we are working in a company. We can save the work instantly in the Postman cloud after logging in. It facilitates the team members to access data/collections from anywhere.",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) What is digest auth in Postman?",
        "answer": "The digest auth or digest authorization is one of the authorization techniques provided by Postman. This technique lets the clients send the request first to the API and get responses from the server, including a number that can be used only once a real value and 401 unauthorized responses. After that, the client can send back an encrypted data array with both username and password and the data received from the server earlier. Now, the server uses this data to generate an encrypted data string and compares this with what was sent for authenticating the request.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) Why is it not suggested to save work in Postman cloud?",
        "answer": "It is not suggested and is not preferred to save your work in the Postman cloud as the company's work is not allowed to be leaked and remain confidential. While saving your work on Postman cloud, it may cause a security breach as it requires sign-in. That's why the Postman Cloud is not suggested for saving work, and team workspace is highly preferred.",
        "reference": "javatpoint.com"
    },
    {
        "question": "30) What do you understand by status code 201?",
        "answer": "The status code 201 means created when you have successfully created a resource using POST or PUT request. It returns a link to a newly created resource using the location header.",
        "reference": "javatpoint.com"
    },
    {
        "question": "31) What is the procedure to remove local variables?",
        "answer": "The local variables are automatically removed once you have executed and completed the tests.",
        "reference": "javatpoint.com"
    },
    {
        "question": "32) What is the procedure to save the responses of API to a file in Postman?",
        "answer": "In Postman, there are two ways to save the responses of an API to a file:\nFirst, click on the download button in the response section.\nSecond, click on the arrow next to the send button. Here, you will see an option to send and download. After clicking on it, you will get a prompt Postman asking for the location of saving the response post successful request execution.",
        "reference": "javatpoint.com"
    },
    {
        "question": "33) What is the meaning of the status code 304?",
        "answer": "The status code 304 means NOT MODIFIED. It is used to minimize the network bandwidth usage in conditional GET requests. The response body should be empty. Headers should have a date, and location, etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "34) What is the use of the 301 status code in Postman?",
        "answer": "In Postman, the 301 status code is used to specify that the page has been permanently redirected from one website page to another. It tells the search engine that the old page is outdated, and the search engine has to index the new page URL.",
        "reference": "javatpoint.com"
    },
    {
        "question": "35) What is the method to organize requests in Postman?",
        "answer": "We can organize requests in Postman with the Collections.",
        "reference": "javatpoint.com"
    },
    {
        "question": "36) What are the various variable scopes provided by Postman?",
        "answer": "Following is a list of several variable scopes provided by Postman:\nGlobal Variables: Global variables allow data access between different collections, requests, and scripts. They are available throughout the workspace.\nLocal Variables: Local variables are the temporary variables that can be accessed only within the scope of requests scripts. Depending on the requirements, these variables are either scoped to a single request or single collection. These variables are not available once the script execution is completed.\nEnvironment Variables: The Environment variables allow us to tailor the requests about different development environments such as local testing, stage testing, or prod testing.\nCollection Variables: The Collection variables are independent of the environment and scoped to be available for all the requests present within the collection.\nData Variables: The Data variables come from external JSON or CSV files and define the datasets required to run the collection in Collection Runner or Newman.",
        "reference": "javatpoint.com"
    },
    {
        "question": "37) What is the difference between the form data and x-www-form-urlencoded?",
        "answer": "The key difference between the form data and x-www-form-urlencoded is that the URL will be prearranged when sent through x-www-form-urlencoded.",
        "reference": "javatpoint.com"
    },
    {
        "question": "38) In which conditions should we use global, collection, and local variables?",
        "answer": "Global variables are the general-purpose variables. They are used while passing data to other requests and are ideal for quick results and prototyping.\nCollection variables are generally used for storing some constants that do not change during the execution of the collection. These variables are used for constants that do not change during the execution and URLs / authentication credentials if only one environment exists.\nLocal variables are the temporary variables and are only available within the request that has set them or when using Newman/Collection runner during the script execution. These variables are used whenever we have to override all other variable scopes.",
        "reference": "javatpoint.com"
    },
    {
        "question": "39) How can we access the history of requests in Postman?",
        "answer": "In Postman, we can access the history of requests in the History tab provided on the Postman application. When we sign into the Postman account, the history will be synced across the devices where you are logged in. After clicking on any of the requests present in the History tab, the view will open the request that we saved while working on it earlier. History also contains the collection runs that were executed as summarized versions.\nWhen you click on the \"View More option\" on the request, you will see options to save, document, monitor, delete or mock the request. You can also select multiple requests by using Command or Control button and then clicking on the request.",
        "reference": "javatpoint.com"
    },
    {
        "question": "40) How can we stop executing requests or stop the collection run?",
        "answer": "We can stop executing requests or stop the collection run by using the following command:\npostman.setNextRequest(null);",
        "reference": "javatpoint.com"
    },
    {
        "question": "41) Is it possible to reuse the authentication token for multiple requests?",
        "answer": "Yes, it is possible to reuse the authentication token for multiple requests. We can achieve it by creating a collection and adding all the requests having the same authentication token to that collection and then assigning the auth token to the same collection. We can apply it to the individual requests by selecting the \"Inherit auth from parent\" option in the Authorization tab.",
        "reference": "javatpoint.com"
    },
    {
        "question": "42) Where are the query parameters stored in a GET request in Postman?",
        "answer": "In the GET request, the query parameters are stored in the URL in Postman.",
        "reference": "javatpoint.com"
    },
    {
        "question": "43) What is executed first in a collection run?",
        "answer": "The pre-request scripts at the compilation level are executed first in a collection run.",
        "reference": "javatpoint.com"
    },
    {
        "question": "44) How can we access a Postman variable?",
        "answer": "We can access a Postman variable by entering the variable name as {{var}}.",
        "reference": "javatpoint.com"
    },
    {
        "question": "45) Which tool can be used to run Postman collections in Jenkins?",
        "answer": "We can use the Newman tool to run Postman collections in Jenkins.",
        "reference": "javatpoint.com"
    },
    {
        "question": "46) What are the most commonly seen status codes in Postman?",
        "answer": "Following is the list of most commonly seen status codes in Postman:\n200 (OK): Status code 200 specifies that the request was correct.\n201 (Created): Status code 201 specifies that the value wrapped with the request has been created in the database. Here, it is obvious that the request was correct.\n204 (No Content): Status code 204 specifies that the request was correct and received, but there is no content to send. It means there is no response to send to the client by the server.\n400 (Bad Request): Status code 400 specifies a bad request. A bad request means that the syntax of the request was incorrect. It appears when we have sent the wrong parameters along with the request URL or in the request's body.\n401 (Unauthorized request): Status code 401 specifies an unauthorized request. An unauthorized request is a request for which you are not authorized. This status code appears when we are not authorized to access the server or enter the wrong credentials.\n404 (Not Found): Status code 404 specifies that the server was connected, but it could not find what was requested. It simply means \"request not found\". This status code normally appears when we request a web page not available on the server.",
        "reference": "javatpoint.com"
    },
    {
        "question": "47) What is Scratch Pad?",
        "answer": "Postman provides a space known as Scratch Pad. The Scratch Pad facilitates us to work without being connected to Postman servers and also provides the flexibility to utilize some of the features of Postman offline. These features include collection creation, creating requests, and the ability to send requests. The Scratch Pads are stored locally, and once logged in; the work is saved into the workspace.",
        "reference": "javatpoint.com"
    },
    {
        "question": "48) What are the different Request Method types in Postman?",
        "answer": "The different Request Method types in Postman are as follows:\nGet\nPost\nPut\nDelete\nPatch\nHead\nDelete",
        "reference": "javatpoint.com"
    },
    {
        "question": "49) How can you iterate a request 100 times in Postman?",
        "answer": "We can iterate a request 100 times in Postman using Collection Runner.",
        "reference": "javatpoint.com"
    },
    {
        "question": "50) What are some examples of the JS libraries available in Postman?",
        "answer": "Some examples of the JS libraries available in Postman are Lodash, Moment, GUID, etc.",
        "reference": "javatpoint.com"
    },
    {
        "question": "51) What is the full form of GUID? Where is it used?",
        "answer": "GUID is an acronym that stands for Global Unique Identifier. It is a set of hexadecimal digits separated by hyphens and solves the purpose of uniqueness.\nIn Postman, it is used to generate and send a random value to APIs.\nExample:\n{  \n\"id\": \"{{$guid}}\",  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "52) Which programming language is used for Postman tests?",
        "answer": "JavaScript is used for Postman tests.",
        "reference": "javatpoint.com"
    },
    {
        "question": "53) How can you generate random numbers of a given range in Postman?",
        "answer": "In Postman, we can generate random numbers of a given range using some script. Suppose you want to generate numbers between the range of 1 to N, then use the following pre-request script:\npm.globals.set('randomNumber', Math.floor(Math.random()* N));  \nNow, use this variable in the URL as {{randomNumber}}",
        "reference": "javatpoint.com"
    },
    {
        "question": "54) How can we view request logs and response logs in Postman?",
        "answer": "We can view request logs and response logs in Postman through the Postman Console window.",
        "reference": "javatpoint.com"
    },
    {
        "question": "55) What is the binary form in the Post method in Postman?",
        "answer": "In Postman, the binary form is designed to send the information in a specific format that cannot be entered manually. For example, images, files, etc. Everything in a computer is converted to binary.",
        "reference": "javatpoint.com"
    },
    {
        "question": "56) How can you organize requests in Postman?",
        "answer": "In Postman, we can use Collections to organize requests.",
        "reference": "javatpoint.com"
    },
    {
        "question": "57) Which method is preferred to write the tests?/ JavaScript or Functional?",
        "answer": "The functional method is advised and recommended while writing tests in Postman. Although we can use JavaScript methods, there has been no notice of ending the support for the JavaScript method.",
        "reference": "javatpoint.com"
    }
]