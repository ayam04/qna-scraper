[
    {
        "question": "1) What is SAS?",
        "answer": "SAS is a short form of Statistical Analytics System that is developed by the SAS Institute. It is the leading integrated set of software products for advanced analytics, predictive analytics, multivariate analytics, data management, and business intelligence. SAS includes a graphical point-and-click solution to make its user-interface easy and smooth. Thus, SAS provides easy-to-use, user-friendly platforms to non-technical users and adds advanced options through SAS language.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What are the features of SAS?",
        "answer": "SAS is one of the best analytical platforms with a wide variety of features. The following are the few main features of SAS:\nAnalytics: SAS is considered one of the leading analytics platforms of different business products and services.\nData Access & Management: SAS also allows users to use it as DBMS (Database Management System) software.\nBusiness Solutions: SAS consists of a solution for performing business analysis. This business analysis can also help companies to build the right business products.\nReporting & Graphics: SAS allows users to generate analysis reports in different formats, such as list, summary, and graphic reports.\nVisualization: SAS enables users to visualize the reports in graphs that may include simple scatter plots to bar charts to other complex multi-page classification panels.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) Why do people prefer using SAS over other data analytics tools available in the market?",
        "answer": "There are many alternatives available for SAS, but people prefer using SAS the most. The reason for this is the uniqueness of its features than other data analytics tools in the market. People prefer using SAS due to the following reasons:\nEase of Learning: SAS is straightforward to learn because it has simple concepts. It allows users to use an option like PROC SQL, which makes their work a lot easier. This option is mainly derived from SQL, so users knowing SQL get a slight advantage in working with SAS.\nGraphical Capabilities: SAS includes functional graphical capabilities. Due to this, users can quickly learn and start customizing the plots with a little bit of learning.\nData Handling Capabilities: SAS is considered far better than other leading tools and languages (such as Python, R, etc.) in data handling capabilities. It is the best platform to choose when dealing with the vast amount of data. Also, it is best suited for parallel computations.\nAdvancements in Tool: SAS receives frequent updates, which are designed, developed and tested in a well-controlled environment. On the other side, Python and R are available for contribution openly, and hence there are more chances of error in the latest developments.\nJob Scenario: SAS is one of the top leaders in the global market regarding the availability of jobs. According to some reports, SAS controls around 70% of the data analytics market share in Indian corporate jobs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "SAS framework has the following essential capabilities:\nAccess: One of the main capabilities of the SAS framework is Data accessibility. That means data can be easily accessed from different sources, such as raw database, excel file, oracle database and SAS datasets, etc.\nManage: Data management is another vital capability of the SAS framework. That means data accessed from various sources can be easily managed. To manage data, one can perform several functions like creating variables, validating data, cleaning data, creating subset data, etc.\nAnalyze: Once the data is accessed and managed, it is then analyzed. We can perform either some fundamental analyses (for example - averages, frequency, etc.) or complex analyses (for example - forecasting, regression, etc.).\nPresent: The analyzed data can be stored or saved in a graphic report, list form, and overall summarized insights. These generated stats can be further printed or published online. Also, these stats can be written into a data file.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) How many data types are present in SAS?",
        "answer": "There are two types of data types available in SAS: \"Numeric\" and \"Character\". Besides, dates are also considered characters; however, SAS provides implicit functions to work upon dates.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The following are the main functions of SAS:\nADVERTISEMENT\nBusiness Planning\nData Warehousing\nStatistical Analysis\nData Management and Project Management\nQuality Management\nInformation Retrieval\nOperational Research and Decisional Support",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What are the essential components of SAS programming?",
        "answer": "There are mainly three components used in SAS programming, such as:\nVariables\nDataset\nStatements",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What are the basic syntax rules to be followed while writing the SAS program?",
        "answer": "To write a program in SAS, we can use an Editor Window. A program consists of several statements consisting of the appropriate syntax. These statements are arranged in order for the SAS to perform desired functions.\nSome basic syntax rules to be followed while writing SAS program are listed below:\nEach statement must include a semicolon (;) at the end.\nA semicolon is designed to be used as a separator. That means we can use a semicolon to separate several statements in a single line.\nStatements in SAS are not case-sensitive. If there are extra spaces before the statements, they are removed automatically.\nSAS has two different options for inserting a comment for statements, such as:\nComment can be included between an asterisk (*) and a semicolon (;). Start a line with an asterisk and end with a semicolon.\nAnother way to insert a comment is to include it between a forwarding slash and an asterisk (/*) and an asterisk and a forward slash (*/).",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The term PDV is a short form of 'Program Data Vector'. It is generally defined as an area of memory that is used by SAS for building data set. PDV is considered as a logical concept in SAS.\nSome of the main functions of PDV are listed below:\nPDV consists of two automatic variables, such as \"_N_\" and \"_ERROR_\". The first variable shows the number of counts for the data-step, which is being executed. In contrast, the second variable informs about the errors that come at the execution period.\nPDV helps in creating a database that includes one observation at any instant time.\nPDV helps in creating input buffer at compilation-time. These input buffers are used to keep the data from any external files.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) How will you elaborate the SAS data set?",
        "answer": "SAS dataset is generally defined as the data that is used for the analysis in the SAS program. It is commonly known as the SAS data table.\nThere are mainly two ways used to arrange data in the data set, such as:\nRows of observations\nColumns of variables",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) Why do we use the output statement while writing programs in SAS?",
        "answer": "The 'output' statement is mainly used to save summarized stats in a SAS data set. The saved information can be further used to generate customized reports as per the requirements.\nApart from this, we can use different options in the output statement to perform the followings:\nStore historical data of the entire process.\nDefine the name of the output data set.\nSelect the desired stats to save in the output data set.\nCompute and save percentiles that could not get computed automatically.",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) Why do we use Stop Statement in the SAS program?",
        "answer": "The 'stop' statement is mainly used in any SAS program to immediately stop current data processing. The processing of the statement is resumed after the end of the corresponding data step.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What, according to you, is the main difference between reading data from the existing data-sets and reading data from external files?",
        "answer": "When reading data from an existing data set, SAS holds the variables' values from one observation to the other corresponding observation. Besides, while reading the data from external files, SAS doesn't hold the values. In this case, SAS only reads the observations. The variables' values must be declared if there is a need for it. This is the main difference between reading data from existing datas sets and reading data from external files.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "It can be explained with a simple example when SAS does not automatically change the character value to a numeric value. Just assume a variable named 'PayRate', and its value starts with a dollar sign ($). In this case, SAS cannot convert or change the values of 'PayRate' to numeric values because the dollar sign prevents the process from being completed. Whenever SAS tries to automatically convert the values, the dollar sign blocks the entire process. As a result, the values don't get converted to numeric values.\nThat is why it is recommended to use INPUT and PUT functions with programs in case of conversions.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The comparison between SAS BI and SAP BO is tabulated below:\nAttributes SAS BI SAP BO\nAnalytics Easy to use Analytics Platform. Predictive Analytics Platform.\nReason for Deployment Supports quick data integration features with diverse sources. Supports high-level visualization with a user-friendly interface.\nAd-hoc Analysis Average Excellent\nPresentation Average Excellent\nMobile BI Excellent Good\nApplication Connects BI and Analytics to provide enterprise-grade data. Uses frontend suite to provide features like sort, view, and analysis of BI data.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "In SAS, BY-group processing is the method of processing the indexed, ordered, or grouped data based on variables. The BY statement is applied from the BY-group processing to complete the process.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) How is INPUT different from INFILE in SAS?",
        "answer": "The INPUT statement is used to specify the SAS programming variables, whereas the INFILE statement is used to specify an external file containing the data.\nThe syntax of INPUT:\ninput 'varname1' 'varname2';  \nThe syntax of INFILE:\ninfile 'filename';",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is the significant difference between using the drop=data set option in a set statement and data statement?",
        "answer": "In case there is a requirement to process specific variables but don't want them to show in the new data set, we can use the drop=data set option in the data statement.\nWhen we neither want to process specific variables nor want them show in the new data set, we can use the drop=data set option in the set statement.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The Data step in SAS is a form of SAS dataset containing the data and the 'data dictionary'. The data dictionary's primary function is to store all the information of variables along with their properties.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "SAS Informat is the set of instructions that instruct SAS how to read the data into SAS variables. These Informats are primarily used to read or input data from external files (also called text files, flat files, sequential files, or ASCII files).\nThere are mainly three different types of categories used to place SAS Informats, such as:\nNumeric Informats: INFORMAT w.d\nCharacter Informats: $INFORMATw\nDate/Time Informats: INFORMAT w.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) How will you differentiate SAS Format and SAS Informat?",
        "answer": "The main differences between SAS Format and SAS Informat are tabulated below:\nSAS Format SAS Informat\nIt is used to instruct SAS how to show values in the variables. It is used to instruct SAS how to read data from variables.\nFormats are mainly used to write the data. Informats are mainly used for reading or retrieving input data from external files.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What is the command used for performing sorting in SAS programs?",
        "answer": "We can use the PROC SORT command to perform sorting in the SAS program. This command is suitable for any number of variables within the program. The PROC SORT command works on the dataset. That means the command creates a new data set with sorting and keep the original data set unchanged.\nThe syntax below shows the use of PROC SORT command in SAS:\nPROC SORT DATA=original OUT=Sorted;  \nBY variable;  \nThe process of sorting can be applied in both ascending and descending orders. An additional keyword is added in the BY statement depending on the requirement for the desired sorting order. We can either add 'ASCENDING' or 'DESCENDING' keyword to perform the necessary task.\nFor example:\nPROC SORT DATA=original OUT=Sorted;  \nBY DESCENDING variable;",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "When it comes to removing duplicate values from a table in SAS, PROC SORT mainly has two options that are used to perform this:\nNODUP\nNODUPKEY\nWe can differentiate these two options with the help of the following table:\nNODUP NODUPKEY\nIt is used to compare all the variables available inside the data set. It is used to compare only BY variables in the current data set.\nIt is used to find and remove duplicate or repeating observations. It is used to delete options for the variables' values defined in the BY statement.\nThe syntax below displays the use of the NODUP option in PROC SORT:\nPROC SORT DATA=readin NODUP;\nBY variable name;\nRUN; The syntax below displays the use of the NODUPKEY option in PROC SORT:\nPROC SORT DATA=readin NODUPKEY;\nBY variable name;\nRUN;",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) How is PROC MEANS different from PROC SUMMARY?",
        "answer": "PROC MEANS produces stats for subgroups only in the case when there is a use of BY statement, and the input data was already sorted (using PROC SORT) by the BY variables before use.\nOn the other side, PROC SUMMARY automatically produces subgroup stats and provides all the information in one run instead of sorting the data set by the variables and running PROC MEANS again and again. However, PROC SUMMARY doesn't provide any information as output unless we have applied the OUTPUT statement to create a new DATA SET and used PROC PRINT to view the complete computed stats.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What is the role of PROC print and PROC contents in SAS?",
        "answer": "In SAS, PROC print's primary role is to make sure that the data inside the data set is read correctly. PROC contents, on the other side, display the information about the data set.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "DATA_NULL_ is such a type of data step that doesn't create or generate any additional data set. It is beneficial in a scenario when there is a need to create macro variables. Additionally, it can also be used to write the output without any data set.",
        "reference": "javatpoint.com"
    },
    {
        "question": "27) What functions we can use to convert character variables into numeric variables and numeric variables into character variables?",
        "answer": "While working with SAS, there are several tasks when we are required to convert character variables into numeric variables and numeric variables into character variables. There are mainly two different functions used to perform these conversions:\nPUT(): This function is used to convert numeric variables into character variables. The PUT() function is beneficial when there is a requirement to create a new variable having a different name. Here, it is necessary to have a similar source format type as the source variable.\nFor example:\nchar_var= put( num_var, 9.);  \nINPUT(): This function is used to convert character variables into numeric variables. Like PUT(), the INPUT() function is also beneficial when creating a new variable having a different name. Here, the source variable type must always be a character variable.\nFor example:\nnum_var= input(char_var,6.0);",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) What is the role of _CHARACTER_ and _NUMERIC_?",
        "answer": "_CHARACTER_ refers to all the character variables, which are currently defined in the existing data step. The statements below are used to specify all the character variables in PROC MEANS:\nproc means;  \nvar_character_;  \nrun;  \nOn the other side, _NUMERIC_ refers to all the numeric variables, which are already defined in the existing data set. The statements below are used to specify all the numeric variables in PROC MEANS:\nproc means;  \nvar_numeric_;  \nrun;",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) What are the commands used for including or excluding any particular variables in the data set?",
        "answer": "There are mainly two commands used for including or excluding any particular variables in the data set; they are:\nDROP: We can specify the DROP statement variable to delete or exclude it from the data step.\nKEEP: We can specify the variable in the KEEP statement to retain or include it in the data step.\nApart from this, some data set options can also be used to perform this purpose.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Some of the main character functions used for data cleaning in SAS are given below:\nTRIM(str): The aim of using this function is to remove trailing blanks from the string.\nCOMPRESS(char_string): The aim of using this function is to remove blanks and other desired characters from the string.\nUPCASE(char_string): The aim of using this function is to convert all the characters into uppercase in the specified string.\nLOWCASE(char_string): The aim of using this function is to convert all the characters into lowercase in the specified string.\nCOMPBL(str): The aim of using this function is to remove multiple blanks from the string and convert them into a single blank.",
        "reference": "javatpoint.com"
    },
    {
        "question": "31) What is the command used for saving logs in an external file in SAS?",
        "answer": "The PROC PRINTTO command is used for saving logs in an external file in SAS. The syntax of this command is shown below:\nproc printto log=\"location of the folder for creating a new log file\" new;  \nrun;  \nFor Example:\nproc printto log=\"C:\\Users\\javaTpoint\\Downloads\\LOG-FILE.txt\" new;  \nrun;  \nWhile executing this, a new text file named 'LOG-FILE' will be created in the location C:\\Users\\javaTpoint\\Downloads\\",
        "reference": "javatpoint.com"
    },
    {
        "question": "32) Why do we use the SUBSTR function while writing programs in SAS?",
        "answer": "SUBSTR function is one of SAS's useful functions that is mainly used when there is a requirement to abstract the substring from a character variable. In case a start position and length are already defined, this function is used to abstract the character string.\nThe syntax below shows the use of the SUBSTR function in SAS:\nSUBSTR(char_var, start,length);",
        "reference": "javatpoint.com"
    },
    {
        "question": "33) What methods can we use to create a Macro variable in SAS?",
        "answer": "SAS allows users to use several different methods for creating Macro variables. However, listed below are the five most commonly used methods:\nUsing Macro parameters\nUsing the %DO statement (iterative)\nUsing the %LET statement\nUsing CALL SYMPUTX routine\nUsing INTO in PROC SQL",
        "reference": "javatpoint.com"
    },
    {
        "question": "34) What are the few most commonly used options to debug Macros in SAS?",
        "answer": "The following are the most common options used to track the macro code along with the SAS code generated by the macros:\nMLOGIC\nSYMBOLGEN\nMPRINT\nThe messages generated by these options can only be accessed through the SAS log.",
        "reference": "javatpoint.com"
    },
    {
        "question": "35) What is the main difference between SYMGET and SYMPUT?",
        "answer": "In SAS, the main function of SYMGET is to retrieve a value from a macro variable to a data set. Whereas on the other hand, the main function of SYMPUT is to store the value of the data set in the macro variable.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "PROC SQL in SAS programming is considered as the simultaneous process for performing all the observations. The following steps are performed throughout the working of PROC SQL:\nSAS first scans all the SQL procedure statements and makes sure that there are no syntax errors like missing semicolons or the use of any invalid statements.\nThe SQL Optimizer scans all available queries inside the statement and further decides how the SQL query should be executed to reduce run-time and improve overall performance.\nIf there is a table present inside the FROM statement, it will be loaded into the data engine. Because of this, they can be further accessed in memory easily and quickly.\nNext, codes and other available calculations are executed.\nAs a result, the final table gets created in memory.\nThe final table is then transferred to the output table, as specified in the SQL statement.",
        "reference": "javatpoint.com"
    },
    {
        "question": "37) What is the most common method used to count the total number of intervals between two dates in SAS?",
        "answer": "We can use the interval function INTCK to calculate the total number of intervals between two dates in SAS.\nThe syntax below displays the use of the INTCK function:\nINTCK(interval,start-of-period,end-of-period)",
        "reference": "javatpoint.com"
    },
    {
        "question": "38) What are the methods for deleting duplicate observations in SAS?",
        "answer": "There are mainly three methods used for deleting the duplicate observations in SAS:\nBy using an SQL query in the procedure\nProc sql;  \nCreate SAS-Dataset as select * from Old-SAS-Dataset where var=distinct(var);  \nquit;  \nBy cleaning the data\nSet temp;  \nBy group;  \nIf first.group and last.group then  \nRun;  \nBy using the NODUPS option in the procedure\nProc sort data=SAS-Dataset nodups;  \nby var;  \nrun;",
        "reference": "javatpoint.com"
    },
    {
        "question": "39) What is the maximum size of the allowed data set in SAS?",
        "answer": "The total number of observations depends entirely on the capacity of the system. There can be any number of observations depending on the system's ability to store and handle them.\nBefore SAS 9.1 version, there was limited support, and the data set had a maximum limit of only 32,767 variables. But, SAS 9.1 or above supports using the maximum possible variable in the SAS data set based on the system's resources.",
        "reference": "javatpoint.com"
    },
    {
        "question": "40) What are some common mistakes that people make while writing programs in SAS?",
        "answer": "When writing SAS programs, people make some common errors, especially when they are beginners. The most common errors are as follows:\nEach statement in SAS must be closed by a semicolon (;). But, most people forget to use it at some points. It is the most common mistake in SAS programming.\nMissing to check logs once the program is submitted.\nNot using the proper methods for debugging process.\nMaking commenting errors by either not using a proper way or failing to implement comments where necessary.",
        "reference": "javatpoint.com"
    }
]