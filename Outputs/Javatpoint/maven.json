[
    {
        "question": "1) What is Maven?",
        "answer": "Maven is a project management tool. It is based on POM (Project Object Model). More details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What aspects are managed by Maven?",
        "answer": "ADVERTISEMENT\nBuilds\nDocumentation\nReporting\nSCMs\nReleases\nDistribution\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What are the advantages of Maven?",
        "answer": "No need to add jar file in each project\nCreates right directory structure\nBuilds and deploys the project\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is the command to check the maven version?",
        "answer": "Type the following command on console to know the maven version.\nmvn -version  \nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "5) What does the build tool?",
        "answer": "Generates source code (if the auto-generated code is used)\nGenerates documentation from source code\nCompiles source code\nPackages compiled code into a JAR or ZIP file\nInstalls the packaged code in the local repository, server repository, or central repository\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What is the difference between Ant and Maven?",
        "answer": "Ant Maven\nIt is a toolbox. It is a framework.\nIt is mainly a build tool. It is mainly a project management tool.\nThere is no life cycle. There is alife cycle.\nAnt doesn't have formal conventions. Maven has a convention to place source code, compiled code etc.\nAnt is procedural. Maven is declarative.\nThe ant scripts are not reusable. The Maven plugins are reusable.\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) Why is the use of the profile required in Maven?",
        "answer": "For providing probability to projects, we use profiles.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) What is the syntax for offline project creation?",
        "answer": "The syntax for project creation is:\n\n\nmvn o packg.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) How is the propagation of plugins to child POMs stopped?",
        "answer": "It can be done using the following syntax:\nset<inherited> to false.",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) What is the use of the exclusion element?",
        "answer": "The element is used to exclude dependencies.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The snapshot indicates the current development copy.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "It is a Maven plugin which is designed for the creation of project structure.",
        "reference": "javatpoint.com"
    },
    {
        "question": "What does central repository consist of?",
        "answer": "It consists of a large number of libraries that are frequently used.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "mvn install",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "The lifecycle of cleaning consist of:\npre-clean\nclean\npost-clean",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) What is the purpose of mvn clean command?",
        "answer": "The command removes the target directory before the starting of a build process.",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What is a MOJO?",
        "answer": "A MOJO stands for Maven plain Old Java Object. Each MOJO is an executable goal in Maven, and a plugin is a distribution of one or more related MOJOs.",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) What is a repository?",
        "answer": "A repository is a directory or place where all the jars and pom.xml file are stored. There are 3 types of a repository in Maven:\nLocal Repository\nCentral Repository\nRemote Repository\nMore details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What is a local repository?",
        "answer": "Maven local repository is created by maven in your local system when you run any maven command. More details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "19) What is a central repository?",
        "answer": "Maven community creates maven central repository on the web. More details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) What is a remote repository?",
        "answer": "Maven remote repository is located on the web by different vendors. So you need to define the dependency in pom.xml file manually. It is important because most of the libraries are missing from the central repository. More details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) What is POM?",
        "answer": "POM stands for Project Object Model. The pom.xml file contains information of project and project configuration. More details.",
        "reference": "javatpoint.com"
    },
    {
        "question": "22) What are the build phases in Maven?",
        "answer": "validate\ncompile\ntest\npackage\nintegration-test\nverify\ninstall\ndeploy",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) What is the command to package maven project?",
        "answer": "mvn -package",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What is the fully qualified artifact name of maven project?",
        "answer": "<groupId>:<artifactId>:<version>",
        "reference": "javatpoint.com"
    }
]