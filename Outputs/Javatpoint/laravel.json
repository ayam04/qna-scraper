[
    {
        "question": "1) What is Laravel?",
        "answer": "Laravel is free to use, open-source web framework based on PHP. It is developed by Taylor Otwell . It supports the MVC (Model-View-Controller) architectural pattern. Laravel provides an expressive and elegant syntax, which is useful for creating a wonderful web application easily and quickly. The first version of Laravel was released on 9th June 2011 .\nAs of SitePoint survey in March 2015, Laravel was voted as one of the most popular PHP frameworks along with Symfony, Nette, CodeIgniter, and Yii2 .",
        "reference": "javatpoint.com"
    },
    {
        "question": "2) What are the main features of Laravel?",
        "answer": "Some of the main features of Laravel are:\nADVERTISEMENT\nADVERTISEMENT\nADVERTISEMENT\nEloquent ORM\nQuery builder\nReverse Routing\nRestful Controllers\nMigrations\nDatabase Seeding\nUnit Testing\nHomestead",
        "reference": "javatpoint.com"
    },
    {
        "question": "3) What do you understand by Eloquent ORM?",
        "answer": "Eloquent ORM (Object-Relational Mapping) is one of the main features of the Laravel framework. It may be defined as an advanced PHP implementation of the active record pattern.\nActive record pattern is an architectural pattern which is found in software. It is responsible for keeping in-memory object data in relational databases\nEloquent ORM is also responsible for providing the internal methods at the same time when enforcing constraints on the relationship between database objects. Eloquent ORM represents database tables as classes, with their object instances tied to single table rows, while following the active record pattern.",
        "reference": "javatpoint.com"
    },
    {
        "question": "4) What is Query Builder in Laravel?",
        "answer": "Laravel's Query Builder provides more direct access to the database, alternative to the Eloquent ORM. It doesn't require SQL queries to be written directly. Instead, it offers a set of classes and methods which are capable of building queries programmatically. It also allows specific caching of the results of the executed queries.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Some of the methods that Query Builder provides are:\ncount()\nmax()\nmin()\navg()\nsum()",
        "reference": "javatpoint.com"
    },
    {
        "question": "6) What is routing?",
        "answer": "All Laravel routes are defined in route files, which are stored in the routes directory. These files are loaded by the MVC framework. The routes/web.php files define routes that are available for the web interface. Those routes are allotted as the web middleware group, which provide features such as session state and CSRF protection. The routes available in routes/api.php are stateless and are allotted as the API middleware group. For most of the applications, one should start by defining routes in routes/web.php file.\nADVERTISEMENT",
        "reference": "javatpoint.com"
    },
    {
        "question": "7) What do you understand by Reverse routing?",
        "answer": "Reverse routing in Laravel is used to generate the URL based on name or symbol. It defines a relationship between the links and, Laravel routes, and it is possible to make later changes to the routes to be automatically propagated into relevant links. When the links are generated using names of existing routes, the appropriate uniform resource identifiers (URIs) are automatically generated by Laravel. Reverse routing provides flexibility to the application and helps the developer to write cleaner codes.\nRoute Declaration:\nRoute::get('login', 'users@login');  \nA link can be created to it using reverse routing, which can be further transferred in any parameter that we have defined. If optional parameters are not supplied, they are removed automatically from the generated links.\n{{ HTML::link_to_action('users@login') }}  \nBy using it, a URL like https://abc.go.com/loginwill be created automatically.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8) How will you describe Bundles in Laravel?",
        "answer": "In Laravel, Bundles are also known as Packages. Packages are the primary way to add more functionality to Laravel. Packages can be anything, from a great way to work with dates like Carbon, or an entire BDD testing framework like Behat. Laravel also provides support for creating custom packages.\nThere are different types of packages. Some of them are stand-alone packages. This means they can work with any PHP framework. The frameworks like Carbon and Behat are examples of stand-alone packages. Other packages are intended for use with Laravel. These packages may contain routes, controllers, views, and configurations which are mainly designed to enhance a Laravel application.",
        "reference": "javatpoint.com"
    },
    {
        "question": "9) What is a composer, and how can we install Laravel by the composer?",
        "answer": "A composer is a dependency manager in PHP. It manages the dependencies which are required for a project. It means that the composer will pull in all the necessary libraries, dependencies, and manage all at a single place.\nLaravel Installation Steps:\nIf you don't have a composer on a system, download composer from https://getcomposer.org/download/\nOpen command prompt\nGo to htdocs folder\nRun the below command under C:\\xampp\\htdocs>",
        "reference": "javatpoint.com"
    },
    {
        "question": "10) Does Laravel support caching?",
        "answer": "Yes, Laravel provides support for popular caching backends like Memcached and Redis.\nBy default, Laravel is configured to use file cache driver, which is used to store the serialized or cached objects in the file system. For huge projects, it is suggested to use Memcached or Redis.",
        "reference": "javatpoint.com"
    },
    {
        "question": "11) How to clear cache in Laravel?",
        "answer": "The syntax to clear cache in Laravel is given below:\nphp artisan cache: clear\nphp artisan config: clear\nphp artisan cache: clear",
        "reference": "javatpoint.com"
    },
    {
        "question": "12) How will you explain middleware in Laravel?",
        "answer": "As the name suggests, middleware works as a middleman between request and response. Middleware is a form of HTTP requests filtering mechanism. For example, Laravel consists of middleware which verifies whether the user of the application is authenticated or not. If a user is authenticated and trying to access the dashboard then, the middleware will redirect that user to home page; otherwise, a user will be redirected to the login page.\n\nThere are two types of middleware available in Laravel:\nGlobal Middleware\nIt will run on every HTTP request of the application.\nRoute Middleware\nIt will be assigned to a specific route.\nSyntax\nphp artisan make:middlewareMiddelwareName  \n\nExample\nphp artisan make:middlewareUserMiddleware  \nNow, UserMiddleware.php file will be created in app/Http/Middleware.",
        "reference": "javatpoint.com"
    },
    {
        "question": "13) What do you understand by database migrations in Laravel? How can we use it?",
        "answer": "Migrations can be defined as version control for the database, which allows us to modify and share the application's database schema easily. Migrations are commonly paired with Laravel's schema builder to build the application's database schema easily.\nA migration file includes two methods, up() and down(). A method up() is used to add new tables, columns or indexes database and the down() method is used to reverse the operations performed by the up() method.\nWe can generate a migration and its file by using the make:migration.\nSyntax\nphp artisan make:migration blog  \nBy using it, a current date blog.php file will be created in database/migrations.",
        "reference": "javatpoint.com"
    },
    {
        "question": "14) What do you know about Service providers in Laravel?",
        "answer": "Service providers can be defined as the central place to configure all the entire Laravel applications. Applications, as well as Laravel's core services, are bootstrapped via service providers. These are powerful tools for maintaining class dependencies and performing dependency injection. Service providers also instruct Laravel to bind various components into the Laravel's Service Container.\nAn artisan command is given here which can be used to generate a service provider:\nphp artisan make: provider ClientsServiceProvider  \nAlmost, all the service providers extend the Illuminate\\Support\\ServiceProviderclass. Most of the service providers contain below-listed functions in its file:\nRegister() Function\nBoot() Function\nWithin the Register() method, one should only bind things into the service container. One should never attempt to register any event listeners, routes, or any other piece of functionality within the Register() method.",
        "reference": "javatpoint.com"
    },
    {
        "question": "15) How can we get data between two dates using Query in Laravel?",
        "answer": "We can use whereBetween() method to retrieve the data between two dates with Query.\nExample\nBlog::whereBetween('created_at', [$date1, $date2])->get();",
        "reference": "javatpoint.com"
    },
    {
        "question": "16) What do you know about CSRF token in Laravel? How can someone turn off CSRF protection for a specific route?",
        "answer": "CSRF protection stands for Cross-Site Request Forgery protection. CSRF detects unauthorized attacks on web applications by the unauthorized users of a system. The built-in CSRF plug-in is used to create CSRF tokens so that it can verify all the operations and requests sent by an active authenticated user.\nTo turn off CSRF protection for a specific route, we can add that specific URL or Route in $except variable which is present in the app\\Http\\Middleware\\VerifyCsrfToken.phpfile.\nExample\nclassVerifyCsrfToken extends BaseVerifier  \n{  \nprotected $except = [  \n          'Pass here your URL',  \n      ];  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "17) List some official packages provided by Laravel?",
        "answer": "There are some official packages provided by Laravel which are given below:\nCashier\nLaravel cashier implements an expressive, fluent interface to Stripe's and Braintree's subscription billing services. It controls almost all of the boilerplate subscription billing code you are dreading writing. Moreover, the cashier can also control coupons, subscription quantities, swapping subscription, cancellation grace periods, and even generate invoice PDFs.\nEnvoy\nLaravel Envoy is responsible for providing a clean, minimal syntax for defining frequent tasks that we run on our remote servers. Using Blade style syntax, one can quickly arrange tasks for deployment, Artisan commands, and more. Envoy only provides support for Mac and Linux.\nPassport\nLaravel is used to create API authentication to act as a breeze with the help of Laravel passport. It further provides a full Oauth2 server implementation for Laravel application in a matter of minutes. Passport is usually assembled on top of League OAuth2 server which is maintained by Alex Bilbie.\nScout\nLaravel Scout is used for providing a simple, driver-based solution for adding full-text search to the eloquent models. Using model observers, Scout automatically keeps search indexes in sync with eloquent records.\nSocialite\nLaravel Socialite is used for providing an expressive, fluent interface to OAuth authentication with Facebook, Twitter, Google, and Linkedln, etc. It controls almost all the boilerplate social authentication code that you are dreading writing.",
        "reference": "javatpoint.com"
    },
    {
        "question": "18) What do you understand by Unit testing?",
        "answer": "Unit testing is built-in testing provided as an integral part of Laravel. It consists of unit tests which detect and prevent regressions in the framework. Unit tests can be run through the available artisan command-line utility.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Laravel Facades provide static-like interface classes which are available in the application's service container. Laravel self-ships with several available facades, gives access to almost all features of Laravel. Facades also help to access a service directly from the container itself. It is described in the Illuminate\\Support\\Facades namespace. Hence, it is easy to use.\nExample\nuse Illuminate\\Support\\Facades\\Cache;  \n     Route::get('/cache', function () {  \nreturn Cache::get('PutkeyNameHere');  \n})",
        "reference": "javatpoint.com"
    },
    {
        "question": "20) How can we check the Laravel current version?",
        "answer": "One can easily check the current version of Laravel installation using the -version option of artisan command.\nPhp artisan -version",
        "reference": "javatpoint.com"
    },
    {
        "question": "21) How will you explain dd() function in Laravel?",
        "answer": "dd stands for \"Dump and Die.\" Laravel's dd() function can be defined as a helper function, which is used to dump a variable's contents to the browser and prevent the further script execution.\nExample\ndd($array);",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "PHP artisan is a command-line interface/tool provided with Laravel. It consists of several useful commands which can be helpful while building an application. There are few artisan commands given below:\nPHP artisan list\nA 'list' command is used to view a list of all available Artisan commands.\nPHP artisan help\nEvery command also contains a 'help' screen, which is used to display and describe the command's available arguments and options. To display a help screen, run 'help' command.\nPHP artisan tinker\nLaravel's artisan tinker is a repl (Read-Eval-Print Loop). Using tinker, one can write actual PHP code through command-line. One can even update or delete table records in the database.\nPHP artisan -version\nBy using this command, one can view the current version of Laravel installation.\nPHP artisan make model model_name\nThis command creates a model 'model_name.php' under the 'app' directory.\n\nPHP artisan make controller controller_name\nThis command is used to build a new controller file in app/Http/Controllers folder.",
        "reference": "javatpoint.com"
    },
    {
        "question": "23) How will you explain Events in Laravel?",
        "answer": "An event is an activity or occurrence recognized and handled by the program. Events in Laravel provide simple observer implementations which allow us to subscribe and listen for events within our application. The event classes are stored in app/Events, while their listeners are stored in app/Listeners of our application. These can be generated using Artisan console commands. A single event may contain multiple listeners that do not depend on each other.\nThere are some events examples in Laravel which are:\nA new user is registered.\nA new comment is posted.\nUser login/logout.\nA new product is added.",
        "reference": "javatpoint.com"
    },
    {
        "question": "24) What are the validations in Laravel?",
        "answer": "Validations are approaches that Laravel use to validate the incoming data within the application.\nThey are the handy way to ensure that data is in a clean and expected format before it gets entered into the database. Laravel consists of several different ways to validate the incoming data of the application. By default, the base controller class of Laravel uses a ValidatesRequests trait to validate all the incoming HTTP requests with the help of powerful validation rules.",
        "reference": "javatpoint.com"
    },
    {
        "question": "25) What do you understand by Lumen?",
        "answer": "Lumen is a PHP micro-framework built on Laravel's top components. It is created by Taylor Otwell (creator of Laravel). It is created for building Laravel based micro-services and blazing fast APIs. It is one of the fastest micro-frameworks available. Lumen is not a complete web framework like Laravel and used for creating APIs only. Therefore, most of the components, such as HTTP sessions, cookies, and templating, are excluded from Lumen. Lumen provides support for features such as logging, routing, caching queues, validation, error handling, middleware, dependency injection, controllers, blade templating, command scheduler, database abstraction, the service container, and Eloquent ORM, etc.\nOne can install Lumen using composer by running the command given below:\ncomposer create-project --prefer-distlaravel/lumen blog",
        "reference": "javatpoint.com"
    },
    {
        "question": "26) Which template engine is used by Laravel?",
        "answer": "The blade is a simple but powerful templating engine provided with Laravel. There is no restriction to use PHP codes in the views. All the blade views are compiled into simple PHP code and cached until they are modified. Blade adds effectively zero overhead to our application. Blade view files in Laravel use the .blade.phpfile extension and are saved in the resources/views directory.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "Service container in Laravel is one of the most powerful features. It is an important, powerful tool for resolving class dependencies and performing dependency injection in Laravel. It is also known as IoC container.\nDependency injection is a term which essentially means that class dependencies are \"injected\" into the class by the constructor or, in some cases,\" setter\" methods.\nAdvantages of Service Container\nIt can handle class dependencies on object creation.\nIt can combine interfaces to concrete classes.",
        "reference": "javatpoint.com"
    },
    {
        "question": "28) What do you know about Laravel Contracts?",
        "answer": "Laravel's Contracts are the set of interfaces which are responsible for defining the core functionality of services provided by the Laravel framework.",
        "reference": "javatpoint.com"
    },
    {
        "question": "29) How will you explain homestead in Laravel?",
        "answer": "Homestead is an official, pre-packaged, vagrant virtual machine which provides Laravel developers all the necessary tools to develop Laravel out of the box. It also includes Ubuntu, Gulp, Bower, and other development tools which are useful in developing full-scale web applications. It provides a development environment which can be used without the additional need to install PHP, a web server, or any other server software on the machine.",
        "reference": "javatpoint.com"
    },
    {
        "question": "30) What are the differences between Laravel and Codeigniter?",
        "answer": "Laravel Codeigniter\nLaravel is a framework with an expressive, elegant syntax. Codeigniter is a powerful framework based on PHP.\nLaravel is built for the latest version of PHP. Codeigniter is an older, more mature framework.\nLaravel is more object-oriented as compared to Codeigniter. Codeigniter is less object-oriented as compared to Laravel.\nLaravel can produce model-view-controller, active-record, observer, dependency injection, singleton, restful, fa\u00e7ade, event-driven, MTV, and HMVC design patterns. Codeigniter can produce active-record, model-view-controller, and HMVC design patterns.\nLaravel supports ORM. Codeigniter does not support ORM\nLaravel needs 1 GB memory. Codeigniter needs 256 GB memory.\nLaravel has built-in user authentication support. Codeigniter does not have in-built user authentication support.",
        "reference": "javatpoint.com"
    },
    {
        "question": "31) How can we get the user's IP address in Laravel?",
        "answer": "We can get the user's IP address using:\npublic function getUserIp(Request $request){  \n// Gettingip address of remote user  \nreturn $user_ip_address=$request->ip();  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "32) How can we use the custom table in Laravel?",
        "answer": "We can easily use custom table in Laravel by overriding protected $table property of Eloquent. Here, is the sample:\nclass User extends Eloquent{  \nprotected $table=\"my_user_table\";  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "33) What is the use of the Eloquent cursor() method in Laravel?",
        "answer": "The cursor method allows us to iterate through our database using a cursor, which will only execute a single query. While processing large amounts of data, the cursor method may be used to reduce your memory usage greatly.\nExample\nforeach (Product::where('name', 'bar')->cursor() as $flight) {  \n//make some stuff  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "34) How will you create a helper file in Laravel?",
        "answer": "We can create a helper file using composer as per the given below steps:\nMake a file \"app/helpers.php\" within the app folder.\nAdd\n\"files\": [  \n\"app/helpers.php\"  \n]  \nin the \"autoload\" variable.\nNow update composer.json with composer dump-autoload or composer update.",
        "reference": "javatpoint.com"
    },
    {
        "question": "8?",
        "answer": "PHP Version>=7.1.3\nOpenSSL PHP Extension\nPDO PHP Extension\nMbstring PHP Extension\nTokenizer PHP Extension\nXML PHP Extension\nCtype PHP Extension\nJSON PHP Extension",
        "reference": "javatpoint.com"
    },
    {
        "question": "36) In which directory controllers are kept in Laravel?",
        "answer": "Controllers are kept in app/http/Controllers directory.",
        "reference": "javatpoint.com"
    },
    {
        "question": "37) What is the use of PHP compact function?",
        "answer": "PHP compact function receives each key and tries to search a variable with that same name. If a variable is found, then it builds an associate array.",
        "reference": "javatpoint.com"
    },
    {
        "question": "x?",
        "answer": "The major differences between Laravel 4 and Laravel 5.x are given below:\nThe old app/models directory is entirely removed.\nControllers, middleware, and requests (a new class in Laravel 5.0) are now combined under the app/Http directory.\nA new app/Providers directory changes the app/start files from previous versions of Laravel of 4.x.\nApplication language files and views are moved to the resources directory.\nAll major Laravel components include interfaces that are located in the illuminate/contracts repository.\nLaravel 5.x now supports HTTP middleware. The included authentication and CSRF \"filters\" are converted to middleware.\nOne can now type-hint dependencies on controller methods.\nUser authentication, registration, and password reset controllers are now combined out of the box, including simple related views which are located at resources/views/auth.\nOne can now define events as objects instead of simply using strings.\nLaravel 5 also allows us to represent our queued jobs as simple command objects in addition to the queue job format, which was supported in Laravel 4. These commands are available inside the app/Commands display.",
        "reference": "javatpoint.com"
    },
    {
        "question": "",
        "answer": "There are few benefits of Laravel which can be considered over other PHP frameworks:\nIn Laravel, Setup and customization process is fast and easy as compared to others.\nLaravel supports multiple file systems.\nIt has pre-loaded packages like Laravel Socialite, Laravel cashier, Laravel Passport, Laravel elixir, and Laravel Scout, etc.\nIt consists of in-built Authentication System.\nIt supports Eloquent ORM (Object Relation Mapping) with PHP active record implementation.\n\"Artisan\" command-line tool for creating a database structure, code skeleton, and build their migration.",
        "reference": "javatpoint.com"
    },
    {
        "question": "40) Which types of relationships are available in Laravel Eloquent?",
        "answer": "Below are the types of relationships that Laravel Eloquent ORM supports:\nOne to One\nOne to Many\nOne to Many (Inverse)\nMany to Many\nHas Many Through\nPolymorphic Relations\nMany To Many Polymorphic Relations",
        "reference": "javatpoint.com"
    },
    {
        "question": "41) What do you understand by ORM?",
        "answer": "ORM stands for Object-Relational Mapping. It is a programming technique which is used to convert data between incompatible type systems in object-oriented programming languages.",
        "reference": "javatpoint.com"
    },
    {
        "question": "42) How can we implement a package in Laravel?",
        "answer": "We can implement a package in Laravel by:\nCreating a package folder and name it.\nCreating Composer.json file for the package.\nLoading package through main composer.json and PSR-4.\nCreating a Service Provider.\nCreating a Controller for the package.\nCreating a Routes.php file.",
        "reference": "javatpoint.com"
    },
    {
        "question": "43) What do you know about Traits in Laravel?",
        "answer": "PHP Traits is a group of methods which can be included within another class. A Trait cannot be instantiated by itself like an abstract class. Traits are generated to reduce the limitations of single inheritance in PHP. It allows a developer to reuse sets of methods freely in various independent classes living in different class hierarchies.\nExample\ntrait Sharable {  \npublic function share($item)  \n  {  \nreturn 'share this item';  \n  }  \n}  \nWe can then include this Trait within other classes like:\nclass Post {  \nuse Sharable;  \n}  \nclass Comment {  \nuse Sharable;  \n}  \nNow, if we want to create new objects out of these classes, we would find that they both have the share() method available:\n$post = new Post;  \necho $post->share(''); // 'share this item'   \n$comment = new Comment;  \necho $comment->share(''); // 'share this item'",
        "reference": "javatpoint.com"
    },
    {
        "question": "44) How can someone change the default database type in Laravel?",
        "answer": "Laravel is configured to use MySQL by default.\nTo change its default database type, edit the file config/database.php:\nSearch for 'default' =>env('DB_CONNECTION', 'mysql')\nChange it to whatever required like 'default' =>env('DB_CONNECTION', 'sqlite')\nBy using it, MySQL changes to SQLite.",
        "reference": "javatpoint.com"
    },
    {
        "question": "45) How can we use maintenance mode in Laravel 5?",
        "answer": "When an application is in maintenance mode, a custom view is displayed for all requests into the application. It makes it easy to \"disable\" application while it is updating or performing maintenance. A maintenance mode check is added in the default middleware stack for our application. When an application is in maintenance mode, a MaintenanceModeException will be thrown with a status code of 503.\nWe can enable or disable maintenance mode in Laravel 5, simply by executing the below command:\n// Enable maintenance mode  \nphp artisan down  \n  // Disable maintenance mode  \nphp artisan up",
        "reference": "javatpoint.com"
    },
    {
        "question": "46) How can we create a record in Laravel using eloquent?",
        "answer": "We need to create a new model instance if we want to create a new record in the database using Laravel eloquent. Then we are required to set attributes on the model and call the save() method.\nExample\npublic functionsaveProduct(Request $request )  \n$product = new product;  \n$product->name = $request->name;  \n$product->description = $request->name;  \n$product->save();",
        "reference": "javatpoint.com"
    },
    {
        "question": "47) How can we check the logged-in user info in Laravel?",
        "answer": "User() function is used to get the logged-in user\nExample\nif(Auth::check()){  \n$loggedIn_user=Auth::User();  \ndd($loggedIn_user);  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "48) How will you describe Fillable Attribute in a Laravel model?",
        "answer": "In eloquent ORM, $fillable attribute is an array containing all those fields of table which can be filled using mass-assignment.\nMass assignment refers to sending an array to the model to directly create a new record in Database.\nCode Source\nclass User extends Model {  \nprotected $fillable = ['name', 'email', 'mobile'];   \n// All fields inside $fillable array can be mass-assigned  \n}",
        "reference": "javatpoint.com"
    },
    {
        "question": "49) How will you explain Guarded Attribute in a Laravel model?",
        "answer": "The guarded attribute is the opposite of fillable attributes.\nIn Laravel, fillable attributes are used to specify those fields which are to be mass assigned. Guarded attributes are used to specify those fields which are not mass assignable.\nCode Source\nclass User extends Model {  \nprotected $guarded = ['role'];   \n// All fields inside the $guarded array are not mass-assignable  \n}  \nIf we want to block all the fields from being mass-assigned, we can use:\nprotected $guarded = ['*'];  \n$fillable serves as a \"white list\" whereas $guarded functions serves like a \"black list\". One should use either $fillable or $guarded.",
        "reference": "javatpoint.com"
    },
    {
        "question": "50) What do you know about Closures in Laravel?",
        "answer": "In Laravel, a Closure is an anonymous method which can be used as a callback function. It can also be used as a parameter in a function. It is possible to pass parameters into a Closure. It can be done by changing the Closure function call in the handle() method to provide parameters to it. A Closure can access the variables outside the scope of the variable.\nExample\nfunction handle(Closure $closure) {  \n    $closure();  \n}  \nhandle(function(){  \necho 'Interview Question';  \n});   \nIt is started by adding a Closure parameter to the handle() method. We can call the handle() method and pass a service as a parameter.\nBy using $closure(); in the handle() method, we tell Laravel to execute the given Closure which will then display the 'Interview Question.'",
        "reference": "javatpoint.com"
    }
]