[
    {
        "question": "1. What is an application support engineer?",
        "answer": "Application support engineers (ASEs) are IT professionals who help businesses troubleshoot software applications and systems, and ensure help desk tickets are handled promptly. Their job involves installing, maintaining, and troubleshooting software applications. It is their responsibility to keep programs up-to-date, ensure they are performing at their maximum capacity, and troubleshoot any issues that may arise. At a large enterprise, an ASE may serve as a subject matter expert for specific software stacks, while the ASE at a small or midsize business may support a small number of client-facing software applications. These professionals are knowledgeable about high-level technologies and have the ability to interpret end-user feedback and address other issues as needed. troubleshoot software applications and systems troubleshoot software applications and systems",
        "reference": "interviewbit.com"
    },
    {
        "question": "2. How can you troubleshoot the issue if the application is down?",
        "answer": "A number of factors can cause the application to go down. Here are steps that you can take to troubleshoot the issue with the application down. First, check to see if the application server is reachable. Usually, applications will stop working if the server is down. In case of a server issue, tell the server team to troubleshoot the problem.\nIf any other problem arises, examine the deployment architecture of the application.\nAlternatively, check the configuration of the application and fix the problem accordingly. First, check to see if the application server is reachable. Usually, applications will stop working if the server is down. In case of a server issue, tell the server team to troubleshoot the problem. If any other problem arises, examine the deployment architecture of the application. Alternatively, check the configuration of the application and fix the problem accordingly.",
        "reference": "interviewbit.com"
    },
    {
        "question": "3. How would you check if a directory exists in a shell script under Unix/Linux Operating Systems?",
        "answer": "The test command evaluates conditional expressions. Upon evaluating the expression parameter, the test command returns 0 (True) if the expression is True, otherwise, it returns a nonzero (False) exit value. A nonzero exit value is also returned if no parameters are specified. You can use the test command with the -d option to find out whether a directory exists. Example: If you wanted to verify the existence of the directory which is stored in a variable $mydir, you could use the following command expression:\n\nmydir= \"home/etc/Datafiles/\"\nif [ -d \"$mydir\" ] \nthen\n   echo \"$mydir exists.\" \nelse\n   echo \"Error: $mydir does not exist.\"\nfi Example: If you wanted to verify the existence of the directory which is stored in a variable $mydir, you could use the following command expression:\n\nmydir= \"home/etc/Datafiles/\"\nif [ -d \"$mydir\" ] \nthen\n   echo \"$mydir exists.\" \nelse\n   echo \"Error: $mydir does not exist.\"\nfi For directories with white/black spaces in their names, always enclose the variable \"$mydir\" in double-quotes. For example: mydir= \"home/etc/Data Files/\"\nif [ -d \"$mydir\" ] \nthen\n   echo \" '$mydir' exists.\" \nelse\n   echo \"Error: '$mydir' does not exist.\"\nfi mydir= \"home/etc/Data Files/\"\nif [ -d \"$mydir\" ] \nthen\n   echo \" '$mydir' exists.\" \nelse\n   echo \"Error: '$mydir' does not exist.\"\nfi",
        "reference": "interviewbit.com"
    },
    {
        "question": "4. What command can be used to show the current working directory?",
        "answer": "PWD stands for print working directory. The pwd command in the Linux operating system is used to print out the current working directory. Syntax: Syntax: $ pwd [-options] $ pwd [-options] pwd has options that specify how it should behave. Some of the options are as follows:  -L (Logical): This displays the logical path of the current working directory.\n-P (Physical): This displays the physical or actual path of the current working directory.\n--Help: This displays a help message and then exits. -L (Logical): This displays the logical path of the current working directory. -P (Physical): This displays the physical or actual path of the current working directory. --Help: This displays a help message and then exits. Example: Example: Command: $ pwd $ pwd Ouput: gourav@scaleracademy:~$ pwd\n/home/gourav gourav@scaleracademy:~$ pwd\n/home/gourav",
        "reference": "interviewbit.com"
    },
    {
        "question": "5. Which command is useful to find current user information in Linux/Unix?",
        "answer": "To find out which users are currently logged in to your server or system, use the who command. The who command provides the following information: Last system boot time\nCurrent system run-level\nList of users logged in, etc. Last system boot time Current system run-level List of users logged in, etc. Syntax: Syntax: $ who [options] [filename] $ who [options] [filename] Examples: Examples: No Option: If no option is specified, the who command displays the following information for each user currently logged on to the system:\nThe user's login name\nThe user's login time\nThe user's remote hostname\nTerminal line numbers No Option: If no option is specified, the who command displays the following information for each user currently logged on to the system:\nThe user's login name\nThe user's login time\nThe user's remote hostname\nTerminal line numbers No Option: The user's login name\nThe user's login time\nThe user's remote hostname\nTerminal line numbers The user's login name The user's login time The user's remote hostname Terminal line numbers Command Command $ who $ who Output Output user@host-0231:~$ who\ngourav   pts/0        2021-03-10  17:04      (:0.0)\nsonia    pts/1        2021-03-10  18:23      (:0.0) user@host-0231:~$ who\ngourav   pts/0        2021-03-10  17:04      (:0.0)\nsonia    pts/1        2021-03-10  18:23      (:0.0) Option H: This option displays the headers of columns displayed by the who command. Option H: This option displays the headers of columns displayed by the who command. Option H Command Command $ who -H $ who -H Output Output user@host-0231:~$ who -H\nNAME     LINE         TIME                    COMMENT\ngourav   pts/0        2021-03-10  17:04       (:0.0) user@host-0231:~$ who -H\nNAME     LINE         TIME                    COMMENT\ngourav   pts/0        2021-03-10  17:04       (:0.0) Option whoami: This displays the actual username of the system. Option whoami: This displays the actual username of the system. Option whoami: Command Command $ whoami $ whoami Output Output gkuser@host-0231:~$ whoami\ngkuser gkuser@host-0231:~$ whoami\ngkuser",
        "reference": "interviewbit.com"
    },
    {
        "question": "6. State the difference between varchar and varchar2 datatypes.",
        "answer": "Varchar is a variable-length character string. Both Varchar2 and Varchar are data types for storing character strings. VarChar VarChar2\nVarchar is able to store up to 2000 bytes of character data. Varchar2 is able to store up to 4000 bytes of character data.\nThis occupies space for null values as well. This doesn\u2019t occupy the space for null values.\nThe Varchar data type adheres to ANSI (American National Standards Institute ) standards. The Varchar2 data type adheres to Oracle standards.\nIt allocates a fixed size of data irrespective of the input. For instance, if we define varchar (10) and enter just 5 characters, then varchar allocates space for the full 10 characters, not for 5 characters. It allocates variable sizes of data based on input. For instance, if we define varchar2 (10), and enter just 5 characters, then varchar2 only allocates space for only 5 characters, not for the full 10 characters.\nThe extra spaces in varchar data are padded to the right. Varchar2 will truncate extra spaces.\nIn accordance with the ANSI standard, it distinguishes between NULL and empty strings. It does not distinguish between a NULL and an empty string. Both are treated as the same. VarChar VarChar2\nVarchar is able to store up to 2000 bytes of character data. Varchar2 is able to store up to 4000 bytes of character data.\nThis occupies space for null values as well. This doesn\u2019t occupy the space for null values.\nThe Varchar data type adheres to ANSI (American National Standards Institute ) standards. The Varchar2 data type adheres to Oracle standards.\nIt allocates a fixed size of data irrespective of the input. For instance, if we define varchar (10) and enter just 5 characters, then varchar allocates space for the full 10 characters, not for 5 characters. It allocates variable sizes of data based on input. For instance, if we define varchar2 (10), and enter just 5 characters, then varchar2 only allocates space for only 5 characters, not for the full 10 characters.\nThe extra spaces in varchar data are padded to the right. Varchar2 will truncate extra spaces.\nIn accordance with the ANSI standard, it distinguishes between NULL and empty strings. It does not distinguish between a NULL and an empty string. Both are treated as the same. VarChar VarChar2 VarChar VarChar2 VarChar VarChar2 Varchar is able to store up to 2000 bytes of character data. Varchar2 is able to store up to 4000 bytes of character data.\nThis occupies space for null values as well. This doesn\u2019t occupy the space for null values.\nThe Varchar data type adheres to ANSI (American National Standards Institute ) standards. The Varchar2 data type adheres to Oracle standards.\nIt allocates a fixed size of data irrespective of the input. For instance, if we define varchar (10) and enter just 5 characters, then varchar allocates space for the full 10 characters, not for 5 characters. It allocates variable sizes of data based on input. For instance, if we define varchar2 (10), and enter just 5 characters, then varchar2 only allocates space for only 5 characters, not for the full 10 characters.\nThe extra spaces in varchar data are padded to the right. Varchar2 will truncate extra spaces.\nIn accordance with the ANSI standard, it distinguishes between NULL and empty strings. It does not distinguish between a NULL and an empty string. Both are treated as the same. Varchar is able to store up to 2000 bytes of character data. Varchar2 is able to store up to 4000 bytes of character data. Varchar is able to store up to 2000 bytes of character data. Varchar2 is able to store up to 4000 bytes of character data. This occupies space for null values as well. This doesn\u2019t occupy the space for null values. This occupies space for null values as well. This doesn\u2019t occupy the space for null values. The Varchar data type adheres to ANSI (American National Standards Institute ) standards. The Varchar2 data type adheres to Oracle standards. The Varchar data type adheres to ANSI (American National Standards Institute ) standards. The Varchar2 data type adheres to Oracle standards. It allocates a fixed size of data irrespective of the input. For instance, if we define varchar (10) and enter just 5 characters, then varchar allocates space for the full 10 characters, not for 5 characters. It allocates variable sizes of data based on input. For instance, if we define varchar2 (10), and enter just 5 characters, then varchar2 only allocates space for only 5 characters, not for the full 10 characters. It allocates a fixed size of data irrespective of the input. For instance, if we define varchar (10) and enter just 5 characters, then varchar allocates space for the full 10 characters, not for 5 characters. It allocates variable sizes of data based on input. For instance, if we define varchar2 (10), and enter just 5 characters, then varchar2 only allocates space for only 5 characters, not for the full 10 characters. The extra spaces in varchar data are padded to the right. Varchar2 will truncate extra spaces. The extra spaces in varchar data are padded to the right. Varchar2 will truncate extra spaces. In accordance with the ANSI standard, it distinguishes between NULL and empty strings. It does not distinguish between a NULL and an empty string. Both are treated as the same. In accordance with the ANSI standard, it distinguishes between NULL and empty strings. It does not distinguish between a NULL and an empty string. Both are treated as the same.",
        "reference": "interviewbit.com"
    },
    {
        "question": "7. How do you fix or troubleshoot a crashing application?",
        "answer": "Application crashes are among the most common scenarios encountered by technical support engineers. An application crash is usually caused by unhandled exceptions and different looping structures in the application. Several ways can be taken to resolve this problem, and the following are some of the most common ones. Try checking for an Unhandled exception. In case of unhandled exceptions, the application support engineer should add the error code and the error description for the same.\nMake sure you perform a full stack trace for unhandled exceptions to find out what is happening at the application end.\nStart the Unix server again after gaining permission and see if the application works. Try checking for an Unhandled exception. In case of unhandled exceptions, the application support engineer should add the error code and the error description for the same. Make sure you perform a full stack trace for unhandled exceptions to find out what is happening at the application end. Start the Unix server again after gaining permission and see if the application works.",
        "reference": "interviewbit.com"
    },
    {
        "question": "8. What challenges do application support professionals need to deal with?",
        "answer": "One of the most common situations technical support engineers encounter is application crashes. Unhandled exceptions are the main cause of application crashes. Also, it often happens that frustrated customers use abusive language to vent their frustrations, and in such situations, the application support engineer should remain calm and show empathy for the customer. Patient and calm are two of the most important qualities of an application support engineer.",
        "reference": "interviewbit.com"
    },
    {
        "question": "9. As an application support engineer, what is the most important thing that you need to focus on?",
        "answer": "One of the main responsibilities of the application support engineer is to ensure that the system is running smoothly and that users can carry out their everyday tasks. Furthermore, they focus on data integrity as well, since the only way to make an application system healthy is to have accurate and reliable data.",
        "reference": "interviewbit.com"
    },
    {
        "question": "10. What kind of strategies and mindset does this role require?",
        "answer": "In the world of application support, teamwork is the most important strategy. The problem arises abruptly in most applications, so almost every member of the IT department needs to work together for a quick solution. Thus, the application support engineer needs to be capable of working with other professionals. As for mindset, someone who is passionate about helping others should be a good fit for this role. Application support usually entails answering queries and assisting people with their application problems.",
        "reference": "interviewbit.com"
    },
    {
        "question": "11. What skills are required for an application support engineer?",
        "answer": "An Application support engineer must possess both human and technical skills as follows: Human Skills: Application support engineers need good human support skills as they interact with various stakeholders (like top management, departments, and customers). These skills are among the most valued by employers: Human Skills: Writing and verbal communication\nLeadership\nCustomer service\nMulti-tasking]\nDiagnostics\nCritical thinking\nPatience and calmness.\nRelationship management Writing and verbal communication Leadership Customer service Multi-tasking] Diagnostics Critical thinking Patience and calmness. Relationship management Technical Skills: An application support engineer must possess the following technical skills: Technical Skills Programming skills in front-end and back-end languages such as C++, Javascript, Python, and Ruby.\nKnowledge of Structured Query Language (SQL).\nCapable of managing code migration, documenting configuration changes, and monitoring performance.\nUp-to-date knowledge of software coding and scripting.\nFamiliarity with standard IT hardware and software.\nSupports internal departments and web-based clients with exceptional front-end skills.\nExtensive expertise in diagnosing and fixing application errors.\\\nExperience with Advanced Encryption Standards (AES).\nAdaptable to new technologies when designing applications.\nKnowledge of tools for tracking and managing issues. Programming skills in front-end and back-end languages such as C++, Javascript, Python, and Ruby. Knowledge of Structured Query Language (SQL). Capable of managing code migration, documenting configuration changes, and monitoring performance. Up-to-date knowledge of software coding and scripting. Familiarity with standard IT hardware and software. Supports internal departments and web-based clients with exceptional front-end skills. Extensive expertise in diagnosing and fixing application errors.\\ Experience with Advanced Encryption Standards (AES). Adaptable to new technologies when designing applications. Knowledge of tools for tracking and managing issues.",
        "reference": "interviewbit.com"
    },
    {
        "question": "12. What is the role of an application support engineer or specialist?",
        "answer": "Depending on the industry or organization, applications support engineers may have different duties and responsibilities. Application support engineers often monitor the system or applications, check messages, and improve existing procedures. Some of the other duties of an application support engineer include: These professionals are well versed in how systems function and have the skills to troubleshoot systems and applications and handle technical issues. If they are unable to resolve the issue, they are required to alert their superiors, such as the senior engineer, for assistance.\nApplication support engineers act as a liaison between customers and their complaints. These professionals assess customer problems in order to pinpoint specific problems the organization should address.\nTheir job is to synchronize operations between various departments within the company.\nThey prepare maintenance plans and upgrade schedules for the organization's systems.\nDespite their busy schedules, they maintain good professional relationships with engineering and customer service departments.\nRegularly, they prepare and install tools needed for the proper operation of software applications and systems.\nUnder the guidance of senior engineers, they organize and execute projects ranging from small to medium-sized and provide support to all processes. These professionals are well versed in how systems function and have the skills to troubleshoot systems and applications and handle technical issues. If they are unable to resolve the issue, they are required to alert their superiors, such as the senior engineer, for assistance. Application support engineers act as a liaison between customers and their complaints. These professionals assess customer problems in order to pinpoint specific problems the organization should address. Their job is to synchronize operations between various departments within the company. They prepare maintenance plans and upgrade schedules for the organization's systems. Despite their busy schedules, they maintain good professional relationships with engineering and customer service departments. Regularly, they prepare and install tools needed for the proper operation of software applications and systems. Under the guidance of senior engineers, they organize and execute projects ranging from small to medium-sized and provide support to all processes.",
        "reference": "interviewbit.com"
    },
    {
        "question": "1. How do you represent comments in Oracle?",
        "answer": "In a SQL statement, a comment can be inserted between keywords, parameters, or punctuation marks. To add a comment to your SQL statement in Oracle/PLSQL, you have two options. Single Line comment (--): In your SQL statement, you can begin the comment with two hyphens (--) at the end of the line and proceed with the comment text. Comment text cannot go beyond one line. The comment must be terminated with a line break.\nSyntax: Single Line comment (--): In your SQL statement, you can begin the comment with two hyphens (--) at the end of the line and proceed with the comment text. Comment text cannot go beyond one line. The comment must be terminated with a line break.\nSyntax: Single Line comment (--): Syntax: Syntax: Syntax: -- CommentText -- CommentText Multi-line comment (/* */): In your SQL statement, you can begin the comment with a slash and an asterisk (/*) at the end of the line and proceed with the comment text. Comment text may span multiple lines, i.e., it can go beyond one line. The comment must be terminated with an asterisk and a slash (*/). There is no need to separate the opening and closing characters with a space or a line break.\nSyntax: Multi-line comment (/* */): In your SQL statement, you can begin the comment with a slash and an asterisk (/*) at the end of the line and proceed with the comment text. Comment text may span multiple lines, i.e., it can go beyond one line. The comment must be terminated with an asterisk and a slash (*/). There is no need to separate the opening and closing characters with a space or a line break.\nSyntax: Multi-line comment (/* */): Syntax: Syntax: Syntax: /*  Comment text \n   ...   */ /*  Comment text \n   ...   */",
        "reference": "interviewbit.com"
    },
    {
        "question": "2. What is the best way to retrieve matching rows from two tables?",
        "answer": "The best way to retrieve matching rows from two tables is using an inner join. It will return records that have the same value in both tables. Syntax: Syntax: SELECT columns \nFROM table1 \nINNER JOIN table2\nON table1.column = table2.column; SELECT columns \nFROM table1 \nINNER JOIN table2\nON table1.column = table2.column; SELECT FROM INNER JOIN ON = Example: Let's take two tables called InterviewBit and Scaler. The first table, called InterviewBit, contains the following data. Example: Employee_Id Name DateofJoining Profile\n01 Gourav 2 December 2021 Content Writer\n02 Ayush 19 October 2020 Digital Content Strategies\n03 Ritesh 25 August 2020 Marketing Manager\n04 Sonal 12 June 2019 Software Developer\n05 Adil 1 June 2022 Lead Content Strategist Employee_Id Name DateofJoining Profile\n01 Gourav 2 December 2021 Content Writer\n02 Ayush 19 October 2020 Digital Content Strategies\n03 Ritesh 25 August 2020 Marketing Manager\n04 Sonal 12 June 2019 Software Developer\n05 Adil 1 June 2022 Lead Content Strategist Employee_Id Name DateofJoining Profile Employee_Id Name DateofJoining Profile Employee_Id Name DateofJoining Profile 01 Gourav 2 December 2021 Content Writer\n02 Ayush 19 October 2020 Digital Content Strategies\n03 Ritesh 25 August 2020 Marketing Manager\n04 Sonal 12 June 2019 Software Developer\n05 Adil 1 June 2022 Lead Content Strategist 01 Gourav 2 December 2021 Content Writer 01 Gourav 2 December 2021 Content Writer 02 Ayush 19 October 2020 Digital Content Strategies 02 Ayush 19 October 2020 Digital Content Strategies 03 Ritesh 25 August 2020 Marketing Manager 03 Ritesh 25 August 2020 Marketing Manager 04 Sonal 12 June 2019 Software Developer 04 Sonal 12 June 2019 Software Developer 05 Adil 1 June 2022 Lead Content Strategist 05 Adil 1 June 2022 Lead Content Strategist The second table, called Scaler, contains the following data. Employee_Id  Contact_No Age\n01 9467463421 23\n03 7465463071 24\n04 9300973435 25\n05 8088204211 22\n06 7035208533 25 Employee_Id  Contact_No Age\n01 9467463421 23\n03 7465463071 24\n04 9300973435 25\n05 8088204211 22\n06 7035208533 25 Employee_Id  Contact_No Age Employee_Id  Contact_No Age Employee_Id Contact_No Age 01 9467463421 23\n03 7465463071 24\n04 9300973435 25\n05 8088204211 22\n06 7035208533 25 01 9467463421 23 01 9467463421 23 03 7465463071 24 03 7465463071 24 04 9300973435 25 04 9300973435 25 05 8088204211 22 05 8088204211 22 06 7035208533 25 06 7035208533 25 SQL Statement: SQL Statement: SELECT InterviewBit.Employee-Id, InterviewBit.name, Scaler.Contact_No\nFROM InterviewBit INNER JOIN Scaler\nON InterviewBit.Employee-Id=Scaler.Employee-Id; SELECT InterviewBit.Employee-Id, InterviewBit.name, Scaler.Contact_No\nFROM InterviewBit INNER JOIN Scaler\nON InterviewBit.Employee-Id=Scaler.Employee-Id; SELECT - FROM INNER JOIN ON - = - Output: Output: Employee_Id Name Contact_No\n01 Gourav 9467463421\n03 Ritesh 7465463071\n04 Sonal 9300973435\n05 Adil 8088204211 Employee_Id Name Contact_No\n01 Gourav 9467463421\n03 Ritesh 7465463071\n04 Sonal 9300973435\n05 Adil 8088204211 Employee_Id Name Contact_No Employee_Id Name Contact_No Employee_Id Name Contact_No 01 Gourav 9467463421\n03 Ritesh 7465463071\n04 Sonal 9300973435\n05 Adil 8088204211 01 Gourav 9467463421 01 Gourav 9467463421 03 Ritesh 7465463071 03 Ritesh 7465463071 04 Sonal 9300973435 04 Sonal 9300973435 05 Adil 8088204211 05 Adil 8088204211 As seen in the output, the SQL query returns all rows from the InterviewBit and Scaler tables where Employee_Id values match in both tables. Conclusion Application Support Engineers are technical professionals responsible for resolving software application errors within an organization and ensuring optimal application performance at the company. In particular, for businesses with a digital presence, application support engineers are an essential component of customer service and customer service has a tremendous impact on a business's reputation. Companies are therefore eager to hire qualified applications engineers and analysts to join their IT and customer service departments. Application Support Interview Questions, like those listed above, are quick and insightful, and they provide a wealth of information that is vital to the interview process. Hopefully, we have clarified your doubts and guided you in the right direction. Wishing you good luck. Additional Interview Preparation Resources Additional Interview Preparation Resources Java Interview Questions\nSQL Interview Questions\nAmazon Interview Questions\nZoho Interview Questions\nMore Technical Interview Questions Java Interview Questions Java Interview Questions SQL Interview Questions SQL Interview Questions Amazon Interview Questions Amazon Interview Questions Zoho Interview Questions Zoho Interview Questions More Technical Interview Questions More Technical Interview Questions",
        "reference": "interviewbit.com"
    },
    {
        "question": "3. What do you mean by SQL join statements?",
        "answer": "In SQL, join statements combine data from multiple tables based on a common field between them. Any time there are two or more tables listed in a SQL statement, a SQL JOIN is performed. Among the different types of joins are: INNER JOIN: It will return records that have the same value in both tables. In this case, it would return records where table1 and table2 intersect. Below is a visual representation of the same. INNER JOIN: It will return records that have the same value in both tables. In this case, it would return records where table1 and table2 intersect. Below is a visual representation of the same. INNER JOIN:   LEFT (Outer) JOIN: It will return all records from the left-hand table, along with matched records from the right-hand table. It would return all records from table1 (left-hand table) and only those records from table2 (right-hand table) that intersect with table1. Below is a visual representation of the same. LEFT (Outer) JOIN: It will return all records from the left-hand table, along with matched records from the right-hand table. It would return all records from table1 (left-hand table) and only those records from table2 (right-hand table) that intersect with table1. Below is a visual representation of the same. LEFT (Outer) JOIN:   RIGHT (Outer) JOIN: It will return all records from the right-hand table, along with matched records from the left-hand table.  It would return all records from table2 (right-hand table) and only those records from table1 (left-hand table) that intersect with table2. Below is a visual representation of the same. RIGHT (Outer) JOIN: It will return all records from the right-hand table, along with matched records from the left-hand table.  It would return all records from table2 (right-hand table) and only those records from table1 (left-hand table) that intersect with table2. Below is a visual representation of the same. RIGHT (Outer) JOIN:   FULL (Outer) JOIN: It will return all records from both left-hand and right-hand tables. It would return all rows from both the left-hand table (table1) and right-hand table (table2) with NULL values in place wherever the join condition is not satisfied. Below is a visual representation of the same. FULL (Outer) JOIN: It will return all records from both left-hand and right-hand tables. It would return all rows from both the left-hand table (table1) and right-hand table (table2) with NULL values in place wherever the join condition is not satisfied. Below is a visual representation of the same. FULL (Outer) JOIN:  ",
        "reference": "interviewbit.com"
    },
    {
        "question": "4. Is there a way to resolve the P1 issue? How should we proceed if two P1 issues occur at the same time?",
        "answer": "The P1 status indicates a complete outage / significant traffic impact. It involves any failure of IT services that will lead to immediate and severe consequences in terms of corporate image, financial losses, or loss of accreditation. For example, an entire website might be down or a critical infrastructure component may be down or its performance has been impacted. It is always critical to have the names and contacts of dependent services accessible so that they may be contacted right away in case of a P1 emergency. To rectify any issues, you must examine all configurations, and databases, and troubleshoot them appropriately. If two P1 issues occur at the same time, you must prioritize them. In that case, you should inform higher management and request quick resource allocation if both issues have the potential to affect business operations.",
        "reference": "interviewbit.com"
    },
    {
        "question": "5. What steps did you take to handle the difficult customer requests?",
        "answer": "Support analysts are primarily responsible for prioritizing work based on business impact. It's important to give the highest priority to customer requests that have a significant impact on our business. We should resolve the issue first, and then log it into the issue management system.",
        "reference": "interviewbit.com"
    },
    {
        "question": "6. What was your approach to handling an urgent issue when the customer requested it? How were you able to manage it in time to resolve it?",
        "answer": "In any organization, \"the customer is king.\" That means some time must be allocated to dealing with customer issues. You never know what the customer might ask you. It might be an ad-hoc issue. Nevertheless, we should resolve the issue first, and then log it into the issue management system. It will show your efforts and time spent on customer issues.",
        "reference": "interviewbit.com"
    },
    {
        "question": "7. What command is used to list files or folders in alphabetical order in UNIX?",
        "answer": "By using the ls command, you can list down the current directory\u2019s content like files and folders.\n\nSyntax:   Syntax: ls [OPTIONS] [FILES] ls [OPTIONS] [FILES] With no arguments and no options, ls displays a list of all files in the current working directory: Examples: Examples: List the names of the files in your current directory alphabetically\nCommand List the names of the files in your current directory alphabetically Command Command gourav@localhost:~$ ls gourav@localhost:~$ ls Output Output cache  db  empty  games  lock  log  mail  opt   spool  tmp cache  db  empty  games  lock  log  mail  opt   spool  tmp Files are arranged in alphabetical order across as many columns as your terminal can accommodate. To view all information about a files/directory\nCommand To view all information about a files/directory Command Command gourav@localhost:~$ ls -l gourav@localhost:~$ ls -l Output Output drwxr-xr-x     6 linuxer    users      1824 Jun  9 16:46 sabon\n-rw-------     1 linuxer    users      1064 Oct 28 14:35 music\n-rw-------     6 linuxer    users      5119 Apr 28 16:00 splus2\n-rw-r--r--     3 linuxer    users      9853 Dec 27 11:14 ssh_known\n-rw-r--r--     1 linuxer    users      4231 Apr 21 15:23 swlist.out\n-rw-r--r--     1 linuxer    users      94031 Sep 14 16:07 tarnti.zip drwxr-xr-x     6 linuxer    users      1824 Jun  9 16:46 sabon\n-rw-------     1 linuxer    users      1064 Oct 28 14:35 music\n-rw-------     6 linuxer    users      5119 Apr 28 16:00 splus2\n-rw-r--r--     3 linuxer    users      9853 Dec 27 11:14 ssh_known\n-rw-r--r--     1 linuxer    users      4231 Apr 21 15:23 swlist.out\n-rw-r--r--     1 linuxer    users      94031 Sep 14 16:07 tarnti.zip",
        "reference": "interviewbit.com"
    },
    {
        "question": "8. In Unix, how do you switch from one user account to another?",
        "answer": "Switching between user accounts is accomplished by using the SU (Substitute User or Superuser) command. With the su command, you can execute functions or commands with another user's privileges or as a different user, by default the root user. When running su, you must enter the password of the user you want to switch to. Syntax: Syntax su [OPTIONS] [USER [ARGUMENT...]] su [OPTIONS] [USER [ARGUMENT...]] Without any options, su will run an interactive shell as a superuser (root). Example: Example: gourav@localhost:~$ su madhu\nPassword: m1234\nmadhu@localhost:~$ gourav@localhost:~$ su madhu\nPassword: m1234\nmadhu@localhost:~$ Upon execution of su, it will ask for the password of the target user. If authenticated, it will grant access to the target user's account, as well as any files and directories the target user has access to.",
        "reference": "interviewbit.com"
    },
    {
        "question": "9. Can you explain (.) and (..) in Unix?",
        "answer": "Current directory (.): In Unix, (.) denotes the current directory. Using the command \"cd .\" (with a space between cd and dot), you will remain where you are.\nParent directory (..): In Unix, (..) denotes the parent of the current directory. Using the command \"cd..\" or \"cd ..\" (with a space), you move the directory back to one directory. This is also known as moving to the parent directory. For instance, if you're in the /home/gourav directory, using the \"cd..\" command takes you back to the home directory. Current directory (.): In Unix, (.) denotes the current directory. Using the command \"cd .\" (with a space between cd and dot), you will remain where you are. Current directory (.) Parent directory (..): In Unix, (..) denotes the parent of the current directory. Using the command \"cd..\" or \"cd ..\" (with a space), you move the directory back to one directory. This is also known as moving to the parent directory. For instance, if you're in the /home/gourav directory, using the \"cd..\" command takes you back to the home directory. Parent directory (..) /home/gourav gourav@scaleracademy:~$ pwd\n/home/gourav/local\ngourav@scaleracademy:~$ cd ..\n/home/gourav gourav@scaleracademy:~$ pwd\n/home/gourav/local\ngourav@scaleracademy:~$ cd ..\n/home/gourav",
        "reference": "interviewbit.com"
    },
    {
        "question": "10. In Unix, can we delete multiple files at the same time? If yes, then how?",
        "answer": "Yes, we can delete multiple files at once in Unix. The rm command (short for remove) is a command used in Unix and Unix-like systems to delete or remove files, directories, or symbolic links from file systems. Like other commands, rm has options that specify how it should behave. Some of the options are as follows: rm -i: It asks for confirmation before deleting a file.\nrm -f: It ignores non-existing files and overrides any confirmation prompts.\nrm -r: It removes or deletes directories along with their contents recursively. rm -i: It asks for confirmation before deleting a file. rm -i rm -f: It ignores non-existing files and overrides any confirmation prompts. rm -f rm -r: It removes or deletes directories along with their contents recursively. rm -r: Syntax (to delete multiple files at once): Syntax (to delete multiple files at once): $ rm filename1 filename2 filename3 $ rm filename1 filename2 filename3",
        "reference": "interviewbit.com"
    },
    {
        "question": "11. Explain why Unix is important in an application support job.",
        "answer": "Among the most commonly used and most secure operating systems in application development and deployment is Unix. 90% of applications run on UNIX servers because of their security. It is simple, stable, has better scalability, supports multi-user and multi-tasking functionality, as well as being used in all forms of computing systems such as desktops, laptops, and servers. Therefore, having a good knowledge of Unix would be helpful.",
        "reference": "interviewbit.com"
    },
    {
        "question": "12. What tools do you use to successfully perform your duties as an Application Support Specialist?",
        "answer": "In application support, there are several tools for tracking and managing issues, and therefore, an application support engineer must have extensive knowledge of these tools. These tools may include: IT management software\nComplex computer systems\nTelecommunications systems\nPhotocopier machine and printers IT management software Complex computer systems Telecommunications systems Photocopier machine and printers",
        "reference": "interviewbit.com"
    },
    {
        "question": "13. Describe your daily routine as an application support engineer.",
        "answer": "Day-to-day responsibilities of an application support engineer include: Attend scheduled meetings with other IT professionals so they can discuss certain issues that have arisen and those that need to be addressed. \nManaging application issues and fixing system problems. \nResolve technical issues as soon as possible. \nTrack issue triage as troubleshooting progresses.\nProvide training to different teams within the organization.\nPrepare and maintain service reports. Attend scheduled meetings with other IT professionals so they can discuss certain issues that have arisen and those that need to be addressed. Managing application issues and fixing system problems. Resolve technical issues as soon as possible. Track issue triage as troubleshooting progresses. Provide training to different teams within the organization. Prepare and maintain service reports.",
        "reference": "interviewbit.com"
    },
    {
        "question": "1. What is included in application support?",
        "answer": "The application support service ensures that a business's operational processes are running smoothly and allows users to manage their business activities. In most cases, application support offers both human and technical support. Human support is concerned with helping end-users understand how to use the application or system and help resolve any issues with the application or system whereas technical support relates to maintaining apps, software, and other technical systems of the organization.",
        "reference": "interviewbit.com"
    },
    {
        "question": "2. What is the salary of an Application Support Engineer in India?",
        "answer": "In India, Application Support Engineers earn between \u20b9 2.0 Lakhs and \u20b9 9.3 Lakhs per year, with an average of \u20b9 3.8 Lakhs.",
        "reference": "interviewbit.com"
    },
    {
        "question": "3. What are the roles and responsibilities of application support engineers?",
        "answer": "Application support engineers have the following responsibilities: Provide technical support for enterprise-level applications.\nIdentify, diagnose, and troubleshoot possible solutions to a problem.\nLiaise with team members to resolve complex applications and system issues.\nProactively monitor and handle all alerts related to system and application procedures. Provide technical support for enterprise-level applications. Identify, diagnose, and troubleshoot possible solutions to a problem. Liaise with team members to resolve complex applications and system issues. Proactively monitor and handle all alerts related to system and application procedures.",
        "reference": "interviewbit.com"
    },
    {
        "question": "4. What does an application support engineer do?",
        "answer": "Applications support engineers are responsible for installing and maintaining software applications to streamline business processes. Their responsibilities include optimizing the performance of software applications, installing updates, as well as diagnosing and troubleshooting problems.",
        "reference": "interviewbit.com"
    }
]