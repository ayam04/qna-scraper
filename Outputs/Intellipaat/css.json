[
    {
        "question": "1. What is CSS?",
        "answer": "Cascading Style Sheet (CSS) is a style sheet language that is used to determine how the elements or content in a page will look or be displayed. It helps build a consistent look and feel for all web pages.\nCSS allows the separation of the content from the presentation, thus providing more flexibility and control over the look of the website.\nCSS3, the third version of the CSS standard, incorporates CSS2 standard with some improvements such as the inclusion of divisions of standards into different modules. It makes CSS3 easier to learn and understand.",
        "reference": "intellipaat.com"
    },
    {
        "question": "2. What is an external style sheet? How would you link to it?",
        "answer": "The external style sheet is the sheet that comprises style information and can be connected with one or more HTML documents. With the help of an external style sheet, the entire website can be formatted and styled just by editing one single file. The file is connected with HTML documents with the help of the LINK element, which resides inside the HEAD element.",
        "reference": "intellipaat.com"
    },
    {
        "question": "3. What are the advantages and disadvantages of using external style sheets?",
        "answer": "The advantages of using external style sheets are as follows:\nStyles of numerous documents can be organized from one single file.\nClasses can be made for use on numerous HTML element types in many forms of the site.\nIn complex contexts, methods such as selector and grouping can be implemented to apply styles.\nThe disadvantages of using external style sheets are as follows:\nAn extra download is necessary to import style information for each file.\nThe execution of the file may be deferred till the external style sheet is loaded.\nWhile implementing style sheets, we need to test web pages with multiple browsers in order to check compatibility issues.\nClick here to learn more about CSS, in this Web development master\u2019s program.",
        "reference": "intellipaat.com"
    },
    {
        "question": "4. What are the advantages and disadvantages of embedded style sheets?",
        "answer": "The advantages of embedded style sheets are as follows:\nIn embedded style sheets, it is possible to generate classes for use on multiple tag types in a document.\nIn embedded style sheets, in comparison to external style sheets, no extra download is compulsory to import the information.\nThe disadvantage of embedded style sheets are as follows:\nIn embedded style sheets, controlling the styles for multiple files from one file is not possible.\nAlso, check out our blog on Webkit in CSS",
        "reference": "intellipaat.com"
    },
    {
        "question": "5. What is a CSS selector?",
        "answer": "A CSS selector is the portion of a CSS set that chooses the content that requires a specific style. A CSS selector is also referred to as a connection between the stylesheet and HTML files. A CSS selector permits you to choose and operate HTML elements. CSS selectors are used to selecting or find HTML elements created on their id, class, type, etc.\nAlso, check out the blog on CSS selector in Selenium.",
        "reference": "intellipaat.com"
    },
    {
        "question": "6. What is tweening?",
        "answer": "Also known as in-betweening, tweening is the process of creating intermediary frames between two images to provide the appearance that the first image develops efficiently into the second image. It is a key process that is used in all types of animations. Refined animation software permits you to find particular objects in an image and describe how they will be able to move and change throughout the tweening process.",
        "reference": "intellipaat.com"
    },
    {
        "question": "7. What is the box model in CSS? Which CSS properties are a part of it?",
        "answer": "A rectangle box is wrapped around every HTML element. The CSS box model is used to determine the height and width of the rectangular box. If it is not mentioned, then default values and content are added inside. The CSS box also includes borders, margins, and padding.\n\nContent: It refers to the actual content of the box where the text or image is placed.\nPadding: It is the area surrounding the content, and it is the space between the border and the content.\nBorder: It is the area that surrounds the padding.\nMargin: It refers to the area that surrounds the border.",
        "reference": "intellipaat.com"
    },
    {
        "question": "8. How can you include CSS in a web page?",
        "answer": "There are different ways by which you can include a CSS in a web page:\nExternal Style Sheet: An external file is linked to the HTML document using the link tag.\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyles.css\" />\nEmbed CSS with a Style Tag: Another way to include CSS in a web page is by having a set of CSS styles included within the HTML page.\n<style type=\"text/css\">\n/*Add style rules here*/\n</style>\nThe CSS rules have to be added between the opening and closing style tags. The CSS is written exactly like the standalone style-sheet files.\nInline Styles to HTML Elements: Style can be added directly to the HTML element with the help of a style tag.\n<h2 style=\"color:red;background:black\">Inline Style</h2>\nImport a Style-sheet File: Another way to add CSS is by using the @import rule. Here, an external file is imported to another CSS file. This is for adding a new CSS file within the CSS itself.\nimport \"path/to/style.css\";\nGet 100% Hike!\nMaster Most in Demand Skills Now !\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy",
        "reference": "intellipaat.com"
    },
    {
        "question": "9. What are the different types of selectors in CSS?",
        "answer": "A CSS selector in a CSS rule set helps select the content that needs to be styled. The different types of selectors are listed below:\nUniversal Selector: The universal selector selects all elements on a page. The provided styles will get applied to all the elements on the page.\n* {\n  color: \"green\";\n  font-size: 20px;\n  line-height: 25px;\n}\nElement Type Selector: The element type selector selects one or more HTML elements of the same name. In the example below, the provided styles will be applied to all the ul elements on the page.\nul {\n  line-style: none;\n  border: solid 1px #ccc;\n}\nID Selector: The ID selector is used for selecting any HTML element that has an ID attribute same as the selector. In the below example, the assigned styles will get applied to all the elements having the ID container.\n#container {\n  width: 960px;\n  margin: 0 auto;\n}\n<div id=\"container\"></div>\nClass Selector: The class selector choses all the page elements with class attributes that are set to the same value as the class. The styles get applied to all the elements having the same ID on the page.\n.box {\n  padding: 10px;\n  margin: 10px;\n  width: 240px;\n}\n<div class=\"box\"></div>\nDescendant Combinator: The descendant selector or, more accurately, the descendant combinator lets you combine two or more selectors and be more specific in the selection method.\n#container .box {\nfloat: left;\npadding-bottom: 15px;\n} \n<div id=\"container\">\n<div class=\"box\"></div>\n<div class=\"box-2\"></div>\n</div>\n<div class=\u201dbox\u201d></div>\nIn the above example, the declaration block applies to all elements having a class, \u201cbox\u201d, that is inside an element with the ID, \u201ccontainer\u201d.  It is worth noting that the .box element does not have to be an immediate child; there can be another element wrapping the .box, and the styles will still apply.\nChild Combinator: The child combinator is similar to the descendant combinator, except it only targets immediate child elements.\n#container> .box {\nfloat: left;\npadding-bottom: 15px;\n}\n<div id=\"container\">\n<div class=\"box\"></div>\n<div>\n<div class=\"box\"></div>\n</div>\n</div>\nThe selector will match all elements that have a class, \u201cbox\u201d, and are immediate children of the element, \u201ccontainer\u201d.\nGeneral Sibling Combinator: The general sibling combinator matches elements based on sibling relationships. The selected elements are adjacent to each other in HTML.\nh2 ~ p {\nmargin-bottom: 20px;\n}\n<h2>Title</h2>\n<p>Paragraph example.</p>\n<p>Paragraph example.</p>\n<p>Paragraph example.</p>\n<div class=\u201dbox\u201d>\n<p>Paragraph example.</p>\n</div>\nIn the above example, all paragraph elements, (<p>), will be styled with the specified rules, but only if they are siblings of <h2> elements. Even if there are other elements in between <h2> and <p>, the styles will still apply.\nAdjacent Sibling Combinator: The adjacent sibling combinator is almost the same as the general sibling selector but the targeted element must be an immediate sibling, not just a general sibling. The adjacent sibling combinator uses the plus symbol, (+).\np + p {\ntext-indent: 1.Sem;\nmargin-bottom: 0;\n}\n<h2>Title</h2>\n<p>Paragraph example.</p>\n<p>Paragraph example.</p>\n<p>Paragraph example.</p>\n<div class=\u201dbox\u201d>\n<p>Paragraph example.</p>\n<p>Paragraph example.</p>\n</div>\nIn the above example, the specified styles will apply only to those paragraph elements that immediately follow other paragraph elements. This means that the first paragraph element on a page will not receive these styles.If there are other elements appearing between two paragraphs, the styles will not apply to the second paragraph.\nAttribute Selector: The attribute selector targets elements based on the presence and/or value of HTML attributes. It is declared using square brackets.\ninput [type=\u201dtext\u201d] {\nbackground-color: #444;\nwidth: 200px;\n}\n<input type=\"text\">",
        "reference": "intellipaat.com"
    },
    {
        "question": "10. What is a CSS preprocessor? What are SASS, LESS, and Stylus? Why do people use them?",
        "answer": "A CSS preprocessor allows us to generate CSS from the preprocessor\u2019s own unique syntax. It extends the basic functionality of default vanilla CSS through its own scripting language. With a CSS preprocessor, it is possible to use complex logical syntax such as variables, mixins, functions, code nesting, inheritance, etc.\nSASS: Syntactically awesome style sheets (SASS) is a CSS preprocessor. It reduces the repetition of CSS, thus saving time. SASS can be written in two different syntaxes. The original syntax, called the indented syntax, uses indentation to separate code blocks and newline characters to separate rules.\nThe newer syntax, Sassy CSS (SCSS), uses block formatting, like CSS, and braces to denote code blocks and semicolons to separate rules within a block. The indented syntax and SCSS files have the extensions .sass and .scss respectively.\nLESS: Learner style sheets, or LESS, are easy to add to any JavaScript project with the help of npm or less.js file. It uses the extension .less. LESS syntax is similar to SCSS with some exceptions. It uses @ to define the variables.\nStylus: Stylus is quite flexible when it comes to writing syntax. It supports native CSS and allows omission of colons, semicolons, and brackets. @ or $ does not need to be used for defining variables.\nThese CSS processors are used because they help build inventive features to CSS by using variables, mixins, nesting, and extending.\nWatch this Video on Web Developer Interview Questions and Answers:",
        "reference": "intellipaat.com"
    },
    {
        "question": "11. What is the difference between reset CSS and normalize CSS?",
        "answer": "Reset CSS attempts to remove all built-in browser styling, while normalize CSS aims for consistency in built-in browser styling across browsers. Normalize CSS also fixes bugs for common browser dependencies.\nCheck out our PHP Interview Questions to ace your next interview!",
        "reference": "intellipaat.com"
    },
    {
        "question": "12. What is the difference among inline, inline-block, and block elements?",
        "answer": "Block Element: Block elements always start on a new line and occupy an entire row or width. Examples of block elements are <div> and <p>.\nInline Elements: Inline elements do not start on a new line; they appear on the same line as the content and tags beside them. Some examples of inline elements are <a>, <strong>, <span>, and <img>.\nInline-block Elements: Inline-block elements are similar to inline elements, but they can have padding, margins, and set height and width values.\nCheck out the Web Development Interview Questions for Freshers.",
        "reference": "intellipaat.com"
    },
    {
        "question": "13. What are pseudo elements and pseudo classes?",
        "answer": "Pseudo elements help to create items that do not normally exist in the document tree. The examples of pseudo elements are:\n::before\n::after\n::selection\n::first-letter\n::first-line\nPseudo classes select regular elements under specific conditions such as when a user is hovering over a link. The examples of pseudo classes are:\n:hover\n:active\n:link\n:visited\n:focus",
        "reference": "intellipaat.com"
    },
    {
        "question": "14. What is a responsive web design?",
        "answer": "A responsive web design is about design and development that responds to the user activities and the components involved such as screen size, platform, and orientation. It comprises a mix of flexible grids, layouts, images, and intellectual use of CSS media queries.",
        "reference": "intellipaat.com"
    },
    {
        "question": "15. What are the differences between adaptive design and responsive design?",
        "answer": "Adaptive Design Responsive Design\nIt focuses on multiple fixed layout sizes in website development. It focuses on showing content based on available browser space.\nIn this kind of website design, first the available space is detected and then the layout, with most appropriate size, is picked and used to display the content. Resized browser window has no effect on the design. In this kind of website design, when the browser window is resized, the content of the website is dynamically and optimally rearranged to accommodate the window.\nIt uses six standard screen widths, 320 px, 480 px, 760 px, 960 px, 1200 px, and 1600 px. Depending on the target device\u2019s properties, it uses CSS media queries to change styles for adapting to different screens.\nIt takes a lot of time and effort because  the options and realities of the end users  need to be examined first and then the best possible adaptive solutions are designed. Building and designing fluid websites that can accommodate content depending on the screen size does not take much work.\nIt gives a lot of control over the design for specific screens. It does not allow much control over the design.",
        "reference": "intellipaat.com"
    },
    {
        "question": "16. What are the properties of Flexbox?",
        "answer": "The numerous characteristics of CSS Flexbox can be used to create intricate and powerful compositions.\ndisplay is used to describe a flex container. The flex value is utilized to establish a flex container.\nflex-direction is employed to determine the direction of the primary axis, which is the axis that flex items are arranged along. This property can have the values row, row-reverse, column, and column-reverse.\njustify-content aligns flex items parallel to the primary axis. This property can take many different values, including flex-start, flex-end, center, space-between, space-around, and space-evenly.\nalign-items align flex items perpendicular to the primary axis. Flex-start, flex-end, center, baseline, and stretch are all possible values for this attribute.\nflex wrap determines whether or not flex items should wrap when their width exceeds the width of the flex container. This property\u2019s possible values are nowrap, wrap, and wrap-reverse.\nalign-content, When there is extra space in the flex container, use align-content to align flex lines perpendicular to the major axis. This property\u2019s likely values are flex-start, flex-end, center, space-between, space-around, and stretch.\nflex is employed to establish the flex grow, flex shrink, and flex basis of a flex item. The shorthand property flex creates all three values at the same time. The individual properties are flex-grow, flex-shrink, and flex-basis.\n\nCSS Interview Questions for Experienced (2 to 5 Years)",
        "reference": "intellipaat.com"
    },
    {
        "question": "17. What is the difference between physical and logical tags?",
        "answer": "Logical tags mainly focus on the content and are older as compared to the physical tags. Logical tags are hardly used in terms of presentation. In terms of aesthetics, logical tags do not serve any purpose. However, physical tags find their application in presentation.",
        "reference": "intellipaat.com"
    },
    {
        "question": "18. What is the use of CSS image sprites?",
        "answer": "It is a group of images placed into one image. A web page with multiple images can take a lot of time to load and uses multiple server requests to project the same. With the help of image sprites, we can decrease the number of requests to the server and save time and bandwidth as well.",
        "reference": "intellipaat.com"
    },
    {
        "question": "19. What is the syntax to link an external style sheet?",
        "answer": "An external style sheet comprises style description that can be linked with the HTML document externally. An external style sheet is one of the best and most organized ways to keep the style separate from the structure.\nThe syntax for linking an external style sheet is as follows:\n<HTML>\n<HEAD>\n<LINK REL=STYLESHEET HREF=\"Test.css\" TYPE=\"text/css\">\n</HEAD>\n</HTML>\nIf you wish to learn more about HTML, then you can take up this HTML and jQuery Course.",
        "reference": "intellipaat.com"
    },
    {
        "question": "20. How can embedded style be linked with HTML documents?",
        "answer": "Embedded style can be implemented within HTML code. It is written using the <Style> tag and used under the <Head> structure.\nIts syntax is as follows:\n<HEAD>\n<STYLE TYPE=\u201dtext/css\u201d>\nstyle {text-indent: 15pt;}\nstyle1{text-color: #060000;}\n</STYLE>\n</HEAD>",
        "reference": "intellipaat.com"
    },
    {
        "question": "21. Why is the imported function an easy way to insert a file?",
        "answer": "An imported style sheet permits us to import external files or combine one style sheet with another. Many files can be created, and different style sheets have different functions. The import function gives the provision to combine many elements or functionalities into one. The syntax to import any file is @import notation, which is used inside the <Style> tag. There is a one rule that implies that the last imported sheet will override the previous ones.\nThe syntax is shown by coding as:\n<Link Rel=Stylesheet Href=\u201dMain.Css\u201d Type=\u201dText/Css\u201d>\n<STYLETYPE=\u201dtext=css\u201d>\n<!\u2013\n@import url(http://www.xyz.css);\n\u2026. your code\n\u2013>\n</STYLE>\nThe <!\u2013 \u2013> tag is used as a comment for browsers that do not support CSS.",
        "reference": "intellipaat.com"
    },
    {
        "question": "22. What are the advantages of using CSS?",
        "answer": "The main advantages of using CSS are:\nSeparation of Content from Presentation: CSS enables presentation of the same content in multiple formats for mobile, desktop, or laptop.\nBandwidth: When CSS is used effectively, the browser cache can store the style sheets and these can be used on multiple pages without the need to redownload.\nEasy to Maintain: By making small changes, CSS can be used to completely change the look and feel of a web page. For a global change, we simply have to change the style, and all elements in all web pages will be automatically updated.",
        "reference": "intellipaat.com"
    },
    {
        "question": "23. How are the CSS selectors matched against the elements by the browser?",
        "answer": "The order of matching selectors is from right to left of the selector expression. Based on the key selectors, DOM elements are filtered by browsers and are then traversed up to the parent elements to determine the matches. The speed of deciding the elements is based on the length of the chain of selectors.",
        "reference": "intellipaat.com"
    },
    {
        "question": "24. How is border-box different from content-box?",
        "answer": "The border-box property contains the content, border, and padding in height and width properties. If you look at the example below, the box-sizing for the div element is set as border-box. The height and width considered for the div content will also include the padding and border:\ndiv{\n    width:300px;\n    height:200px;\n    padding:15px;\n    border: 5px solid grey;\n    margin:30px;\n    -moz-box-sizing:border-box;\n    -webkit-box-sizing:border-box;\n    box-sizing:border-box;\n}\nThe actual height of the div content in this case is:\nactual height = height - \n                padding on top and bottom - \n                border on top and bottom\n              = 200 - (15*2) - (5*2) \n              = 160 px\nThe actual width of the div content in this case is:\nactual width  = width - \n                padding on right and left - \n                border on right and left\n              = 300 - (15*2) - (5*2) \n              = 260 px\nLet us take a look at the border-box model for the above example:\n\nContent-box, on the other hand, is the default value box-sizing property. Height and the width properties do not include border and padding and only have content. For example:\ndiv{\n    width:300px;\n    height:200px;\n    padding:15px;\n    border: 5px solid grey;\n    margin:30px;\n    -moz-box-sizing:content-box;\n    -webkit-box-sizing:content-box;\n    box-sizing:content-box;\n}\nHere, content-box is the box-sizing for the div element. The height and width for the div content do not include padding and border. The full height and width parameters are specified for the content as shown below:",
        "reference": "intellipaat.com"
    },
    {
        "question": "25. Explain RGB stream",
        "answer": "RGB represents the colors in CSS. The RGB streams are namely red, green, and blue. The intensity of the colors can be set from 0 to 255. It enables CSS to have a spectrum of visible colors.",
        "reference": "intellipaat.com"
    },
    {
        "question": "26. Define z-index",
        "answer": "Z-index helps specify the stack order of elements that overlap each other. While the default value of z-index is zero, it can take both positive and negative values. An element with a greater stack order is always above the element with a lower stack order.\nZ-index can assume the following values:\nauto: It sets the stack order equal to its parents.\nnumber: It sets the stack order of the element. Negative values are allowed.\ninitial: It sets this property to its default value.\ninherit: It inherits this property from its parent element.",
        "reference": "intellipaat.com"
    },
    {
        "question": "27. When should translate () be used instead of absolute positioning?",
        "answer": "Translate is a CSS transform value. Changing the opacity or transform does not trigger the browser reflow or repaint. Transform requires the browser to create a GPU layer for elements. However, CPU usage changes absolute positioning properties.\ntranslate() involves reduced paint times and is more efficient. Unlike when changing absolute positioning, the element occupies original space when translate () is used.",
        "reference": "intellipaat.com"
    },
    {
        "question": "28. Name the different ways to position some aspects in CSS",
        "answer": "The positioning method type is determined by the positioning property. The five different position values are:\nfixed\nstatic\nabsolute\nsticky\nrelative\nThe elements are positioned with the help of top, left, right, and bottom properties. These properties need to be set first, and they work depending on position value.",
        "reference": "intellipaat.com"
    },
    {
        "question": "29. What are mixins?",
        "answer": "A mixin returns a single value and is somewhat similar to a function block of code. It allows us to make groups of CSS declarations that may be reused throughout the site. It helps keep the SASS very DRY. The values can be passed on to make the mixins more flexible. To create a mixin, the @mixin directive is used and given a name.",
        "reference": "intellipaat.com"
    },
    {
        "question": "30. How can a web page be optimized for prints?",
        "answer": "A website typically contains a header, footer, sidebar, navbar, and main content area. The content sections of the website need to be identified and controlled. By doing so, most of the work is done.\nThe integrity of the website should not be changed. It is recommended to use page breaks, create a style sheet for print, size the page for print, and avoid unnecessary HTML tables.",
        "reference": "intellipaat.com"
    },
    {
        "question": "31. What is the property that is used to control image scroll?",
        "answer": "The background-attachment property is used to set whether the background image remains fixed or is scrollable with the rest of the page. Here is an example for a fixed background-image:\nbody {\n  background-image: url(\u2018url_of_image\u2019);\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\nTo acquire the skills necessary to become a Web Developer, you must enroll in one of the best Web Development Courses Online!",
        "reference": "intellipaat.com"
    },
    {
        "question": "32. What are the Differences between CSS flexbox and CSS grid?",
        "answer": "CSS Flexbox and Gridare are CSS layout systems, although they have different purposes and qualities. Flexbox is useful for simpler, one-dimensional layouts for regulating item alignment within a container, whereas CSS Grid is great for more complicated, multi-dimensional layouts with a lot of item placement options.",
        "reference": "intellipaat.com"
    },
    {
        "question": "33. In CSS, what are pseudo-classes? Give an illustration.",
        "answer": "Pseudo-classes are keywords that specify a special state of an element. An example is the :hover pseudo-class, which applies styles when the mouse is over an element. \nFor instance,\n \na:hover {\n    color: red;\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "34. What distinguishes visibility: hidden from display: none?",
        "answer": "Display: none eliminates an element from the layout, preventing it from showing up on the page or occupying any space. \nVisibility: hidden makes the element invisible, although it still takes up room in the arrangement.",
        "reference": "intellipaat.com"
    },
    {
        "question": "35. In CSS, how can an element be centered vertically?",
        "answer": ".container {\n    display: flex;\n    justify-content: center; /* horizontally center */\n    align-items: center; /* vertically center */\n    height: 100vh; /* adjust as needed */\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "36. Why would you use a CSS preprocessor such as Sass or Less?",
        "answer": "Preprocessors for CSS add features like variables, nesting, mixins, and functions to extend the possibilities of CSS. They make stylesheets more scalable and maintainable.",
        "reference": "intellipaat.com"
    },
    {
        "question": "37. How may CSS be used to create a responsive design?",
        "answer": "Responsive design can be achieved using CSS media queries to apply different styles based on the device\u2019s screen size or orientation.\n \n@media screen and (max-width: 600px) {\n    /* Styles for small screens */\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "38. What distinguishes inline display attributes from inline-block display properties?",
        "answer": "Inline elements don\u2019t begin on a new line; instead, they flow with the surrounding content. Two instances are <span> and <a>.\nSimilar to inline elements, inline-block elements can also have height/width, padding, and margin values. They can be positioned using the top, bottom, left, and right attributes and do not begin on a new line.",
        "reference": "intellipaat.com"
    },
    {
        "question": "39. Why is the CSS z-index attribute used?",
        "answer": "The stacked order of positioned items is managed by the z-index attribute. It describes an element\u2019s stack order in relation to other elements on the page. Elements with lower z-index values are stacked underneath those with higher z-index values.",
        "reference": "intellipaat.com"
    },
    {
        "question": "40. How do you create a CSS animation?",
        "answer": "@keyframes slidein {\n    from {\n        transform: translateX(-100%);\n    }\n    to {\n        transform: translateX(0);\n    }\n}\n\n.element {\n    animation: slidein 1s ease-in-out;\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "41. What are sprites in CSS? How can website performance be enhanced?",
        "answer": "CSS sprites use CSS to display particular portions of a picture by combining many images into a single image. By lowering the quantity of HTTP requests needed to load many images, they enhance website performance by speeding up page loads.",
        "reference": "intellipaat.com"
    },
    {
        "question": "42. What is the overflow attribute in CSS used for?",
        "answer": "The handling of material that extends beyond the boundaries of its contained element is determined by the overflow attribute. It has four settings: scroll, auto, hidden, and visible.",
        "reference": "intellipaat.com"
    },
    {
        "question": "43. Describe the advantages of the CSS grid layout paradigm.",
        "answer": "A two-dimensional layout method for grouping elements in rows and columns is the CSS grid layout. When compared to more conventional techniques like flexbox or floats, it offers a more potent and adaptable way to design grid-based layouts. The precise arrangement and alignment of items within a grid are made possible by grid layout.",
        "reference": "intellipaat.com"
    },
    {
        "question": "44. How can a responsive navigation menu be made with CSS?",
        "answer": "One method for making the navigation menu\u2019s layout flexible is to utilize CSS flexbox or CSS grid. The menu\u2019s style and layout can then be modified using media queries in accordance with the screen size. For improved usability, other methods, such as employing the checkbox hack to hide the menu behind a toggle button on smaller screens, might be utilized.",
        "reference": "intellipaat.com"
    },
    {
        "question": "45. How do you create a sticky header using CSS?",
        "answer": "@keyframes slidein {\n    from {\n        transform: translateX(-100%);\n    }\n    to {\n        transform: translateX(0);\n    }\n}\n\n.element {\n    animation: slidein 1s ease-in-out;\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "46. Describe the effects of the CSS box model on layout.",
        "answer": "The organization of the items on a web page is described by the CSS box model. Content, padding, border, and margin make up its components. Text and images are displayed in the content area, which is surrounded by a border; the space outside the border is known as the margin. Padding is the area that appears between the content and the border. It determines how an element fits into the layout and how it works with other elements.",
        "reference": "intellipaat.com"
    },
    {
        "question": "47. Describe the advantages of the CSS flexbox layout approach over conventional layout techniques.",
        "answer": "A style concept known as CSS Flexible Box style, or flexbox, enables the development of responsive and adaptable layouts with a single-dimensional axis (horizontal or vertical).\nCompared to more conventional layout techniques like floats or positioning, it offers a more effective and natural approach to dividing up space and orienting objects inside a container.\nPowerful capabilities offered by Flexbox include the ability to quickly rearrange objects, manage space alignment and distribution, and automatically modify the layout according to the amount of available space and the size of the content.\nIts benefits include better responsiveness, simpler and cleaner markup, and enhanced support for intricate layouts without the need for workarounds or hacks.\n\nAdvanced CSS Interview Questions (6 to 12 Years)",
        "reference": "intellipaat.com"
    },
    {
        "question": "48. How may a responsive design be created without the use of media queries?",
        "answer": "Applying relative measurements for widths, heights, and margins, such as percentages and viewport units (vw, vh)\nUsing CSS grids and flexboxs for flexible layouts\nUsing proportionate, em, or rem-based font sizes with flowing typography.",
        "reference": "intellipaat.com"
    },
    {
        "question": "49. How can CSS performance be optimized for faster page loading?",
        "answer": "CSS files can be made smaller by minifying them.\nReducing the number of HTTP requests by combining several CSS files into one file\nAvoiding picks with excessive precision and nesting\nMinimizing the usage of pricey CSS attributes like border-radius and box-shadow\nReducing the number of server requests by integrating smaller images into a single image using CSS sprites",
        "reference": "intellipaat.com"
    },
    {
        "question": "50. Describe the differences between the CSS selectors :nth-child() and :nth-of-type().",
        "answer": ":nth-child(): Regardless of type, this function chooses elements based on where they are in a group of siblings.\n:nth-of-type(): Chooses components of a particular type according to where they fall in a sibling group.",
        "reference": "intellipaat.com"
    },
    {
        "question": "51. How can a modal dialogue that uses only CSS be implemented?",
        "answer": "To build a modal dialogue without JavaScript, use a combination of CSS sibling selectors and HTML input elements, such as a checkbox. Make use of CSS to display the modal once the input element is checked.\nAlso, check out our blog on React Js",
        "reference": "intellipaat.com"
    },
    {
        "question": "52. Provide examples of when and how to utilize CSS vendor prefixes, along with an explanation of their function.",
        "answer": "CSS vendor prefixes are used to add experimental or browser-specific CSS features that may not be fully supported across all browsers.\n.box {\n  -webkit-border-radius: 10px; /* Safari, Chrome */\n  -moz-border-radius: 10px; /* Firefox */\n  border-radius: 10px; /* Standard */\n}",
        "reference": "intellipaat.com"
    },
    {
        "question": "53. Describe the function of CSS custom properties, often known as variables, and give instances of how to use them.",
        "answer": "CSS custom properties, or variables, allow for the definition of reusable values in CSS.\n:root {\n  --primary-color: #3498db;\n}\n.button {\n  background-color: var(--primary-color);\n}",
        "reference": "intellipaat.com"
    }
]