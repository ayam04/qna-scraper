[
    {
        "question": "Learn and master SOA from this comprehensive tutorial:",
        "answer": "Basic Interview Questions",
        "reference": "intellipaat.com"
    },
    {
        "question": "1. Compare SOA & Microservices",
        "answer": "Criteria SOA Microservices\nDeployment In a shared Bus At the edge\nGoals One for all As per the business units\nBack-end implementation Not prescriptive prescriptive",
        "reference": "intellipaat.com"
    },
    {
        "question": "2. What is SOA?",
        "answer": "SOA is an architecture for building applications using reusable, interoperable services which have well defined business functionalities and can be orchestrated to achieve a specific functionality by utilizing them together.",
        "reference": "intellipaat.com"
    },
    {
        "question": "3. What are the main features of SOA?",
        "answer": "SOA separates business functions into services (endpoints), which are made accessible over a network in order to allow users to combine and reuse them in their applications.\nThe SOA services can be developed in different languages and OS\u2019es as long as they follow the SOA principles.\nServices are unassociated and loosely coupled units that do not directly rely on each other for their full functioning. Rather than services embedding calls to each other in their source code, they use defined protocols that describe how services pass and parse messages using description metadata.\n Orchestration is a process where business functionality from various services are combined in a system fully aware of all available services and the associated metadata that defines these services and their characteristics.",
        "reference": "intellipaat.com"
    },
    {
        "question": "4. Mention the SOA Principles?",
        "answer": "SOA principles were first defined by Thomas Erl. These 8 principles are underlying to any good architecture that utilizes SOA design to build their products and services:\nStandardized service contract: Services adhere to a communications agreement, as defined collectively by one or more service-description documents.\n Service loose coupling: Services maintain a relationship that minimizes dependencies and only requires that they maintain an awareness of each other.\n Service abstraction: Beyond descriptions in the service contract, services hide logic from the outside world.\n Service re usability: Logic is divided into services with the intention of promoting reuse.\nService autonomy: Services have control over the logic they encapsulate.\n Service statelessness: Services minimize resource consumption by deferring the management of state information when necessary\n Service dis coverability: Services are supplemented with communicative meta data by which they can be effectively discovered and interpreted.\nService composability: Services are effective composition participants, regardless of the size and complexity of the composition.",
        "reference": "intellipaat.com"
    },
    {
        "question": "5. What are the main benefits of SOA?",
        "answer": "SOA helps create greater alignment between IT and line of business while generating more flexibility \u2013 IT flexibility to support greater business flexibility. Your business processes are changing faster and faster and global competition requires the flexibility that SOA can provide.\nSOA can help you get better reuse out of your existing IT investments as well as the new services you\u2019re developing today. SOA makes integration of your IT investments easier by making use of well-defined interfaces between services. SOA also provides an architectural model for integrating business partners\u2019, customers\u2019 and suppliers\u2019 services into an enterprise\u2019s business processes. This reduces cost and improves customer satisfaction.\nNow that you are aware of the benefits of SOA, Check the SOA training course.\nGet 100% Hike!\nMaster Most in Demand Skills Now !\nBy providing your contact details, you agree to our Terms of Use & Privacy Policy\n\nIntermediate Interview Questions",
        "reference": "intellipaat.com"
    },
    {
        "question": "6. How do you transform an Enterprise business in a SOA?",
        "answer": "Transforming an enterprise business to Service Oriented Architecture includes obtaining standardized service contract, service reusability, service abstraction, service loose coupling, service compos ability and so on.\nOf course SOA is an architectural model agnostic to technology platforms and every enterprise can pursue the strategic goals associated with service-oriented computing using different technologies. However in the current marketplace, Web Services are probably the technology platform that better suits SOA principles and are most used to get to this architecture.",
        "reference": "intellipaat.com"
    },
    {
        "question": "7. What is a reusable Service?",
        "answer": "It is an autonomous, reusable, discoverable, stateless functionality that has the necessary granularity, and can be part of a composite application or a composite service.A reusable service should be identified with a business activity described by the service specifications (design-time contract).\nA service\u2019s constraints, including security, QoS, SLA, usage policies, may be defined by multiple run-time contracts, multiple interfaces (the WSDL for a SOAP Web Service), and multiple implementations (the code).\nA reusable service should be governed at the enterprise level throughout its entire lifecycle, from design-time through run-time. Its reuse should be promoted through a prescriptive process, and that reuse should be measured.",
        "reference": "intellipaat.com"
    },
    {
        "question": "8. What are the common pitfalls of SOA?",
        "answer": "One of the most common pitfalls is to view SOA as an end, rather than a means to an end. Developers who focus on building an SOA solution rather than solving a specific business problem are more likely to create complex, unmanageable, and unnecessary interconnections between IT resources. Another common pitfall is to try to solve multiple problems at once, rather than solving small pieces of the problem. Taking a top-down approach \u2013 starting with major organization-wide infrastructure investments \u2013 often fails either to show results in a relevant timeframe or to offer a compelling return on investment.",
        "reference": "intellipaat.com"
    },
    {
        "question": "9. How can you achieve loose coupling in a SOA?",
        "answer": "One strategy for achieving loose coupling is to use the service interface (the WSDL for a SOAP Web Service) to limit this dependency, hiding the service implementation from the consumer. Loose coupling can be addressed by encapsulating the service functionalities in a manner that limits the impact of changes to the implementation on the service interface.\nHowever, at some point you will need to change the interface and manage versioning without impacting service consumers, in addition to managing multiple security constraints, multiple transports, and other considerations.",
        "reference": "intellipaat.com"
    },
    {
        "question": "10. What is the most important skill needed to adopt SOA ?technical or cultural?",
        "answer": "Surely cultural. SOA does require people to think of business and technology differently. Instead of thinking of technology first (e.g., If we implement this system, what kinds of things can we do with it?), practitioners must first think in terms of business functions, or services (e.g., My company does these business functions, so how can I set up my IT system to do those things for me most efficiently?).\nIt is expected that adoption of SOA will change business IT departments, creating service-oriented (instead of technology-oriented) IT organizations.",
        "reference": "intellipaat.com"
    }
]